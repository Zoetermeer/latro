-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from Parse.y
-----------------------------------------------------------------------------

state 18 contains 3 shift/reduce conflicts.
state 20 contains 5 shift/reduce conflicts.
state 31 contains 1 shift/reduce conflicts.
state 33 contains 2 shift/reduce conflicts.
state 101 contains 2 shift/reduce conflicts.
state 111 contains 10 shift/reduce conflicts.
state 123 contains 1 shift/reduce conflicts.
state 125 contains 1 shift/reduce conflicts.
state 208 contains 2 shift/reduce conflicts.
state 299 contains 1 shift/reduce conflicts.
state 329 contains 1 shift/reduce conflicts.
state 334 contains 1 shift/reduce conflicts.
state 354 contains 1 shift/reduce conflicts.
state 375 contains 5 shift/reduce conflicts.

rule 4 is unused
rule 5 is unused
rule 6 is unused
rule 7 is unused
rule 8 is unused
rule 11 is unused
rule 12 is unused
rule 13 is unused
rule 19 is unused
rule 20 is unused
rule 73 is unused
rule 74 is unused
rule 75 is unused
rule 170 is unused
rule 171 is unused
rule 172 is unused
rule 182 is unused
rule 183 is unused
rule 184 is unused
rule 185 is unused
rule 195 is unused
rule 196 is unused
rule 233 is unused
rule 234 is unused
rule 235 is unused

terminal test is unused
terminal else is unused
terminal case is unused
terminal ':=' is unused
terminal '=>' is unused
terminal '::' is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_ruleParseTopLevel -> CompUnit               (0)
	%start_ruleParseInteractive -> InteractiveCompUnit   (1)
	CompUnit -> OneOrMoreTopLevelExps                  (2)
	InteractiveCompUnit -> InteractiveExp              (3)
	OneOrMoreExps -> Exp                               (4)
	OneOrMoreExps -> OneOrMoreExps Exp                 (5)
	ZeroOrMoreExps -> Exp                              (6)
	ZeroOrMoreExps -> OneOrMoreExps Exp                (7)
	ZeroOrMoreExps ->                                  (8)
	Block -> '{' ExpOrAssigns '}'                      (9)
	TopLevelExp -> ModuleDec                           (10)
	ZeroOrMoreTopLevelExps -> TopLevelExp              (11)
	ZeroOrMoreTopLevelExps -> ZeroOrMoreTopLevelExps TopLevelExp   (12)
	ZeroOrMoreTopLevelExps ->                          (13)
	OneOrMoreTopLevelExps -> TopLevelExp               (14)
	OneOrMoreTopLevelExps -> OneOrMoreTopLevelExps TopLevelExp   (15)
	ZeroOrMoreModuleLevelExps -> ModuleLevelExp        (16)
	ZeroOrMoreModuleLevelExps -> ZeroOrMoreModuleLevelExps ModuleLevelExp   (17)
	ZeroOrMoreModuleLevelExps ->                       (18)
	OneOrMoreModuleLevelExps -> ModuleLevelExp         (19)
	OneOrMoreModuleLevelExps -> OneOrMoreModuleLevelExps ModuleLevelExp   (20)
	ModuleLevelExp -> InterfaceDecExp                  (21)
	ModuleLevelExp -> TypeDec                          (22)
	ModuleLevelExp -> ProtoDec                         (23)
	ModuleLevelExp -> ProtoImp                         (24)
	ModuleLevelExp -> PrecedenceAssign                 (25)
	ModuleLevelExp -> ModuleLevelBindingExp            (26)
	InteractiveExp -> InterfaceDecExp                  (27)
	InteractiveExp -> TypeDec                          (28)
	InteractiveExp -> ModuleDec                        (29)
	InteractiveExp -> PrecedenceAssign                 (30)
	InteractiveExp -> ExpOrAssign                      (31)
	ImportExp -> import SimpleOrQualifiedId            (32)
	ImportExp -> import SimpleOrQualifiedId '=' simple_id   (33)
	CommaSeparatedSimpleOrMixedIds -> SimpleOrMixedId   (34)
	CommaSeparatedSimpleOrMixedIds -> CommaSeparatedSimpleOrMixedIds ',' SimpleOrMixedId   (35)
	ImportExceptClause -> except '(' CommaSeparatedSimpleOrMixedIds ')'   (36)
	Renaming -> SimpleOrMixedId '->' SimpleOrMixedId   (37)
	CommaSeparatedRenamings -> Renaming                (38)
	CommaSeparatedRenamings -> CommaSeparatedRenamings ',' Renaming   (39)
	ImportRenamingClause -> renaming '(' CommaSeparatedRenamings ')'   (40)
	ImportClause -> ImportExceptClause                 (41)
	ImportClause -> ImportRenamingClause               (42)
	ImportClauses -> ImportClause                      (43)
	ImportClauses -> ImportClauses ImportClause        (44)
	ImportSubset -> '(' CommaSeparatedSimpleOrMixedIds ')'   (45)
	SelectiveImportExp -> ImportExp ImportSubset '{' ImportClauses '}'   (46)
	SelectiveImportExp -> ImportExp '{' ImportClauses '}'   (47)
	SelectiveImportExp -> ImportExp ImportSubset       (48)
	SelectiveImportExp -> ImportExp                    (49)
	ModuleDec -> module SimpleOrQualifiedId '{' ZeroOrMoreModuleLevelExps '}'   (50)
	Constraint -> when SimpleOrMixedId ':' SimpleOrMixedId   (51)
	Constraints -> Constraint                          (52)
	Constraints -> Constraints Constraint              (53)
	Constraints ->                                     (54)
	ProtoDecBody -> '{' ZeroOrMoreTyAnns '}'           (55)
	ProtoDec -> protocol SimpleOrMixedId on SimpleOrMixedId Constraints ProtoDecBody   (56)
	ProtoImp -> imp SimpleTy ':' SimpleOrMixedId Constraints '{' ZeroOrMoreModuleLevelBindingExps '}'   (57)
	TupleRestExps -> ',' Exp                           (58)
	TupleRestExps -> TupleRestExps ',' Exp             (59)
	LiteralPatExp -> num                               (60)
	LiteralPatExp -> True                              (61)
	LiteralPatExp -> False                             (62)
	LiteralPatExp -> string                            (63)
	LiteralPatExp -> char                              (64)
	TuplePatExpsRest -> ',' PatExp                     (65)
	TuplePatExpsRest -> TuplePatExpsRest ',' PatExp    (66)
	TuplePatExp -> '%(' PatExp TuplePatExpsRest ')'    (67)
	AdtPatExp -> SimpleOrQualifiedId '(' ZeroOrMorePatExps ')'   (68)
	AdtPatExp -> QualifiedId                           (69)
	ZeroOrMorePatExps -> PatExp                        (70)
	ZeroOrMorePatExps -> ZeroOrMorePatExps ',' PatExp   (71)
	ZeroOrMorePatExps ->                               (72)
	OneOrMorePatExps -> PatExp                         (73)
	OneOrMorePatExps -> OneOrMorePatExps ',' PatExp    (74)
	OneOrMorePatExps ->                                (75)
	AtomPatExp -> '(' PatExp ')'                       (76)
	AtomPatExp -> LiteralPatExp                        (77)
	AtomPatExp -> TuplePatExp                          (78)
	AtomPatExp -> AdtPatExp                            (79)
	AtomPatExp -> SimpleOrMixedId                      (80)
	AtomPatExp -> '_'                                  (81)
	ListPatExp -> AtomPatExp '@' ListPatExp            (82)
	ListPatExp -> '[' ZeroOrMorePatExps ']'            (83)
	ListPatExp -> AtomPatExp                           (84)
	PatExp -> ListPatExp                               (85)
	CommaSeparatedExps -> Exp                          (86)
	CommaSeparatedExps -> CommaSeparatedExps ',' Exp   (87)
	CommaSeparatedExps ->                              (88)
	ListExp -> '[' CommaSeparatedExps ']'              (89)
	CommaSeparatedIds -> SimpleOrMixedId               (90)
	CommaSeparatedIds -> CommaSeparatedIds ',' SimpleOrMixedId   (91)
	CommaSeparatedIds ->                               (92)
	SingleParamFunHeader -> fun '(' PatExp ')'         (93)
	MultiParamFunHeader -> fun '(' PatExpList ',' PatExp ')'   (94)
	FunHeader -> SingleParamFunHeader                  (95)
	FunHeader -> MultiParamFunHeader                   (96)
	FunHeader -> fun '(' ')'                           (97)
	CommaSeparatedLiteralExps -> LiteralExp            (98)
	CommaSeparatedLiteralExps -> CommaSeparatedLiteralExps ',' LiteralExp   (99)
	CommaSeparatedLiteralExps ->                       (100)
	LiteralListExp -> '[' CommaSeparatedLiteralExps ']'   (101)
	LiteralExp -> num                                  (102)
	LiteralExp -> True                                 (103)
	LiteralExp -> False                                (104)
	LiteralExp -> string                               (105)
	LiteralExp -> char                                 (106)
	LiteralExp -> SimpleOrQualifiedId                  (107)
	AtomExp -> '(' Exp ')'                             (108)
	AtomExp -> '(' ')'                                 (109)
	AtomExp -> '(' SpecialId ')'                       (110)
	AtomExp -> '%(' Exp TupleRestExps ')'              (111)
	AtomExp -> ListExp                                 (112)
	AtomExp -> SimpleOrQualifiedId '%{' StructFieldInitializers '}'   (113)
	AtomExp -> FunHeader FunBody                       (114)
	AtomExp -> prim '(' simple_id ')'                  (115)
	AtomExp -> LiteralExp                              (116)
	MemberAccessExp -> AppExp '#' SimpleOrMixedId      (117)
	MemberAccessExp -> AtomExp                         (118)
	AppExp -> AppExp '(' ArgExps ')'                   (119)
	AppExp -> MemberAccessExp                          (120)
	ConsExp -> AppExp '@' ConsExp                      (121)
	ConsExp -> AppExp                                  (122)
	CustomInfixExp -> CustomInfixExp SpecialId ConsExp   (123)
	CustomInfixExp -> ConsExp                          (124)
	IfElseExp -> if '(' Exp ')' Exp Exp                (125)
	Exp -> CustomInfixExp                              (126)
	Exp -> IfElseExp                                   (127)
	Exp -> switch '(' Exp ')' '{' CaseClauses '}'      (128)
	Exp -> cond '{' CondCaseClauses '}'                (129)
	Exp -> Block                                       (130)
	ExpOrAssign -> let PatExp '=' Exp                  (131)
	ExpOrAssign -> TyAnn                               (132)
	ExpOrAssign -> import SimpleOrQualifiedId          (133)
	ExpOrAssign -> import SimpleOrQualifiedId '=' simple_id   (134)
	ExpOrAssign -> Exp                                 (135)
	ExpOrAssigns -> ExpOrAssign                        (136)
	ExpOrAssigns -> ExpOrAssigns ExpOrAssign           (137)
	ModuleLevelBindingExp -> let PatExp '=' LiteralExp   (138)
	ModuleLevelBindingExp -> let PatExp '=' LiteralListExp   (139)
	ModuleLevelBindingExp -> FunDef                    (140)
	ModuleLevelBindingExp -> TyAnn                     (141)
	ModuleLevelBindingExp -> SelectiveImportExp        (142)
	ZeroOrMoreModuleLevelBindingExps -> ModuleLevelBindingExp   (143)
	ZeroOrMoreModuleLevelBindingExps -> ZeroOrMoreModuleLevelBindingExps ModuleLevelBindingExp   (144)
	ZeroOrMoreModuleLevelBindingExps ->                (145)
	PrecedenceAssign -> precedence SpecialId num       (146)
	FunDef -> SimpleOrMixedId '(' PatExpList ')' FunBody   (147)
	FunDef -> infixl '(' SpecialId ')' '(' PatExpList ')' FunBody   (148)
	FunBody -> '=' Exp                                 (149)
	TyParams -> '<' CommaSeparatedIds '>'              (150)
	TyParams ->                                        (151)
	TyAnn -> SimpleOrMixedId ':' Ty Constraints        (152)
	TyAnn -> SimpleOrMixedId '<' CommaSeparatedIds '>' ':' Ty Constraints   (153)
	TyAnn -> infixl '(' SpecialId ')' TyParams ':' Ty Constraints   (154)
	OneOrMoreTyAnns -> TyAnn                           (155)
	OneOrMoreTyAnns -> OneOrMoreTyAnns TyAnn           (156)
	ZeroOrMoreTyAnns -> OneOrMoreTyAnns                (157)
	ZeroOrMoreTyAnns ->                                (158)
	InterfaceDecExp -> interface SimpleOrMixedId TyParams '{' OneOrMoreTyAnns '}'   (159)
	CaseClauses -> CaseClause                          (160)
	CaseClauses -> CaseClauses CaseClause              (161)
	CaseClause -> PatExp '->' Exp                      (162)
	CondCaseClauses -> CondCaseClause                  (163)
	CondCaseClauses -> CondCaseClauses CondCaseClause   (164)
	CondCaseClause -> Exp '->' Exp                     (165)
	CondCaseClause -> '_' '->' Exp                     (166)
	ArgExps -> Exp                                     (167)
	ArgExps -> ArgExps ',' Exp                         (168)
	ArgExps ->                                         (169)
	FunParams -> SimpleOrMixedId                       (170)
	FunParams -> FunParams ',' SimpleOrMixedId         (171)
	FunParams ->                                       (172)
	TypeDecImplicit -> type TyParams Ty                (173)
	TypeDecImplicit -> type TyParams AdtAlternatives   (174)
	TypeDec -> type SimpleOrMixedId TyParams '=' Ty    (175)
	TypeDec -> type SimpleOrMixedId TyParams '=' AdtAlternatives   (176)
	TypeDec -> TypeDecImplicit                         (177)
	AdtAlternatives -> AdtAlternative                  (178)
	AdtAlternatives -> AdtAlternatives AdtAlternative   (179)
	AdtAlternative -> '|' SimpleOrMixedId '(' CommaSeparatedTys ')'   (180)
	AdtAlternative -> '|' SimpleOrMixedId              (181)
	Tys -> Ty                                          (182)
	Tys -> Tys Ty                                      (183)
	Tys ->                                             (184)
	InstancePat -> '(' PatExp ')' '.'                  (185)
	PatExpList -> PatExp                               (186)
	PatExpList -> PatExpList ',' PatExp                (187)
	PatExpList ->                                      (188)
	CommaSeparatedTys -> Ty                            (189)
	CommaSeparatedTys -> CommaSeparatedTys ',' Ty      (190)
	CommaSeparatedTys ->                               (191)
	TyTupleRest -> ',' Ty                              (192)
	TyTupleRest -> TyTupleRest ',' Ty                  (193)
	TyTuple -> '%(' Ty TyTupleRest ')'                 (194)
	OptionalImpClause -> ':' Ty                        (195)
	OptionalImpClause ->                               (196)
	TyArgs -> '<' CommaSeparatedTys '>'                (197)
	TyArgs ->                                          (198)
	SimpleTy -> primtype '(' simple_id ')'             (199)
	SimpleTy -> struct '{' TyStructFields '}'          (200)
	SimpleTy -> TyTuple                                (201)
	SimpleTy -> SimpleOrQualifiedAlphaNumericId TyArgs   (202)
	SimpleTy -> SimpleTy '[' ']'                       (203)
	SimpleTy -> '(' Ty ')'                             (204)
	TyArrow -> SimpleTy                                (205)
	TyArrow -> SimpleTy '->' TyArrow                   (206)
	TyArrow -> '(' '->' Ty ')'                         (207)
	Ty -> TyArrow                                      (208)
	TyStructField -> SimpleOrMixedId ':' Ty            (209)
	TyStructFields -> TyStructField                    (210)
	TyStructFields -> TyStructFields TyStructField     (211)
	TyStructFields ->                                  (212)
	StructFieldInitializer -> SimpleOrMixedId '=' Exp ';'   (213)
	StructFieldInitializers -> StructFieldInitializer   (214)
	StructFieldInitializers -> StructFieldInitializers StructFieldInitializer   (215)
	StructFieldInitializers ->                         (216)
	SimpleOrQualifiedId -> SimpleOrMixedId             (217)
	SimpleOrQualifiedId -> QualifiedId                 (218)
	SimpleOrQualifiedAlphaNumericId -> simple_id       (219)
	SimpleOrQualifiedAlphaNumericId -> SimpleOrQualifiedId '.' simple_id   (220)
	QualifiedId -> SimpleOrQualifiedId '.' SimpleOrMixedId   (221)
	SimpleOrMixedId -> simple_id                       (222)
	SimpleOrMixedId -> mixed_id                        (223)
	SpecialId -> special_id                            (224)
	SpecialId -> '='                                   (225)
	SpecialId -> '=' SpecialId                         (226)
	SpecialId -> '|'                                   (227)
	SpecialId -> '|' SpecialId                         (228)
	SpecialId -> '<'                                   (229)
	SpecialId -> '>'                                   (230)
	SpecialId -> '<' SpecialId                         (231)
	SpecialId -> '>' SpecialId                         (232)
	AnyId -> simple_id                                 (233)
	AnyId -> mixed_id                                  (234)
	AnyId -> SpecialId                                 (235)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	module         { Token _ TokenModule }
	import         { Token _ TokenImport }
	type           { Token _ TokenType }
	interface      { Token _ TokenInterface }
	fun            { Token _ TokenFun }
	imp            { Token _ TokenImp }
	test           { Token _ TokenTest }
	struct         { Token _ TokenStruct }
	let            { Token _ TokenLet }
	True           { Token _ TokenTrue }
	False          { Token _ TokenFalse }
	if             { Token _ TokenIf }
	else           { Token _ TokenElse }
	switch         { Token _ TokenSwitch }
	cond           { Token _ TokenCond }
	case           { Token _ TokenCase }
	precedence     { Token _ TokenPrecedence }
	prim           { Token _ TokenPrim }
	primtype       { Token _ TokenPrimType }
	protocol       { Token _ TokenProtocol }
	when           { Token _ TokenWhen }
	on             { Token _ TokenOn }
	infixl         { Token _ TokenInfixl }
	except         { Token _ TokenExcept }
	renaming       { Token _ TokenRenaming }
	':='           { Token _ TokenAssign }
	'->'           { Token _ TokenArrow }
	'=>'           { Token _ TokenRocket }
	'::'           { Token _ TokenDblColon }
	'%('           { Token _ TokenPctLParen }
	'%{'           { Token _ TokenPctLBrace }
	'['            { Token _ TokenLBracket }
	']'            { Token _ TokenRBracket }
	'{'            { Token _ TokenLBrace }
	'}'            { Token _ TokenRBrace }
	'('            { Token _ TokenLParen }
	')'            { Token _ TokenRParen }
	'<'            { Token _ TokenLt }
	'>'            { Token _ TokenGt }
	'|'            { Token _ TokenPipe }
	';'            { Token _ TokenSemi }
	'.'            { Token _ TokenDot }
	'='            { Token _ TokenEq }
	':'            { Token _ TokenColon }
	','            { Token _ TokenComma }
	'_'            { Token _ TokenUnderscore }
	'@'            { Token _ TokenAtSymbol }
	'#'            { Token _ TokenHash }
	num            { Token _ (TokenNumLit _) }
	simple_id      { Token _ (TokenSimpleId _) }
	mixed_id       { Token _ (TokenMixedId _) }
	special_id     { Token _ (TokenSpecialId _) }
	string         { Token _ (TokenString _) }
	char           { Token _ (TokenChar _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_ruleParseTopLevel rule  0
	%start_ruleParseInteractive rule  1
	CompUnit        rule  2
	InteractiveCompUnit rule  3
	OneOrMoreExps   rules 4, 5
	ZeroOrMoreExps  rules 6, 7, 8
	Block           rule  9
	TopLevelExp     rule  10
	ZeroOrMoreTopLevelExps rules 11, 12, 13
	OneOrMoreTopLevelExps rules 14, 15
	ZeroOrMoreModuleLevelExps rules 16, 17, 18
	OneOrMoreModuleLevelExps rules 19, 20
	ModuleLevelExp  rules 21, 22, 23, 24, 25, 26
	InteractiveExp  rules 27, 28, 29, 30, 31
	ImportExp       rules 32, 33
	CommaSeparatedSimpleOrMixedIds rules 34, 35
	ImportExceptClause rule  36
	Renaming        rule  37
	CommaSeparatedRenamings rules 38, 39
	ImportRenamingClause rule  40
	ImportClause    rules 41, 42
	ImportClauses   rules 43, 44
	ImportSubset    rule  45
	SelectiveImportExp rules 46, 47, 48, 49
	ModuleDec       rule  50
	Constraint      rule  51
	Constraints     rules 52, 53, 54
	ProtoDecBody    rule  55
	ProtoDec        rule  56
	ProtoImp        rule  57
	TupleRestExps   rules 58, 59
	LiteralPatExp   rules 60, 61, 62, 63, 64
	TuplePatExpsRest rules 65, 66
	TuplePatExp     rule  67
	AdtPatExp       rules 68, 69
	ZeroOrMorePatExps rules 70, 71, 72
	OneOrMorePatExps rules 73, 74, 75
	AtomPatExp      rules 76, 77, 78, 79, 80, 81
	ListPatExp      rules 82, 83, 84
	PatExp          rule  85
	CommaSeparatedExps rules 86, 87, 88
	ListExp         rule  89
	CommaSeparatedIds rules 90, 91, 92
	SingleParamFunHeader rule  93
	MultiParamFunHeader rule  94
	FunHeader       rules 95, 96, 97
	CommaSeparatedLiteralExps rules 98, 99, 100
	LiteralListExp  rule  101
	LiteralExp      rules 102, 103, 104, 105, 106, 107
	AtomExp         rules 108, 109, 110, 111, 112, 113, 114, 115, 116
	MemberAccessExp rules 117, 118
	AppExp          rules 119, 120
	ConsExp         rules 121, 122
	CustomInfixExp  rules 123, 124
	IfElseExp       rule  125
	Exp             rules 126, 127, 128, 129, 130
	ExpOrAssign     rules 131, 132, 133, 134, 135
	ExpOrAssigns    rules 136, 137
	ModuleLevelBindingExp rules 138, 139, 140, 141, 142
	ZeroOrMoreModuleLevelBindingExps rules 143, 144, 145
	PrecedenceAssign rule  146
	FunDef          rules 147, 148
	FunBody         rule  149
	TyParams        rules 150, 151
	TyAnn           rules 152, 153, 154
	OneOrMoreTyAnns rules 155, 156
	ZeroOrMoreTyAnns rules 157, 158
	InterfaceDecExp rule  159
	CaseClauses     rules 160, 161
	CaseClause      rule  162
	CondCaseClauses rules 163, 164
	CondCaseClause  rules 165, 166
	ArgExps         rules 167, 168, 169
	FunParams       rules 170, 171, 172
	TypeDecImplicit rules 173, 174
	TypeDec         rules 175, 176, 177
	AdtAlternatives rules 178, 179
	AdtAlternative  rules 180, 181
	Tys             rules 182, 183, 184
	InstancePat     rule  185
	PatExpList      rules 186, 187, 188
	CommaSeparatedTys rules 189, 190, 191
	TyTupleRest     rules 192, 193
	TyTuple         rule  194
	OptionalImpClause rules 195, 196
	TyArgs          rules 197, 198
	SimpleTy        rules 199, 200, 201, 202, 203, 204
	TyArrow         rules 205, 206, 207
	Ty              rule  208
	TyStructField   rule  209
	TyStructFields  rules 210, 211, 212
	StructFieldInitializer rule  213
	StructFieldInitializers rules 214, 215, 216
	SimpleOrQualifiedId rules 217, 218
	SimpleOrQualifiedAlphaNumericId rules 219, 220
	QualifiedId     rule  221
	SimpleOrMixedId rules 222, 223
	SpecialId       rules 224, 225, 226, 227, 228, 229, 230, 231, 232
	AnyId           rules 233, 234, 235

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	module         shift, and enter state 6

	CompUnit       goto state 54
	TopLevelExp    goto state 3
	OneOrMoreTopLevelExpsgoto state 4
	ModuleDec      goto state 5

State 1


	module         shift, and enter state 6
	import         shift, and enter state 32
	type           shift, and enter state 33
	interface      shift, and enter state 34
	fun            shift, and enter state 35
	let            shift, and enter state 36
	True           shift, and enter state 37
	False          shift, and enter state 38
	if             shift, and enter state 39
	switch         shift, and enter state 40
	cond           shift, and enter state 41
	precedence     shift, and enter state 42
	prim           shift, and enter state 43
	infixl         shift, and enter state 44
	'%('           shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'('            shift, and enter state 48
	num            shift, and enter state 49
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 52
	char           shift, and enter state 53

	InteractiveCompUnitgoto state 7
	Block          goto state 8
	InteractiveExp goto state 9
	ModuleDec      goto state 10
	ListExp        goto state 11
	SingleParamFunHeadergoto state 12
	MultiParamFunHeadergoto state 13
	FunHeader      goto state 14
	LiteralExp     goto state 15
	AtomExp        goto state 16
	MemberAccessExpgoto state 17
	AppExp         goto state 18
	ConsExp        goto state 19
	CustomInfixExp goto state 20
	IfElseExp      goto state 21
	Exp            goto state 22
	ExpOrAssign    goto state 23
	PrecedenceAssigngoto state 24
	TyAnn          goto state 25
	InterfaceDecExpgoto state 26
	TypeDecImplicitgoto state 27
	TypeDec        goto state 28
	SimpleOrQualifiedIdgoto state 29
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 31

State 2


	module         shift, and enter state 6

	TopLevelExp    goto state 3
	OneOrMoreTopLevelExpsgoto state 4
	ModuleDec      goto state 5

State 3

	OneOrMoreTopLevelExps -> TopLevelExp .              (rule 14)

	module         reduce using rule 14
	%eof           reduce using rule 14


State 4

	CompUnit -> OneOrMoreTopLevelExps .                 (rule 2)
	OneOrMoreTopLevelExps -> OneOrMoreTopLevelExps . TopLevelExp    (rule 15)

	module         shift, and enter state 6
	%eof           reduce using rule 2

	TopLevelExp    goto state 110
	ModuleDec      goto state 5

State 5

	TopLevelExp -> ModuleDec .                          (rule 10)

	module         reduce using rule 10
	%eof           reduce using rule 10


State 6

	ModuleDec -> module . SimpleOrQualifiedId '{' ZeroOrMoreModuleLevelExps '}'    (rule 50)

	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51

	SimpleOrQualifiedIdgoto state 109
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 7

	%start_ruleParseInteractive -> InteractiveCompUnit .    (rule 1)

	%eof           accept


State 8

	Exp -> Block .                                      (rule 130)

	import         reduce using rule 130
	type           reduce using rule 130
	interface      reduce using rule 130
	fun            reduce using rule 130
	imp            reduce using rule 130
	let            reduce using rule 130
	True           reduce using rule 130
	False          reduce using rule 130
	if             reduce using rule 130
	switch         reduce using rule 130
	cond           reduce using rule 130
	precedence     reduce using rule 130
	prim           reduce using rule 130
	protocol       reduce using rule 130
	infixl         reduce using rule 130
	'->'           reduce using rule 130
	'%('           reduce using rule 130
	'['            reduce using rule 130
	']'            reduce using rule 130
	'{'            reduce using rule 130
	'}'            reduce using rule 130
	'('            reduce using rule 130
	')'            reduce using rule 130
	'<'            reduce using rule 130
	'>'            reduce using rule 130
	'|'            reduce using rule 130
	';'            reduce using rule 130
	'='            reduce using rule 130
	','            reduce using rule 130
	'_'            reduce using rule 130
	'@'            reduce using rule 130
	'#'            reduce using rule 130
	num            reduce using rule 130
	simple_id      reduce using rule 130
	mixed_id       reduce using rule 130
	special_id     reduce using rule 130
	string         reduce using rule 130
	char           reduce using rule 130
	%eof           reduce using rule 130


State 9

	InteractiveCompUnit -> InteractiveExp .             (rule 3)

	%eof           reduce using rule 3


State 10

	InteractiveExp -> ModuleDec .                       (rule 29)

	%eof           reduce using rule 29


State 11

	AtomExp -> ListExp .                                (rule 112)

	import         reduce using rule 112
	type           reduce using rule 112
	interface      reduce using rule 112
	fun            reduce using rule 112
	imp            reduce using rule 112
	let            reduce using rule 112
	True           reduce using rule 112
	False          reduce using rule 112
	if             reduce using rule 112
	switch         reduce using rule 112
	cond           reduce using rule 112
	precedence     reduce using rule 112
	prim           reduce using rule 112
	protocol       reduce using rule 112
	infixl         reduce using rule 112
	'->'           reduce using rule 112
	'%('           reduce using rule 112
	'['            reduce using rule 112
	']'            reduce using rule 112
	'{'            reduce using rule 112
	'}'            reduce using rule 112
	'('            reduce using rule 112
	')'            reduce using rule 112
	'<'            reduce using rule 112
	'>'            reduce using rule 112
	'|'            reduce using rule 112
	';'            reduce using rule 112
	'='            reduce using rule 112
	','            reduce using rule 112
	'_'            reduce using rule 112
	'@'            reduce using rule 112
	'#'            reduce using rule 112
	num            reduce using rule 112
	simple_id      reduce using rule 112
	mixed_id       reduce using rule 112
	special_id     reduce using rule 112
	string         reduce using rule 112
	char           reduce using rule 112
	%eof           reduce using rule 112


State 12

	FunHeader -> SingleParamFunHeader .                 (rule 95)

	'='            reduce using rule 95


State 13

	FunHeader -> MultiParamFunHeader .                  (rule 96)

	'='            reduce using rule 96


State 14

	AtomExp -> FunHeader . FunBody                      (rule 114)

	'='            shift, and enter state 108

	FunBody        goto state 107

State 15

	AtomExp -> LiteralExp .                             (rule 116)

	import         reduce using rule 116
	type           reduce using rule 116
	interface      reduce using rule 116
	fun            reduce using rule 116
	imp            reduce using rule 116
	let            reduce using rule 116
	True           reduce using rule 116
	False          reduce using rule 116
	if             reduce using rule 116
	switch         reduce using rule 116
	cond           reduce using rule 116
	precedence     reduce using rule 116
	prim           reduce using rule 116
	protocol       reduce using rule 116
	infixl         reduce using rule 116
	'->'           reduce using rule 116
	'%('           reduce using rule 116
	'['            reduce using rule 116
	']'            reduce using rule 116
	'{'            reduce using rule 116
	'}'            reduce using rule 116
	'('            reduce using rule 116
	')'            reduce using rule 116
	'<'            reduce using rule 116
	'>'            reduce using rule 116
	'|'            reduce using rule 116
	';'            reduce using rule 116
	'='            reduce using rule 116
	','            reduce using rule 116
	'_'            reduce using rule 116
	'@'            reduce using rule 116
	'#'            reduce using rule 116
	num            reduce using rule 116
	simple_id      reduce using rule 116
	mixed_id       reduce using rule 116
	special_id     reduce using rule 116
	string         reduce using rule 116
	char           reduce using rule 116
	%eof           reduce using rule 116


State 16

	MemberAccessExp -> AtomExp .                        (rule 118)

	import         reduce using rule 118
	type           reduce using rule 118
	interface      reduce using rule 118
	fun            reduce using rule 118
	imp            reduce using rule 118
	let            reduce using rule 118
	True           reduce using rule 118
	False          reduce using rule 118
	if             reduce using rule 118
	switch         reduce using rule 118
	cond           reduce using rule 118
	precedence     reduce using rule 118
	prim           reduce using rule 118
	protocol       reduce using rule 118
	infixl         reduce using rule 118
	'->'           reduce using rule 118
	'%('           reduce using rule 118
	'['            reduce using rule 118
	']'            reduce using rule 118
	'{'            reduce using rule 118
	'}'            reduce using rule 118
	'('            reduce using rule 118
	')'            reduce using rule 118
	'<'            reduce using rule 118
	'>'            reduce using rule 118
	'|'            reduce using rule 118
	';'            reduce using rule 118
	'='            reduce using rule 118
	','            reduce using rule 118
	'_'            reduce using rule 118
	'@'            reduce using rule 118
	'#'            reduce using rule 118
	num            reduce using rule 118
	simple_id      reduce using rule 118
	mixed_id       reduce using rule 118
	special_id     reduce using rule 118
	string         reduce using rule 118
	char           reduce using rule 118
	%eof           reduce using rule 118


State 17

	AppExp -> MemberAccessExp .                         (rule 120)

	import         reduce using rule 120
	type           reduce using rule 120
	interface      reduce using rule 120
	fun            reduce using rule 120
	imp            reduce using rule 120
	let            reduce using rule 120
	True           reduce using rule 120
	False          reduce using rule 120
	if             reduce using rule 120
	switch         reduce using rule 120
	cond           reduce using rule 120
	precedence     reduce using rule 120
	prim           reduce using rule 120
	protocol       reduce using rule 120
	infixl         reduce using rule 120
	'->'           reduce using rule 120
	'%('           reduce using rule 120
	'['            reduce using rule 120
	']'            reduce using rule 120
	'{'            reduce using rule 120
	'}'            reduce using rule 120
	'('            reduce using rule 120
	')'            reduce using rule 120
	'<'            reduce using rule 120
	'>'            reduce using rule 120
	'|'            reduce using rule 120
	';'            reduce using rule 120
	'='            reduce using rule 120
	','            reduce using rule 120
	'_'            reduce using rule 120
	'@'            reduce using rule 120
	'#'            reduce using rule 120
	num            reduce using rule 120
	simple_id      reduce using rule 120
	mixed_id       reduce using rule 120
	special_id     reduce using rule 120
	string         reduce using rule 120
	char           reduce using rule 120
	%eof           reduce using rule 120


State 18

	MemberAccessExp -> AppExp . '#' SimpleOrMixedId     (rule 117)
	AppExp -> AppExp . '(' ArgExps ')'                  (rule 119)
	ConsExp -> AppExp . '@' ConsExp                     (rule 121)
	ConsExp -> AppExp .                                 (rule 122)

	import         reduce using rule 122
	type           reduce using rule 122
	interface      reduce using rule 122
	fun            reduce using rule 122
	imp            reduce using rule 122
	let            reduce using rule 122
	True           reduce using rule 122
	False          reduce using rule 122
	if             reduce using rule 122
	switch         reduce using rule 122
	cond           reduce using rule 122
	precedence     reduce using rule 122
	prim           reduce using rule 122
	protocol       reduce using rule 122
	infixl         reduce using rule 122
	'->'           reduce using rule 122
	'%('           reduce using rule 122
	'['            reduce using rule 122
	']'            reduce using rule 122
	'{'            reduce using rule 122
	'}'            reduce using rule 122
	'('            shift, and enter state 104
			(reduce using rule 122)

	')'            reduce using rule 122
	'<'            reduce using rule 122
	'>'            reduce using rule 122
	'|'            reduce using rule 122
	';'            reduce using rule 122
	'='            reduce using rule 122
	','            reduce using rule 122
	'_'            reduce using rule 122
	'@'            shift, and enter state 105
			(reduce using rule 122)

	'#'            shift, and enter state 106
			(reduce using rule 122)

	num            reduce using rule 122
	simple_id      reduce using rule 122
	mixed_id       reduce using rule 122
	special_id     reduce using rule 122
	string         reduce using rule 122
	char           reduce using rule 122
	%eof           reduce using rule 122


State 19

	CustomInfixExp -> ConsExp .                         (rule 124)

	import         reduce using rule 124
	type           reduce using rule 124
	interface      reduce using rule 124
	fun            reduce using rule 124
	imp            reduce using rule 124
	let            reduce using rule 124
	True           reduce using rule 124
	False          reduce using rule 124
	if             reduce using rule 124
	switch         reduce using rule 124
	cond           reduce using rule 124
	precedence     reduce using rule 124
	prim           reduce using rule 124
	protocol       reduce using rule 124
	infixl         reduce using rule 124
	'->'           reduce using rule 124
	'%('           reduce using rule 124
	'['            reduce using rule 124
	']'            reduce using rule 124
	'{'            reduce using rule 124
	'}'            reduce using rule 124
	'('            reduce using rule 124
	')'            reduce using rule 124
	'<'            reduce using rule 124
	'>'            reduce using rule 124
	'|'            reduce using rule 124
	';'            reduce using rule 124
	'='            reduce using rule 124
	','            reduce using rule 124
	'_'            reduce using rule 124
	'@'            reduce using rule 124
	'#'            reduce using rule 124
	num            reduce using rule 124
	simple_id      reduce using rule 124
	mixed_id       reduce using rule 124
	special_id     reduce using rule 124
	string         reduce using rule 124
	char           reduce using rule 124
	%eof           reduce using rule 124


State 20

	CustomInfixExp -> CustomInfixExp . SpecialId ConsExp    (rule 123)
	Exp -> CustomInfixExp .                             (rule 126)

	import         reduce using rule 126
	type           reduce using rule 126
	interface      reduce using rule 126
	fun            reduce using rule 126
	imp            reduce using rule 126
	let            reduce using rule 126
	True           reduce using rule 126
	False          reduce using rule 126
	if             reduce using rule 126
	switch         reduce using rule 126
	cond           reduce using rule 126
	precedence     reduce using rule 126
	prim           reduce using rule 126
	protocol       reduce using rule 126
	infixl         reduce using rule 126
	'->'           reduce using rule 126
	'%('           reduce using rule 126
	'['            reduce using rule 126
	']'            reduce using rule 126
	'{'            reduce using rule 126
	'}'            reduce using rule 126
	'('            reduce using rule 126
	')'            reduce using rule 126
	'<'            shift, and enter state 59
			(reduce using rule 126)

	'>'            shift, and enter state 60
			(reduce using rule 126)

	'|'            shift, and enter state 61
			(reduce using rule 126)

	';'            reduce using rule 126
	'='            shift, and enter state 62
			(reduce using rule 126)

	','            reduce using rule 126
	'_'            reduce using rule 126
	'@'            reduce using rule 126
	'#'            reduce using rule 126
	num            reduce using rule 126
	simple_id      reduce using rule 126
	mixed_id       reduce using rule 126
	special_id     shift, and enter state 63
			(reduce using rule 126)

	string         reduce using rule 126
	char           reduce using rule 126
	%eof           reduce using rule 126

	SpecialId      goto state 103

State 21

	Exp -> IfElseExp .                                  (rule 127)

	import         reduce using rule 127
	type           reduce using rule 127
	interface      reduce using rule 127
	fun            reduce using rule 127
	imp            reduce using rule 127
	let            reduce using rule 127
	True           reduce using rule 127
	False          reduce using rule 127
	if             reduce using rule 127
	switch         reduce using rule 127
	cond           reduce using rule 127
	precedence     reduce using rule 127
	prim           reduce using rule 127
	protocol       reduce using rule 127
	infixl         reduce using rule 127
	'->'           reduce using rule 127
	'%('           reduce using rule 127
	'['            reduce using rule 127
	']'            reduce using rule 127
	'{'            reduce using rule 127
	'}'            reduce using rule 127
	'('            reduce using rule 127
	')'            reduce using rule 127
	'<'            reduce using rule 127
	'>'            reduce using rule 127
	'|'            reduce using rule 127
	';'            reduce using rule 127
	'='            reduce using rule 127
	','            reduce using rule 127
	'_'            reduce using rule 127
	'@'            reduce using rule 127
	'#'            reduce using rule 127
	num            reduce using rule 127
	simple_id      reduce using rule 127
	mixed_id       reduce using rule 127
	special_id     reduce using rule 127
	string         reduce using rule 127
	char           reduce using rule 127
	%eof           reduce using rule 127


State 22

	ExpOrAssign -> Exp .                                (rule 135)

	import         reduce using rule 135
	fun            reduce using rule 135
	let            reduce using rule 135
	True           reduce using rule 135
	False          reduce using rule 135
	if             reduce using rule 135
	switch         reduce using rule 135
	cond           reduce using rule 135
	prim           reduce using rule 135
	infixl         reduce using rule 135
	'%('           reduce using rule 135
	'['            reduce using rule 135
	'{'            reduce using rule 135
	'}'            reduce using rule 135
	'('            reduce using rule 135
	num            reduce using rule 135
	simple_id      reduce using rule 135
	mixed_id       reduce using rule 135
	string         reduce using rule 135
	char           reduce using rule 135
	%eof           reduce using rule 135


State 23

	InteractiveExp -> ExpOrAssign .                     (rule 31)

	%eof           reduce using rule 31


State 24

	InteractiveExp -> PrecedenceAssign .                (rule 30)

	%eof           reduce using rule 30


State 25

	ExpOrAssign -> TyAnn .                              (rule 132)

	import         reduce using rule 132
	fun            reduce using rule 132
	let            reduce using rule 132
	True           reduce using rule 132
	False          reduce using rule 132
	if             reduce using rule 132
	switch         reduce using rule 132
	cond           reduce using rule 132
	prim           reduce using rule 132
	infixl         reduce using rule 132
	'%('           reduce using rule 132
	'['            reduce using rule 132
	'{'            reduce using rule 132
	'}'            reduce using rule 132
	'('            reduce using rule 132
	num            reduce using rule 132
	simple_id      reduce using rule 132
	mixed_id       reduce using rule 132
	string         reduce using rule 132
	char           reduce using rule 132
	%eof           reduce using rule 132


State 26

	InteractiveExp -> InterfaceDecExp .                 (rule 27)

	%eof           reduce using rule 27


State 27

	TypeDec -> TypeDecImplicit .                        (rule 177)

	import         reduce using rule 177
	type           reduce using rule 177
	interface      reduce using rule 177
	imp            reduce using rule 177
	let            reduce using rule 177
	precedence     reduce using rule 177
	protocol       reduce using rule 177
	infixl         reduce using rule 177
	'}'            reduce using rule 177
	simple_id      reduce using rule 177
	mixed_id       reduce using rule 177
	%eof           reduce using rule 177


State 28

	InteractiveExp -> TypeDec .                         (rule 28)

	%eof           reduce using rule 28


State 29

	LiteralExp -> SimpleOrQualifiedId .                 (rule 107)
	AtomExp -> SimpleOrQualifiedId . '%{' StructFieldInitializers '}'    (rule 113)
	QualifiedId -> SimpleOrQualifiedId . '.' SimpleOrMixedId    (rule 221)

	import         reduce using rule 107
	type           reduce using rule 107
	interface      reduce using rule 107
	fun            reduce using rule 107
	imp            reduce using rule 107
	let            reduce using rule 107
	True           reduce using rule 107
	False          reduce using rule 107
	if             reduce using rule 107
	switch         reduce using rule 107
	cond           reduce using rule 107
	precedence     reduce using rule 107
	prim           reduce using rule 107
	protocol       reduce using rule 107
	infixl         reduce using rule 107
	'->'           reduce using rule 107
	'%('           reduce using rule 107
	'%{'           shift, and enter state 101
	'['            reduce using rule 107
	']'            reduce using rule 107
	'{'            reduce using rule 107
	'}'            reduce using rule 107
	'('            reduce using rule 107
	')'            reduce using rule 107
	'<'            reduce using rule 107
	'>'            reduce using rule 107
	'|'            reduce using rule 107
	';'            reduce using rule 107
	'.'            shift, and enter state 102
	'='            reduce using rule 107
	','            reduce using rule 107
	'_'            reduce using rule 107
	'@'            reduce using rule 107
	'#'            reduce using rule 107
	num            reduce using rule 107
	simple_id      reduce using rule 107
	mixed_id       reduce using rule 107
	special_id     reduce using rule 107
	string         reduce using rule 107
	char           reduce using rule 107
	%eof           reduce using rule 107


State 30

	SimpleOrQualifiedId -> QualifiedId .                (rule 218)

	import         reduce using rule 218
	type           reduce using rule 218
	interface      reduce using rule 218
	fun            reduce using rule 218
	imp            reduce using rule 218
	let            reduce using rule 218
	True           reduce using rule 218
	False          reduce using rule 218
	if             reduce using rule 218
	switch         reduce using rule 218
	cond           reduce using rule 218
	precedence     reduce using rule 218
	prim           reduce using rule 218
	protocol       reduce using rule 218
	infixl         reduce using rule 218
	'->'           reduce using rule 218
	'%('           reduce using rule 218
	'%{'           reduce using rule 218
	'['            reduce using rule 218
	']'            reduce using rule 218
	'{'            reduce using rule 218
	'}'            reduce using rule 218
	'('            reduce using rule 218
	')'            reduce using rule 218
	'<'            reduce using rule 218
	'>'            reduce using rule 218
	'|'            reduce using rule 218
	';'            reduce using rule 218
	'.'            reduce using rule 218
	'='            reduce using rule 218
	','            reduce using rule 218
	'_'            reduce using rule 218
	'@'            reduce using rule 218
	'#'            reduce using rule 218
	num            reduce using rule 218
	simple_id      reduce using rule 218
	mixed_id       reduce using rule 218
	special_id     reduce using rule 218
	string         reduce using rule 218
	char           reduce using rule 218
	%eof           reduce using rule 218


State 31

	TyAnn -> SimpleOrMixedId . ':' Ty Constraints       (rule 152)
	TyAnn -> SimpleOrMixedId . '<' CommaSeparatedIds '>' ':' Ty Constraints    (rule 153)
	SimpleOrQualifiedId -> SimpleOrMixedId .            (rule 217)

	import         reduce using rule 217
	fun            reduce using rule 217
	let            reduce using rule 217
	True           reduce using rule 217
	False          reduce using rule 217
	if             reduce using rule 217
	switch         reduce using rule 217
	cond           reduce using rule 217
	prim           reduce using rule 217
	infixl         reduce using rule 217
	'%('           reduce using rule 217
	'%{'           reduce using rule 217
	'['            reduce using rule 217
	'{'            reduce using rule 217
	'}'            reduce using rule 217
	'('            reduce using rule 217
	'<'            shift, and enter state 99
			(reduce using rule 217)

	'>'            reduce using rule 217
	'|'            reduce using rule 217
	'.'            reduce using rule 217
	'='            reduce using rule 217
	':'            shift, and enter state 100
	'@'            reduce using rule 217
	'#'            reduce using rule 217
	num            reduce using rule 217
	simple_id      reduce using rule 217
	mixed_id       reduce using rule 217
	special_id     reduce using rule 217
	string         reduce using rule 217
	char           reduce using rule 217
	%eof           reduce using rule 217


State 32

	ExpOrAssign -> import . SimpleOrQualifiedId         (rule 133)
	ExpOrAssign -> import . SimpleOrQualifiedId '=' simple_id    (rule 134)

	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51

	SimpleOrQualifiedIdgoto state 98
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 33

	TypeDecImplicit -> type . TyParams Ty               (rule 173)
	TypeDecImplicit -> type . TyParams AdtAlternatives    (rule 174)
	TypeDec -> type . SimpleOrMixedId TyParams '=' Ty    (rule 175)
	TypeDec -> type . SimpleOrMixedId TyParams '=' AdtAlternatives    (rule 176)

	struct         reduce using rule 151
	primtype       reduce using rule 151
	'%('           reduce using rule 151
	'('            reduce using rule 151
	'<'            shift, and enter state 97
	'|'            reduce using rule 151
	simple_id      shift, and enter state 50
			(reduce using rule 151)

	mixed_id       shift, and enter state 51
			(reduce using rule 151)


	TyParams       goto state 95
	SimpleOrMixedIdgoto state 96

State 34

	InterfaceDecExp -> interface . SimpleOrMixedId TyParams '{' OneOrMoreTyAnns '}'    (rule 159)

	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51

	SimpleOrMixedIdgoto state 94

State 35

	SingleParamFunHeader -> fun . '(' PatExp ')'        (rule 93)
	MultiParamFunHeader -> fun . '(' PatExpList ',' PatExp ')'    (rule 94)
	FunHeader -> fun . '(' ')'                          (rule 97)

	'('            shift, and enter state 93


State 36

	ExpOrAssign -> let . PatExp '=' Exp                 (rule 131)

	True           shift, and enter state 84
	False          shift, and enter state 85
	'%('           shift, and enter state 86
	'['            shift, and enter state 87
	'('            shift, and enter state 88
	'_'            shift, and enter state 89
	num            shift, and enter state 90
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 91
	char           shift, and enter state 92

	LiteralPatExp  goto state 75
	TuplePatExp    goto state 76
	AdtPatExp      goto state 77
	AtomPatExp     goto state 78
	ListPatExp     goto state 79
	PatExp         goto state 80
	SimpleOrQualifiedIdgoto state 81
	QualifiedId    goto state 82
	SimpleOrMixedIdgoto state 83

State 37

	LiteralExp -> True .                                (rule 103)

	import         reduce using rule 103
	type           reduce using rule 103
	interface      reduce using rule 103
	fun            reduce using rule 103
	imp            reduce using rule 103
	let            reduce using rule 103
	True           reduce using rule 103
	False          reduce using rule 103
	if             reduce using rule 103
	switch         reduce using rule 103
	cond           reduce using rule 103
	precedence     reduce using rule 103
	prim           reduce using rule 103
	protocol       reduce using rule 103
	infixl         reduce using rule 103
	'->'           reduce using rule 103
	'%('           reduce using rule 103
	'['            reduce using rule 103
	']'            reduce using rule 103
	'{'            reduce using rule 103
	'}'            reduce using rule 103
	'('            reduce using rule 103
	')'            reduce using rule 103
	'<'            reduce using rule 103
	'>'            reduce using rule 103
	'|'            reduce using rule 103
	';'            reduce using rule 103
	'='            reduce using rule 103
	','            reduce using rule 103
	'_'            reduce using rule 103
	'@'            reduce using rule 103
	'#'            reduce using rule 103
	num            reduce using rule 103
	simple_id      reduce using rule 103
	mixed_id       reduce using rule 103
	special_id     reduce using rule 103
	string         reduce using rule 103
	char           reduce using rule 103
	%eof           reduce using rule 103


State 38

	LiteralExp -> False .                               (rule 104)

	import         reduce using rule 104
	type           reduce using rule 104
	interface      reduce using rule 104
	fun            reduce using rule 104
	imp            reduce using rule 104
	let            reduce using rule 104
	True           reduce using rule 104
	False          reduce using rule 104
	if             reduce using rule 104
	switch         reduce using rule 104
	cond           reduce using rule 104
	precedence     reduce using rule 104
	prim           reduce using rule 104
	protocol       reduce using rule 104
	infixl         reduce using rule 104
	'->'           reduce using rule 104
	'%('           reduce using rule 104
	'['            reduce using rule 104
	']'            reduce using rule 104
	'{'            reduce using rule 104
	'}'            reduce using rule 104
	'('            reduce using rule 104
	')'            reduce using rule 104
	'<'            reduce using rule 104
	'>'            reduce using rule 104
	'|'            reduce using rule 104
	';'            reduce using rule 104
	'='            reduce using rule 104
	','            reduce using rule 104
	'_'            reduce using rule 104
	'@'            reduce using rule 104
	'#'            reduce using rule 104
	num            reduce using rule 104
	simple_id      reduce using rule 104
	mixed_id       reduce using rule 104
	special_id     reduce using rule 104
	string         reduce using rule 104
	char           reduce using rule 104
	%eof           reduce using rule 104


State 39

	IfElseExp -> if . '(' Exp ')' Exp Exp               (rule 125)

	'('            shift, and enter state 74


State 40

	Exp -> switch . '(' Exp ')' '{' CaseClauses '}'     (rule 128)

	'('            shift, and enter state 73


State 41

	Exp -> cond . '{' CondCaseClauses '}'               (rule 129)

	'{'            shift, and enter state 72


State 42

	PrecedenceAssign -> precedence . SpecialId num      (rule 146)

	'<'            shift, and enter state 59
	'>'            shift, and enter state 60
	'|'            shift, and enter state 61
	'='            shift, and enter state 62
	special_id     shift, and enter state 63

	SpecialId      goto state 71

State 43

	AtomExp -> prim . '(' simple_id ')'                 (rule 115)

	'('            shift, and enter state 70


State 44

	TyAnn -> infixl . '(' SpecialId ')' TyParams ':' Ty Constraints    (rule 154)

	'('            shift, and enter state 69


State 45

	AtomExp -> '%(' . Exp TupleRestExps ')'             (rule 111)

	fun            shift, and enter state 35
	True           shift, and enter state 37
	False          shift, and enter state 38
	if             shift, and enter state 39
	switch         shift, and enter state 40
	cond           shift, and enter state 41
	prim           shift, and enter state 43
	'%('           shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'('            shift, and enter state 48
	num            shift, and enter state 49
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 52
	char           shift, and enter state 53

	Block          goto state 8
	ListExp        goto state 11
	SingleParamFunHeadergoto state 12
	MultiParamFunHeadergoto state 13
	FunHeader      goto state 14
	LiteralExp     goto state 15
	AtomExp        goto state 16
	MemberAccessExpgoto state 17
	AppExp         goto state 18
	ConsExp        goto state 19
	CustomInfixExp goto state 20
	IfElseExp      goto state 21
	Exp            goto state 68
	SimpleOrQualifiedIdgoto state 29
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 46

	ListExp -> '[' . CommaSeparatedExps ']'             (rule 89)

	fun            shift, and enter state 35
	True           shift, and enter state 37
	False          shift, and enter state 38
	if             shift, and enter state 39
	switch         shift, and enter state 40
	cond           shift, and enter state 41
	prim           shift, and enter state 43
	'%('           shift, and enter state 45
	'['            shift, and enter state 46
	']'            reduce using rule 88
	'{'            shift, and enter state 47
	'('            shift, and enter state 48
	','            reduce using rule 88
	num            shift, and enter state 49
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 52
	char           shift, and enter state 53

	Block          goto state 8
	CommaSeparatedExpsgoto state 66
	ListExp        goto state 11
	SingleParamFunHeadergoto state 12
	MultiParamFunHeadergoto state 13
	FunHeader      goto state 14
	LiteralExp     goto state 15
	AtomExp        goto state 16
	MemberAccessExpgoto state 17
	AppExp         goto state 18
	ConsExp        goto state 19
	CustomInfixExp goto state 20
	IfElseExp      goto state 21
	Exp            goto state 67
	SimpleOrQualifiedIdgoto state 29
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 47

	Block -> '{' . ExpOrAssigns '}'                     (rule 9)

	import         shift, and enter state 32
	fun            shift, and enter state 35
	let            shift, and enter state 36
	True           shift, and enter state 37
	False          shift, and enter state 38
	if             shift, and enter state 39
	switch         shift, and enter state 40
	cond           shift, and enter state 41
	prim           shift, and enter state 43
	infixl         shift, and enter state 44
	'%('           shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'('            shift, and enter state 48
	num            shift, and enter state 49
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 52
	char           shift, and enter state 53

	Block          goto state 8
	ListExp        goto state 11
	SingleParamFunHeadergoto state 12
	MultiParamFunHeadergoto state 13
	FunHeader      goto state 14
	LiteralExp     goto state 15
	AtomExp        goto state 16
	MemberAccessExpgoto state 17
	AppExp         goto state 18
	ConsExp        goto state 19
	CustomInfixExp goto state 20
	IfElseExp      goto state 21
	Exp            goto state 22
	ExpOrAssign    goto state 64
	ExpOrAssigns   goto state 65
	TyAnn          goto state 25
	SimpleOrQualifiedIdgoto state 29
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 31

State 48

	AtomExp -> '(' . Exp ')'                            (rule 108)
	AtomExp -> '(' . ')'                                (rule 109)
	AtomExp -> '(' . SpecialId ')'                      (rule 110)

	fun            shift, and enter state 35
	True           shift, and enter state 37
	False          shift, and enter state 38
	if             shift, and enter state 39
	switch         shift, and enter state 40
	cond           shift, and enter state 41
	prim           shift, and enter state 43
	'%('           shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'('            shift, and enter state 48
	')'            shift, and enter state 58
	'<'            shift, and enter state 59
	'>'            shift, and enter state 60
	'|'            shift, and enter state 61
	'='            shift, and enter state 62
	num            shift, and enter state 49
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	special_id     shift, and enter state 63
	string         shift, and enter state 52
	char           shift, and enter state 53

	Block          goto state 8
	ListExp        goto state 11
	SingleParamFunHeadergoto state 12
	MultiParamFunHeadergoto state 13
	FunHeader      goto state 14
	LiteralExp     goto state 15
	AtomExp        goto state 16
	MemberAccessExpgoto state 17
	AppExp         goto state 18
	ConsExp        goto state 19
	CustomInfixExp goto state 20
	IfElseExp      goto state 21
	Exp            goto state 55
	SimpleOrQualifiedIdgoto state 29
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56
	SpecialId      goto state 57

State 49

	LiteralExp -> num .                                 (rule 102)

	import         reduce using rule 102
	type           reduce using rule 102
	interface      reduce using rule 102
	fun            reduce using rule 102
	imp            reduce using rule 102
	let            reduce using rule 102
	True           reduce using rule 102
	False          reduce using rule 102
	if             reduce using rule 102
	switch         reduce using rule 102
	cond           reduce using rule 102
	precedence     reduce using rule 102
	prim           reduce using rule 102
	protocol       reduce using rule 102
	infixl         reduce using rule 102
	'->'           reduce using rule 102
	'%('           reduce using rule 102
	'['            reduce using rule 102
	']'            reduce using rule 102
	'{'            reduce using rule 102
	'}'            reduce using rule 102
	'('            reduce using rule 102
	')'            reduce using rule 102
	'<'            reduce using rule 102
	'>'            reduce using rule 102
	'|'            reduce using rule 102
	';'            reduce using rule 102
	'='            reduce using rule 102
	','            reduce using rule 102
	'_'            reduce using rule 102
	'@'            reduce using rule 102
	'#'            reduce using rule 102
	num            reduce using rule 102
	simple_id      reduce using rule 102
	mixed_id       reduce using rule 102
	special_id     reduce using rule 102
	string         reduce using rule 102
	char           reduce using rule 102
	%eof           reduce using rule 102


State 50

	SimpleOrMixedId -> simple_id .                      (rule 222)

	import         reduce using rule 222
	type           reduce using rule 222
	interface      reduce using rule 222
	fun            reduce using rule 222
	imp            reduce using rule 222
	let            reduce using rule 222
	True           reduce using rule 222
	False          reduce using rule 222
	if             reduce using rule 222
	switch         reduce using rule 222
	cond           reduce using rule 222
	precedence     reduce using rule 222
	prim           reduce using rule 222
	protocol       reduce using rule 222
	when           reduce using rule 222
	on             reduce using rule 222
	infixl         reduce using rule 222
	'->'           reduce using rule 222
	'%('           reduce using rule 222
	'%{'           reduce using rule 222
	'['            reduce using rule 222
	']'            reduce using rule 222
	'{'            reduce using rule 222
	'}'            reduce using rule 222
	'('            reduce using rule 222
	')'            reduce using rule 222
	'<'            reduce using rule 222
	'>'            reduce using rule 222
	'|'            reduce using rule 222
	';'            reduce using rule 222
	'.'            reduce using rule 222
	'='            reduce using rule 222
	':'            reduce using rule 222
	','            reduce using rule 222
	'_'            reduce using rule 222
	'@'            reduce using rule 222
	'#'            reduce using rule 222
	num            reduce using rule 222
	simple_id      reduce using rule 222
	mixed_id       reduce using rule 222
	special_id     reduce using rule 222
	string         reduce using rule 222
	char           reduce using rule 222
	%eof           reduce using rule 222


State 51

	SimpleOrMixedId -> mixed_id .                       (rule 223)

	import         reduce using rule 223
	type           reduce using rule 223
	interface      reduce using rule 223
	fun            reduce using rule 223
	imp            reduce using rule 223
	let            reduce using rule 223
	True           reduce using rule 223
	False          reduce using rule 223
	if             reduce using rule 223
	switch         reduce using rule 223
	cond           reduce using rule 223
	precedence     reduce using rule 223
	prim           reduce using rule 223
	protocol       reduce using rule 223
	when           reduce using rule 223
	on             reduce using rule 223
	infixl         reduce using rule 223
	'->'           reduce using rule 223
	'%('           reduce using rule 223
	'%{'           reduce using rule 223
	'['            reduce using rule 223
	']'            reduce using rule 223
	'{'            reduce using rule 223
	'}'            reduce using rule 223
	'('            reduce using rule 223
	')'            reduce using rule 223
	'<'            reduce using rule 223
	'>'            reduce using rule 223
	'|'            reduce using rule 223
	';'            reduce using rule 223
	'.'            reduce using rule 223
	'='            reduce using rule 223
	':'            reduce using rule 223
	','            reduce using rule 223
	'_'            reduce using rule 223
	'@'            reduce using rule 223
	'#'            reduce using rule 223
	num            reduce using rule 223
	simple_id      reduce using rule 223
	mixed_id       reduce using rule 223
	special_id     reduce using rule 223
	string         reduce using rule 223
	char           reduce using rule 223
	%eof           reduce using rule 223


State 52

	LiteralExp -> string .                              (rule 105)

	import         reduce using rule 105
	type           reduce using rule 105
	interface      reduce using rule 105
	fun            reduce using rule 105
	imp            reduce using rule 105
	let            reduce using rule 105
	True           reduce using rule 105
	False          reduce using rule 105
	if             reduce using rule 105
	switch         reduce using rule 105
	cond           reduce using rule 105
	precedence     reduce using rule 105
	prim           reduce using rule 105
	protocol       reduce using rule 105
	infixl         reduce using rule 105
	'->'           reduce using rule 105
	'%('           reduce using rule 105
	'['            reduce using rule 105
	']'            reduce using rule 105
	'{'            reduce using rule 105
	'}'            reduce using rule 105
	'('            reduce using rule 105
	')'            reduce using rule 105
	'<'            reduce using rule 105
	'>'            reduce using rule 105
	'|'            reduce using rule 105
	';'            reduce using rule 105
	'='            reduce using rule 105
	','            reduce using rule 105
	'_'            reduce using rule 105
	'@'            reduce using rule 105
	'#'            reduce using rule 105
	num            reduce using rule 105
	simple_id      reduce using rule 105
	mixed_id       reduce using rule 105
	special_id     reduce using rule 105
	string         reduce using rule 105
	char           reduce using rule 105
	%eof           reduce using rule 105


State 53

	LiteralExp -> char .                                (rule 106)

	import         reduce using rule 106
	type           reduce using rule 106
	interface      reduce using rule 106
	fun            reduce using rule 106
	imp            reduce using rule 106
	let            reduce using rule 106
	True           reduce using rule 106
	False          reduce using rule 106
	if             reduce using rule 106
	switch         reduce using rule 106
	cond           reduce using rule 106
	precedence     reduce using rule 106
	prim           reduce using rule 106
	protocol       reduce using rule 106
	infixl         reduce using rule 106
	'->'           reduce using rule 106
	'%('           reduce using rule 106
	'['            reduce using rule 106
	']'            reduce using rule 106
	'{'            reduce using rule 106
	'}'            reduce using rule 106
	'('            reduce using rule 106
	')'            reduce using rule 106
	'<'            reduce using rule 106
	'>'            reduce using rule 106
	'|'            reduce using rule 106
	';'            reduce using rule 106
	'='            reduce using rule 106
	','            reduce using rule 106
	'_'            reduce using rule 106
	'@'            reduce using rule 106
	'#'            reduce using rule 106
	num            reduce using rule 106
	simple_id      reduce using rule 106
	mixed_id       reduce using rule 106
	special_id     reduce using rule 106
	string         reduce using rule 106
	char           reduce using rule 106
	%eof           reduce using rule 106


State 54

	%start_ruleParseTopLevel -> CompUnit .              (rule 0)

	%eof           accept


State 55

	AtomExp -> '(' Exp . ')'                            (rule 108)

	')'            shift, and enter state 173


State 56

	SimpleOrQualifiedId -> SimpleOrMixedId .            (rule 217)

	import         reduce using rule 217
	type           reduce using rule 217
	interface      reduce using rule 217
	fun            reduce using rule 217
	imp            reduce using rule 217
	let            reduce using rule 217
	True           reduce using rule 217
	False          reduce using rule 217
	if             reduce using rule 217
	switch         reduce using rule 217
	cond           reduce using rule 217
	precedence     reduce using rule 217
	prim           reduce using rule 217
	protocol       reduce using rule 217
	infixl         reduce using rule 217
	'->'           reduce using rule 217
	'%('           reduce using rule 217
	'%{'           reduce using rule 217
	'['            reduce using rule 217
	']'            reduce using rule 217
	'{'            reduce using rule 217
	'}'            reduce using rule 217
	'('            reduce using rule 217
	')'            reduce using rule 217
	'<'            reduce using rule 217
	'>'            reduce using rule 217
	'|'            reduce using rule 217
	';'            reduce using rule 217
	'.'            reduce using rule 217
	'='            reduce using rule 217
	','            reduce using rule 217
	'_'            reduce using rule 217
	'@'            reduce using rule 217
	'#'            reduce using rule 217
	num            reduce using rule 217
	simple_id      reduce using rule 217
	mixed_id       reduce using rule 217
	special_id     reduce using rule 217
	string         reduce using rule 217
	char           reduce using rule 217
	%eof           reduce using rule 217


State 57

	AtomExp -> '(' SpecialId . ')'                      (rule 110)

	')'            shift, and enter state 172


State 58

	AtomExp -> '(' ')' .                                (rule 109)

	import         reduce using rule 109
	type           reduce using rule 109
	interface      reduce using rule 109
	fun            reduce using rule 109
	imp            reduce using rule 109
	let            reduce using rule 109
	True           reduce using rule 109
	False          reduce using rule 109
	if             reduce using rule 109
	switch         reduce using rule 109
	cond           reduce using rule 109
	precedence     reduce using rule 109
	prim           reduce using rule 109
	protocol       reduce using rule 109
	infixl         reduce using rule 109
	'->'           reduce using rule 109
	'%('           reduce using rule 109
	'['            reduce using rule 109
	']'            reduce using rule 109
	'{'            reduce using rule 109
	'}'            reduce using rule 109
	'('            reduce using rule 109
	')'            reduce using rule 109
	'<'            reduce using rule 109
	'>'            reduce using rule 109
	'|'            reduce using rule 109
	';'            reduce using rule 109
	'='            reduce using rule 109
	','            reduce using rule 109
	'_'            reduce using rule 109
	'@'            reduce using rule 109
	'#'            reduce using rule 109
	num            reduce using rule 109
	simple_id      reduce using rule 109
	mixed_id       reduce using rule 109
	special_id     reduce using rule 109
	string         reduce using rule 109
	char           reduce using rule 109
	%eof           reduce using rule 109


State 59

	SpecialId -> '<' .                                  (rule 229)
	SpecialId -> '<' . SpecialId                        (rule 231)

	fun            reduce using rule 229
	True           reduce using rule 229
	False          reduce using rule 229
	prim           reduce using rule 229
	'%('           reduce using rule 229
	'['            reduce using rule 229
	'('            reduce using rule 229
	')'            reduce using rule 229
	'<'            shift, and enter state 59
	'>'            shift, and enter state 60
	'|'            shift, and enter state 61
	'='            shift, and enter state 62
	num            reduce using rule 229
	simple_id      reduce using rule 229
	mixed_id       reduce using rule 229
	special_id     shift, and enter state 63
	string         reduce using rule 229
	char           reduce using rule 229

	SpecialId      goto state 171

State 60

	SpecialId -> '>' .                                  (rule 230)
	SpecialId -> '>' . SpecialId                        (rule 232)

	fun            reduce using rule 230
	True           reduce using rule 230
	False          reduce using rule 230
	prim           reduce using rule 230
	'%('           reduce using rule 230
	'['            reduce using rule 230
	'('            reduce using rule 230
	')'            reduce using rule 230
	'<'            shift, and enter state 59
	'>'            shift, and enter state 60
	'|'            shift, and enter state 61
	'='            shift, and enter state 62
	num            reduce using rule 230
	simple_id      reduce using rule 230
	mixed_id       reduce using rule 230
	special_id     shift, and enter state 63
	string         reduce using rule 230
	char           reduce using rule 230

	SpecialId      goto state 170

State 61

	SpecialId -> '|' .                                  (rule 227)
	SpecialId -> '|' . SpecialId                        (rule 228)

	fun            reduce using rule 227
	True           reduce using rule 227
	False          reduce using rule 227
	prim           reduce using rule 227
	'%('           reduce using rule 227
	'['            reduce using rule 227
	'('            reduce using rule 227
	')'            reduce using rule 227
	'<'            shift, and enter state 59
	'>'            shift, and enter state 60
	'|'            shift, and enter state 61
	'='            shift, and enter state 62
	num            reduce using rule 227
	simple_id      reduce using rule 227
	mixed_id       reduce using rule 227
	special_id     shift, and enter state 63
	string         reduce using rule 227
	char           reduce using rule 227

	SpecialId      goto state 169

State 62

	SpecialId -> '=' .                                  (rule 225)
	SpecialId -> '=' . SpecialId                        (rule 226)

	fun            reduce using rule 225
	True           reduce using rule 225
	False          reduce using rule 225
	prim           reduce using rule 225
	'%('           reduce using rule 225
	'['            reduce using rule 225
	'('            reduce using rule 225
	')'            reduce using rule 225
	'<'            shift, and enter state 59
	'>'            shift, and enter state 60
	'|'            shift, and enter state 61
	'='            shift, and enter state 62
	num            reduce using rule 225
	simple_id      reduce using rule 225
	mixed_id       reduce using rule 225
	special_id     shift, and enter state 63
	string         reduce using rule 225
	char           reduce using rule 225

	SpecialId      goto state 168

State 63

	SpecialId -> special_id .                           (rule 224)

	fun            reduce using rule 224
	True           reduce using rule 224
	False          reduce using rule 224
	prim           reduce using rule 224
	'%('           reduce using rule 224
	'['            reduce using rule 224
	'('            reduce using rule 224
	')'            reduce using rule 224
	num            reduce using rule 224
	simple_id      reduce using rule 224
	mixed_id       reduce using rule 224
	string         reduce using rule 224
	char           reduce using rule 224


State 64

	ExpOrAssigns -> ExpOrAssign .                       (rule 136)

	import         reduce using rule 136
	fun            reduce using rule 136
	let            reduce using rule 136
	True           reduce using rule 136
	False          reduce using rule 136
	if             reduce using rule 136
	switch         reduce using rule 136
	cond           reduce using rule 136
	prim           reduce using rule 136
	infixl         reduce using rule 136
	'%('           reduce using rule 136
	'['            reduce using rule 136
	'{'            reduce using rule 136
	'}'            reduce using rule 136
	'('            reduce using rule 136
	num            reduce using rule 136
	simple_id      reduce using rule 136
	mixed_id       reduce using rule 136
	string         reduce using rule 136
	char           reduce using rule 136


State 65

	Block -> '{' ExpOrAssigns . '}'                     (rule 9)
	ExpOrAssigns -> ExpOrAssigns . ExpOrAssign          (rule 137)

	import         shift, and enter state 32
	fun            shift, and enter state 35
	let            shift, and enter state 36
	True           shift, and enter state 37
	False          shift, and enter state 38
	if             shift, and enter state 39
	switch         shift, and enter state 40
	cond           shift, and enter state 41
	prim           shift, and enter state 43
	infixl         shift, and enter state 44
	'%('           shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'}'            shift, and enter state 167
	'('            shift, and enter state 48
	num            shift, and enter state 49
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 52
	char           shift, and enter state 53

	Block          goto state 8
	ListExp        goto state 11
	SingleParamFunHeadergoto state 12
	MultiParamFunHeadergoto state 13
	FunHeader      goto state 14
	LiteralExp     goto state 15
	AtomExp        goto state 16
	MemberAccessExpgoto state 17
	AppExp         goto state 18
	ConsExp        goto state 19
	CustomInfixExp goto state 20
	IfElseExp      goto state 21
	Exp            goto state 22
	ExpOrAssign    goto state 166
	TyAnn          goto state 25
	SimpleOrQualifiedIdgoto state 29
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 31

State 66

	CommaSeparatedExps -> CommaSeparatedExps . ',' Exp    (rule 87)
	ListExp -> '[' CommaSeparatedExps . ']'             (rule 89)

	']'            shift, and enter state 164
	','            shift, and enter state 165


State 67

	CommaSeparatedExps -> Exp .                         (rule 86)

	']'            reduce using rule 86
	','            reduce using rule 86


State 68

	AtomExp -> '%(' Exp . TupleRestExps ')'             (rule 111)

	','            shift, and enter state 163

	TupleRestExps  goto state 162

State 69

	TyAnn -> infixl '(' . SpecialId ')' TyParams ':' Ty Constraints    (rule 154)

	'<'            shift, and enter state 59
	'>'            shift, and enter state 60
	'|'            shift, and enter state 61
	'='            shift, and enter state 62
	special_id     shift, and enter state 63

	SpecialId      goto state 161

State 70

	AtomExp -> prim '(' . simple_id ')'                 (rule 115)

	simple_id      shift, and enter state 160


State 71

	PrecedenceAssign -> precedence SpecialId . num      (rule 146)

	num            shift, and enter state 159


State 72

	Exp -> cond '{' . CondCaseClauses '}'               (rule 129)

	fun            shift, and enter state 35
	True           shift, and enter state 37
	False          shift, and enter state 38
	if             shift, and enter state 39
	switch         shift, and enter state 40
	cond           shift, and enter state 41
	prim           shift, and enter state 43
	'%('           shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'('            shift, and enter state 48
	'_'            shift, and enter state 158
	num            shift, and enter state 49
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 52
	char           shift, and enter state 53

	Block          goto state 8
	ListExp        goto state 11
	SingleParamFunHeadergoto state 12
	MultiParamFunHeadergoto state 13
	FunHeader      goto state 14
	LiteralExp     goto state 15
	AtomExp        goto state 16
	MemberAccessExpgoto state 17
	AppExp         goto state 18
	ConsExp        goto state 19
	CustomInfixExp goto state 20
	IfElseExp      goto state 21
	Exp            goto state 155
	CondCaseClausesgoto state 156
	CondCaseClause goto state 157
	SimpleOrQualifiedIdgoto state 29
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 73

	Exp -> switch '(' . Exp ')' '{' CaseClauses '}'     (rule 128)

	fun            shift, and enter state 35
	True           shift, and enter state 37
	False          shift, and enter state 38
	if             shift, and enter state 39
	switch         shift, and enter state 40
	cond           shift, and enter state 41
	prim           shift, and enter state 43
	'%('           shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'('            shift, and enter state 48
	num            shift, and enter state 49
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 52
	char           shift, and enter state 53

	Block          goto state 8
	ListExp        goto state 11
	SingleParamFunHeadergoto state 12
	MultiParamFunHeadergoto state 13
	FunHeader      goto state 14
	LiteralExp     goto state 15
	AtomExp        goto state 16
	MemberAccessExpgoto state 17
	AppExp         goto state 18
	ConsExp        goto state 19
	CustomInfixExp goto state 20
	IfElseExp      goto state 21
	Exp            goto state 154
	SimpleOrQualifiedIdgoto state 29
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 74

	IfElseExp -> if '(' . Exp ')' Exp Exp               (rule 125)

	fun            shift, and enter state 35
	True           shift, and enter state 37
	False          shift, and enter state 38
	if             shift, and enter state 39
	switch         shift, and enter state 40
	cond           shift, and enter state 41
	prim           shift, and enter state 43
	'%('           shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'('            shift, and enter state 48
	num            shift, and enter state 49
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 52
	char           shift, and enter state 53

	Block          goto state 8
	ListExp        goto state 11
	SingleParamFunHeadergoto state 12
	MultiParamFunHeadergoto state 13
	FunHeader      goto state 14
	LiteralExp     goto state 15
	AtomExp        goto state 16
	MemberAccessExpgoto state 17
	AppExp         goto state 18
	ConsExp        goto state 19
	CustomInfixExp goto state 20
	IfElseExp      goto state 21
	Exp            goto state 153
	SimpleOrQualifiedIdgoto state 29
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 75

	AtomPatExp -> LiteralPatExp .                       (rule 77)

	'->'           reduce using rule 77
	']'            reduce using rule 77
	')'            reduce using rule 77
	'='            reduce using rule 77
	','            reduce using rule 77
	'@'            reduce using rule 77


State 76

	AtomPatExp -> TuplePatExp .                         (rule 78)

	'->'           reduce using rule 78
	']'            reduce using rule 78
	')'            reduce using rule 78
	'='            reduce using rule 78
	','            reduce using rule 78
	'@'            reduce using rule 78


State 77

	AtomPatExp -> AdtPatExp .                           (rule 79)

	'->'           reduce using rule 79
	']'            reduce using rule 79
	')'            reduce using rule 79
	'='            reduce using rule 79
	','            reduce using rule 79
	'@'            reduce using rule 79


State 78

	ListPatExp -> AtomPatExp . '@' ListPatExp           (rule 82)
	ListPatExp -> AtomPatExp .                          (rule 84)

	'->'           reduce using rule 84
	']'            reduce using rule 84
	')'            reduce using rule 84
	'='            reduce using rule 84
	','            reduce using rule 84
	'@'            shift, and enter state 152


State 79

	PatExp -> ListPatExp .                              (rule 85)

	'->'           reduce using rule 85
	']'            reduce using rule 85
	')'            reduce using rule 85
	'='            reduce using rule 85
	','            reduce using rule 85


State 80

	ExpOrAssign -> let PatExp . '=' Exp                 (rule 131)

	'='            shift, and enter state 151


State 81

	AdtPatExp -> SimpleOrQualifiedId . '(' ZeroOrMorePatExps ')'    (rule 68)
	QualifiedId -> SimpleOrQualifiedId . '.' SimpleOrMixedId    (rule 221)

	'('            shift, and enter state 150
	'.'            shift, and enter state 102


State 82

	AdtPatExp -> QualifiedId .                          (rule 69)
	SimpleOrQualifiedId -> QualifiedId .                (rule 218)

	'->'           reduce using rule 69
	']'            reduce using rule 69
	'('            reduce using rule 218
	')'            reduce using rule 69
	'.'            reduce using rule 218
	'='            reduce using rule 69
	','            reduce using rule 69
	'@'            reduce using rule 69


State 83

	AtomPatExp -> SimpleOrMixedId .                     (rule 80)
	SimpleOrQualifiedId -> SimpleOrMixedId .            (rule 217)

	'->'           reduce using rule 80
	']'            reduce using rule 80
	'('            reduce using rule 217
	')'            reduce using rule 80
	'.'            reduce using rule 217
	'='            reduce using rule 80
	','            reduce using rule 80
	'@'            reduce using rule 80


State 84

	LiteralPatExp -> True .                             (rule 61)

	'->'           reduce using rule 61
	']'            reduce using rule 61
	')'            reduce using rule 61
	'='            reduce using rule 61
	','            reduce using rule 61
	'@'            reduce using rule 61


State 85

	LiteralPatExp -> False .                            (rule 62)

	'->'           reduce using rule 62
	']'            reduce using rule 62
	')'            reduce using rule 62
	'='            reduce using rule 62
	','            reduce using rule 62
	'@'            reduce using rule 62


State 86

	TuplePatExp -> '%(' . PatExp TuplePatExpsRest ')'    (rule 67)

	True           shift, and enter state 84
	False          shift, and enter state 85
	'%('           shift, and enter state 86
	'['            shift, and enter state 87
	'('            shift, and enter state 88
	'_'            shift, and enter state 89
	num            shift, and enter state 90
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 91
	char           shift, and enter state 92

	LiteralPatExp  goto state 75
	TuplePatExp    goto state 76
	AdtPatExp      goto state 77
	AtomPatExp     goto state 78
	ListPatExp     goto state 79
	PatExp         goto state 149
	SimpleOrQualifiedIdgoto state 81
	QualifiedId    goto state 82
	SimpleOrMixedIdgoto state 83

State 87

	ListPatExp -> '[' . ZeroOrMorePatExps ']'           (rule 83)

	True           shift, and enter state 84
	False          shift, and enter state 85
	'%('           shift, and enter state 86
	'['            shift, and enter state 87
	']'            reduce using rule 72
	'('            shift, and enter state 88
	','            reduce using rule 72
	'_'            shift, and enter state 89
	num            shift, and enter state 90
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 91
	char           shift, and enter state 92

	LiteralPatExp  goto state 75
	TuplePatExp    goto state 76
	AdtPatExp      goto state 77
	ZeroOrMorePatExpsgoto state 147
	AtomPatExp     goto state 78
	ListPatExp     goto state 79
	PatExp         goto state 148
	SimpleOrQualifiedIdgoto state 81
	QualifiedId    goto state 82
	SimpleOrMixedIdgoto state 83

State 88

	AtomPatExp -> '(' . PatExp ')'                      (rule 76)

	True           shift, and enter state 84
	False          shift, and enter state 85
	'%('           shift, and enter state 86
	'['            shift, and enter state 87
	'('            shift, and enter state 88
	'_'            shift, and enter state 89
	num            shift, and enter state 90
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 91
	char           shift, and enter state 92

	LiteralPatExp  goto state 75
	TuplePatExp    goto state 76
	AdtPatExp      goto state 77
	AtomPatExp     goto state 78
	ListPatExp     goto state 79
	PatExp         goto state 146
	SimpleOrQualifiedIdgoto state 81
	QualifiedId    goto state 82
	SimpleOrMixedIdgoto state 83

State 89

	AtomPatExp -> '_' .                                 (rule 81)

	'->'           reduce using rule 81
	']'            reduce using rule 81
	')'            reduce using rule 81
	'='            reduce using rule 81
	','            reduce using rule 81
	'@'            reduce using rule 81


State 90

	LiteralPatExp -> num .                              (rule 60)

	'->'           reduce using rule 60
	']'            reduce using rule 60
	')'            reduce using rule 60
	'='            reduce using rule 60
	','            reduce using rule 60
	'@'            reduce using rule 60


State 91

	LiteralPatExp -> string .                           (rule 63)

	'->'           reduce using rule 63
	']'            reduce using rule 63
	')'            reduce using rule 63
	'='            reduce using rule 63
	','            reduce using rule 63
	'@'            reduce using rule 63


State 92

	LiteralPatExp -> char .                             (rule 64)

	'->'           reduce using rule 64
	']'            reduce using rule 64
	')'            reduce using rule 64
	'='            reduce using rule 64
	','            reduce using rule 64
	'@'            reduce using rule 64


State 93

	SingleParamFunHeader -> fun '(' . PatExp ')'        (rule 93)
	MultiParamFunHeader -> fun '(' . PatExpList ',' PatExp ')'    (rule 94)
	FunHeader -> fun '(' . ')'                          (rule 97)

	True           shift, and enter state 84
	False          shift, and enter state 85
	'%('           shift, and enter state 86
	'['            shift, and enter state 87
	'('            shift, and enter state 88
	')'            shift, and enter state 145
	','            reduce using rule 188
	'_'            shift, and enter state 89
	num            shift, and enter state 90
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 91
	char           shift, and enter state 92

	LiteralPatExp  goto state 75
	TuplePatExp    goto state 76
	AdtPatExp      goto state 77
	AtomPatExp     goto state 78
	ListPatExp     goto state 79
	PatExp         goto state 143
	PatExpList     goto state 144
	SimpleOrQualifiedIdgoto state 81
	QualifiedId    goto state 82
	SimpleOrMixedIdgoto state 83

State 94

	InterfaceDecExp -> interface SimpleOrMixedId . TyParams '{' OneOrMoreTyAnns '}'    (rule 159)

	'{'            reduce using rule 151
	'<'            shift, and enter state 97

	TyParams       goto state 142

State 95

	TypeDecImplicit -> type TyParams . Ty               (rule 173)
	TypeDecImplicit -> type TyParams . AdtAlternatives    (rule 174)

	struct         shift, and enter state 128
	primtype       shift, and enter state 129
	'%('           shift, and enter state 130
	'('            shift, and enter state 131
	'|'            shift, and enter state 141
	simple_id      shift, and enter state 132
	mixed_id       shift, and enter state 51

	AdtAlternativesgoto state 138
	AdtAlternative goto state 139
	TyTuple        goto state 122
	SimpleTy       goto state 123
	TyArrow        goto state 124
	Ty             goto state 140
	SimpleOrQualifiedIdgoto state 126
	SimpleOrQualifiedAlphaNumericIdgoto state 127
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 96

	TypeDec -> type SimpleOrMixedId . TyParams '=' Ty    (rule 175)
	TypeDec -> type SimpleOrMixedId . TyParams '=' AdtAlternatives    (rule 176)

	'<'            shift, and enter state 97
	'='            reduce using rule 151

	TyParams       goto state 137

State 97

	TyParams -> '<' . CommaSeparatedIds '>'             (rule 150)

	'>'            reduce using rule 92
	','            reduce using rule 92
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51

	CommaSeparatedIdsgoto state 136
	SimpleOrMixedIdgoto state 134

State 98

	ExpOrAssign -> import SimpleOrQualifiedId .         (rule 133)
	ExpOrAssign -> import SimpleOrQualifiedId . '=' simple_id    (rule 134)
	QualifiedId -> SimpleOrQualifiedId . '.' SimpleOrMixedId    (rule 221)

	import         reduce using rule 133
	fun            reduce using rule 133
	let            reduce using rule 133
	True           reduce using rule 133
	False          reduce using rule 133
	if             reduce using rule 133
	switch         reduce using rule 133
	cond           reduce using rule 133
	prim           reduce using rule 133
	infixl         reduce using rule 133
	'%('           reduce using rule 133
	'['            reduce using rule 133
	'{'            reduce using rule 133
	'}'            reduce using rule 133
	'('            reduce using rule 133
	'.'            shift, and enter state 102
	'='            shift, and enter state 135
	num            reduce using rule 133
	simple_id      reduce using rule 133
	mixed_id       reduce using rule 133
	string         reduce using rule 133
	char           reduce using rule 133
	%eof           reduce using rule 133


State 99

	TyAnn -> SimpleOrMixedId '<' . CommaSeparatedIds '>' ':' Ty Constraints    (rule 153)

	'>'            reduce using rule 92
	','            reduce using rule 92
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51

	CommaSeparatedIdsgoto state 133
	SimpleOrMixedIdgoto state 134

State 100

	TyAnn -> SimpleOrMixedId ':' . Ty Constraints       (rule 152)

	struct         shift, and enter state 128
	primtype       shift, and enter state 129
	'%('           shift, and enter state 130
	'('            shift, and enter state 131
	simple_id      shift, and enter state 132
	mixed_id       shift, and enter state 51

	TyTuple        goto state 122
	SimpleTy       goto state 123
	TyArrow        goto state 124
	Ty             goto state 125
	SimpleOrQualifiedIdgoto state 126
	SimpleOrQualifiedAlphaNumericIdgoto state 127
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 101

	AtomExp -> SimpleOrQualifiedId '%{' . StructFieldInitializers '}'    (rule 113)

	'}'            reduce using rule 216
	simple_id      shift, and enter state 50
			(reduce using rule 216)

	mixed_id       shift, and enter state 51
			(reduce using rule 216)


	StructFieldInitializergoto state 119
	StructFieldInitializersgoto state 120
	SimpleOrMixedIdgoto state 121

State 102

	QualifiedId -> SimpleOrQualifiedId '.' . SimpleOrMixedId    (rule 221)

	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51

	SimpleOrMixedIdgoto state 118

State 103

	CustomInfixExp -> CustomInfixExp SpecialId . ConsExp    (rule 123)

	fun            shift, and enter state 35
	True           shift, and enter state 37
	False          shift, and enter state 38
	prim           shift, and enter state 43
	'%('           shift, and enter state 45
	'['            shift, and enter state 46
	'('            shift, and enter state 48
	num            shift, and enter state 49
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 52
	char           shift, and enter state 53

	ListExp        goto state 11
	SingleParamFunHeadergoto state 12
	MultiParamFunHeadergoto state 13
	FunHeader      goto state 14
	LiteralExp     goto state 15
	AtomExp        goto state 16
	MemberAccessExpgoto state 17
	AppExp         goto state 18
	ConsExp        goto state 117
	SimpleOrQualifiedIdgoto state 29
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 104

	AppExp -> AppExp '(' . ArgExps ')'                  (rule 119)

	fun            shift, and enter state 35
	True           shift, and enter state 37
	False          shift, and enter state 38
	if             shift, and enter state 39
	switch         shift, and enter state 40
	cond           shift, and enter state 41
	prim           shift, and enter state 43
	'%('           shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'('            shift, and enter state 48
	')'            reduce using rule 169
	','            reduce using rule 169
	num            shift, and enter state 49
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 52
	char           shift, and enter state 53

	Block          goto state 8
	ListExp        goto state 11
	SingleParamFunHeadergoto state 12
	MultiParamFunHeadergoto state 13
	FunHeader      goto state 14
	LiteralExp     goto state 15
	AtomExp        goto state 16
	MemberAccessExpgoto state 17
	AppExp         goto state 18
	ConsExp        goto state 19
	CustomInfixExp goto state 20
	IfElseExp      goto state 21
	Exp            goto state 115
	ArgExps        goto state 116
	SimpleOrQualifiedIdgoto state 29
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 105

	ConsExp -> AppExp '@' . ConsExp                     (rule 121)

	fun            shift, and enter state 35
	True           shift, and enter state 37
	False          shift, and enter state 38
	prim           shift, and enter state 43
	'%('           shift, and enter state 45
	'['            shift, and enter state 46
	'('            shift, and enter state 48
	num            shift, and enter state 49
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 52
	char           shift, and enter state 53

	ListExp        goto state 11
	SingleParamFunHeadergoto state 12
	MultiParamFunHeadergoto state 13
	FunHeader      goto state 14
	LiteralExp     goto state 15
	AtomExp        goto state 16
	MemberAccessExpgoto state 17
	AppExp         goto state 18
	ConsExp        goto state 114
	SimpleOrQualifiedIdgoto state 29
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 106

	MemberAccessExp -> AppExp '#' . SimpleOrMixedId     (rule 117)

	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51

	SimpleOrMixedIdgoto state 113

State 107

	AtomExp -> FunHeader FunBody .                      (rule 114)

	import         reduce using rule 114
	type           reduce using rule 114
	interface      reduce using rule 114
	fun            reduce using rule 114
	imp            reduce using rule 114
	let            reduce using rule 114
	True           reduce using rule 114
	False          reduce using rule 114
	if             reduce using rule 114
	switch         reduce using rule 114
	cond           reduce using rule 114
	precedence     reduce using rule 114
	prim           reduce using rule 114
	protocol       reduce using rule 114
	infixl         reduce using rule 114
	'->'           reduce using rule 114
	'%('           reduce using rule 114
	'['            reduce using rule 114
	']'            reduce using rule 114
	'{'            reduce using rule 114
	'}'            reduce using rule 114
	'('            reduce using rule 114
	')'            reduce using rule 114
	'<'            reduce using rule 114
	'>'            reduce using rule 114
	'|'            reduce using rule 114
	';'            reduce using rule 114
	'='            reduce using rule 114
	','            reduce using rule 114
	'_'            reduce using rule 114
	'@'            reduce using rule 114
	'#'            reduce using rule 114
	num            reduce using rule 114
	simple_id      reduce using rule 114
	mixed_id       reduce using rule 114
	special_id     reduce using rule 114
	string         reduce using rule 114
	char           reduce using rule 114
	%eof           reduce using rule 114


State 108

	FunBody -> '=' . Exp                                (rule 149)

	fun            shift, and enter state 35
	True           shift, and enter state 37
	False          shift, and enter state 38
	if             shift, and enter state 39
	switch         shift, and enter state 40
	cond           shift, and enter state 41
	prim           shift, and enter state 43
	'%('           shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'('            shift, and enter state 48
	num            shift, and enter state 49
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 52
	char           shift, and enter state 53

	Block          goto state 8
	ListExp        goto state 11
	SingleParamFunHeadergoto state 12
	MultiParamFunHeadergoto state 13
	FunHeader      goto state 14
	LiteralExp     goto state 15
	AtomExp        goto state 16
	MemberAccessExpgoto state 17
	AppExp         goto state 18
	ConsExp        goto state 19
	CustomInfixExp goto state 20
	IfElseExp      goto state 21
	Exp            goto state 112
	SimpleOrQualifiedIdgoto state 29
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 109

	ModuleDec -> module SimpleOrQualifiedId . '{' ZeroOrMoreModuleLevelExps '}'    (rule 50)
	QualifiedId -> SimpleOrQualifiedId . '.' SimpleOrMixedId    (rule 221)

	'{'            shift, and enter state 111
	'.'            shift, and enter state 102


State 110

	OneOrMoreTopLevelExps -> OneOrMoreTopLevelExps TopLevelExp .    (rule 15)

	module         reduce using rule 15
	%eof           reduce using rule 15


State 111

	ModuleDec -> module SimpleOrQualifiedId '{' . ZeroOrMoreModuleLevelExps '}'    (rule 50)

	import         shift, and enter state 235
			(reduce using rule 18)

	type           shift, and enter state 33
			(reduce using rule 18)

	interface      shift, and enter state 34
			(reduce using rule 18)

	imp            shift, and enter state 236
			(reduce using rule 18)

	let            shift, and enter state 237
			(reduce using rule 18)

	precedence     shift, and enter state 42
			(reduce using rule 18)

	protocol       shift, and enter state 238
			(reduce using rule 18)

	infixl         shift, and enter state 239
			(reduce using rule 18)

	'}'            reduce using rule 18
	simple_id      shift, and enter state 50
			(reduce using rule 18)

	mixed_id       shift, and enter state 51
			(reduce using rule 18)


	ZeroOrMoreModuleLevelExpsgoto state 222
	ModuleLevelExp goto state 223
	ImportExp      goto state 224
	SelectiveImportExpgoto state 225
	ProtoDec       goto state 226
	ProtoImp       goto state 227
	ModuleLevelBindingExpgoto state 228
	PrecedenceAssigngoto state 229
	FunDef         goto state 230
	TyAnn          goto state 231
	InterfaceDecExpgoto state 232
	TypeDecImplicitgoto state 27
	TypeDec        goto state 233
	SimpleOrMixedIdgoto state 234

State 112

	FunBody -> '=' Exp .                                (rule 149)

	import         reduce using rule 149
	type           reduce using rule 149
	interface      reduce using rule 149
	fun            reduce using rule 149
	imp            reduce using rule 149
	let            reduce using rule 149
	True           reduce using rule 149
	False          reduce using rule 149
	if             reduce using rule 149
	switch         reduce using rule 149
	cond           reduce using rule 149
	precedence     reduce using rule 149
	prim           reduce using rule 149
	protocol       reduce using rule 149
	infixl         reduce using rule 149
	'->'           reduce using rule 149
	'%('           reduce using rule 149
	'['            reduce using rule 149
	']'            reduce using rule 149
	'{'            reduce using rule 149
	'}'            reduce using rule 149
	'('            reduce using rule 149
	')'            reduce using rule 149
	'<'            reduce using rule 149
	'>'            reduce using rule 149
	'|'            reduce using rule 149
	';'            reduce using rule 149
	'='            reduce using rule 149
	','            reduce using rule 149
	'_'            reduce using rule 149
	'@'            reduce using rule 149
	'#'            reduce using rule 149
	num            reduce using rule 149
	simple_id      reduce using rule 149
	mixed_id       reduce using rule 149
	special_id     reduce using rule 149
	string         reduce using rule 149
	char           reduce using rule 149
	%eof           reduce using rule 149


State 113

	MemberAccessExp -> AppExp '#' SimpleOrMixedId .     (rule 117)

	import         reduce using rule 117
	type           reduce using rule 117
	interface      reduce using rule 117
	fun            reduce using rule 117
	imp            reduce using rule 117
	let            reduce using rule 117
	True           reduce using rule 117
	False          reduce using rule 117
	if             reduce using rule 117
	switch         reduce using rule 117
	cond           reduce using rule 117
	precedence     reduce using rule 117
	prim           reduce using rule 117
	protocol       reduce using rule 117
	infixl         reduce using rule 117
	'->'           reduce using rule 117
	'%('           reduce using rule 117
	'['            reduce using rule 117
	']'            reduce using rule 117
	'{'            reduce using rule 117
	'}'            reduce using rule 117
	'('            reduce using rule 117
	')'            reduce using rule 117
	'<'            reduce using rule 117
	'>'            reduce using rule 117
	'|'            reduce using rule 117
	';'            reduce using rule 117
	'='            reduce using rule 117
	','            reduce using rule 117
	'_'            reduce using rule 117
	'@'            reduce using rule 117
	'#'            reduce using rule 117
	num            reduce using rule 117
	simple_id      reduce using rule 117
	mixed_id       reduce using rule 117
	special_id     reduce using rule 117
	string         reduce using rule 117
	char           reduce using rule 117
	%eof           reduce using rule 117


State 114

	ConsExp -> AppExp '@' ConsExp .                     (rule 121)

	import         reduce using rule 121
	type           reduce using rule 121
	interface      reduce using rule 121
	fun            reduce using rule 121
	imp            reduce using rule 121
	let            reduce using rule 121
	True           reduce using rule 121
	False          reduce using rule 121
	if             reduce using rule 121
	switch         reduce using rule 121
	cond           reduce using rule 121
	precedence     reduce using rule 121
	prim           reduce using rule 121
	protocol       reduce using rule 121
	infixl         reduce using rule 121
	'->'           reduce using rule 121
	'%('           reduce using rule 121
	'['            reduce using rule 121
	']'            reduce using rule 121
	'{'            reduce using rule 121
	'}'            reduce using rule 121
	'('            reduce using rule 121
	')'            reduce using rule 121
	'<'            reduce using rule 121
	'>'            reduce using rule 121
	'|'            reduce using rule 121
	';'            reduce using rule 121
	'='            reduce using rule 121
	','            reduce using rule 121
	'_'            reduce using rule 121
	'@'            reduce using rule 121
	'#'            reduce using rule 121
	num            reduce using rule 121
	simple_id      reduce using rule 121
	mixed_id       reduce using rule 121
	special_id     reduce using rule 121
	string         reduce using rule 121
	char           reduce using rule 121
	%eof           reduce using rule 121


State 115

	ArgExps -> Exp .                                    (rule 167)

	')'            reduce using rule 167
	','            reduce using rule 167


State 116

	AppExp -> AppExp '(' ArgExps . ')'                  (rule 119)
	ArgExps -> ArgExps . ',' Exp                        (rule 168)

	')'            shift, and enter state 220
	','            shift, and enter state 221


State 117

	CustomInfixExp -> CustomInfixExp SpecialId ConsExp .    (rule 123)

	import         reduce using rule 123
	type           reduce using rule 123
	interface      reduce using rule 123
	fun            reduce using rule 123
	imp            reduce using rule 123
	let            reduce using rule 123
	True           reduce using rule 123
	False          reduce using rule 123
	if             reduce using rule 123
	switch         reduce using rule 123
	cond           reduce using rule 123
	precedence     reduce using rule 123
	prim           reduce using rule 123
	protocol       reduce using rule 123
	infixl         reduce using rule 123
	'->'           reduce using rule 123
	'%('           reduce using rule 123
	'['            reduce using rule 123
	']'            reduce using rule 123
	'{'            reduce using rule 123
	'}'            reduce using rule 123
	'('            reduce using rule 123
	')'            reduce using rule 123
	'<'            reduce using rule 123
	'>'            reduce using rule 123
	'|'            reduce using rule 123
	';'            reduce using rule 123
	'='            reduce using rule 123
	','            reduce using rule 123
	'_'            reduce using rule 123
	'@'            reduce using rule 123
	'#'            reduce using rule 123
	num            reduce using rule 123
	simple_id      reduce using rule 123
	mixed_id       reduce using rule 123
	special_id     reduce using rule 123
	string         reduce using rule 123
	char           reduce using rule 123
	%eof           reduce using rule 123


State 118

	QualifiedId -> SimpleOrQualifiedId '.' SimpleOrMixedId .    (rule 221)

	import         reduce using rule 221
	type           reduce using rule 221
	interface      reduce using rule 221
	fun            reduce using rule 221
	imp            reduce using rule 221
	let            reduce using rule 221
	True           reduce using rule 221
	False          reduce using rule 221
	if             reduce using rule 221
	switch         reduce using rule 221
	cond           reduce using rule 221
	precedence     reduce using rule 221
	prim           reduce using rule 221
	protocol       reduce using rule 221
	infixl         reduce using rule 221
	'->'           reduce using rule 221
	'%('           reduce using rule 221
	'%{'           reduce using rule 221
	'['            reduce using rule 221
	']'            reduce using rule 221
	'{'            reduce using rule 221
	'}'            reduce using rule 221
	'('            reduce using rule 221
	')'            reduce using rule 221
	'<'            reduce using rule 221
	'>'            reduce using rule 221
	'|'            reduce using rule 221
	';'            reduce using rule 221
	'.'            reduce using rule 221
	'='            reduce using rule 221
	','            reduce using rule 221
	'_'            reduce using rule 221
	'@'            reduce using rule 221
	'#'            reduce using rule 221
	num            reduce using rule 221
	simple_id      reduce using rule 221
	mixed_id       reduce using rule 221
	special_id     reduce using rule 221
	string         reduce using rule 221
	char           reduce using rule 221
	%eof           reduce using rule 221


State 119

	StructFieldInitializers -> StructFieldInitializer .    (rule 214)

	'}'            reduce using rule 214
	simple_id      reduce using rule 214
	mixed_id       reduce using rule 214


State 120

	AtomExp -> SimpleOrQualifiedId '%{' StructFieldInitializers . '}'    (rule 113)
	StructFieldInitializers -> StructFieldInitializers . StructFieldInitializer    (rule 215)

	'}'            shift, and enter state 219
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51

	StructFieldInitializergoto state 218
	SimpleOrMixedIdgoto state 121

State 121

	StructFieldInitializer -> SimpleOrMixedId . '=' Exp ';'    (rule 213)

	'='            shift, and enter state 217


State 122

	SimpleTy -> TyTuple .                               (rule 201)

	import         reduce using rule 201
	type           reduce using rule 201
	interface      reduce using rule 201
	fun            reduce using rule 201
	imp            reduce using rule 201
	let            reduce using rule 201
	True           reduce using rule 201
	False          reduce using rule 201
	if             reduce using rule 201
	switch         reduce using rule 201
	cond           reduce using rule 201
	precedence     reduce using rule 201
	prim           reduce using rule 201
	protocol       reduce using rule 201
	when           reduce using rule 201
	infixl         reduce using rule 201
	'->'           reduce using rule 201
	'%('           reduce using rule 201
	'['            reduce using rule 201
	'{'            reduce using rule 201
	'}'            reduce using rule 201
	'('            reduce using rule 201
	')'            reduce using rule 201
	'>'            reduce using rule 201
	':'            reduce using rule 201
	','            reduce using rule 201
	num            reduce using rule 201
	simple_id      reduce using rule 201
	mixed_id       reduce using rule 201
	string         reduce using rule 201
	char           reduce using rule 201
	%eof           reduce using rule 201


State 123

	SimpleTy -> SimpleTy . '[' ']'                      (rule 203)
	TyArrow -> SimpleTy .                               (rule 205)
	TyArrow -> SimpleTy . '->' TyArrow                  (rule 206)

	import         reduce using rule 205
	type           reduce using rule 205
	interface      reduce using rule 205
	fun            reduce using rule 205
	imp            reduce using rule 205
	let            reduce using rule 205
	True           reduce using rule 205
	False          reduce using rule 205
	if             reduce using rule 205
	switch         reduce using rule 205
	cond           reduce using rule 205
	precedence     reduce using rule 205
	prim           reduce using rule 205
	protocol       reduce using rule 205
	when           reduce using rule 205
	infixl         reduce using rule 205
	'->'           shift, and enter state 215
	'%('           reduce using rule 205
	'['            shift, and enter state 216
			(reduce using rule 205)

	'{'            reduce using rule 205
	'}'            reduce using rule 205
	'('            reduce using rule 205
	')'            reduce using rule 205
	'>'            reduce using rule 205
	','            reduce using rule 205
	num            reduce using rule 205
	simple_id      reduce using rule 205
	mixed_id       reduce using rule 205
	string         reduce using rule 205
	char           reduce using rule 205
	%eof           reduce using rule 205


State 124

	Ty -> TyArrow .                                     (rule 208)

	import         reduce using rule 208
	type           reduce using rule 208
	interface      reduce using rule 208
	fun            reduce using rule 208
	imp            reduce using rule 208
	let            reduce using rule 208
	True           reduce using rule 208
	False          reduce using rule 208
	if             reduce using rule 208
	switch         reduce using rule 208
	cond           reduce using rule 208
	precedence     reduce using rule 208
	prim           reduce using rule 208
	protocol       reduce using rule 208
	when           reduce using rule 208
	infixl         reduce using rule 208
	'%('           reduce using rule 208
	'['            reduce using rule 208
	'{'            reduce using rule 208
	'}'            reduce using rule 208
	'('            reduce using rule 208
	')'            reduce using rule 208
	'>'            reduce using rule 208
	','            reduce using rule 208
	num            reduce using rule 208
	simple_id      reduce using rule 208
	mixed_id       reduce using rule 208
	string         reduce using rule 208
	char           reduce using rule 208
	%eof           reduce using rule 208


State 125

	TyAnn -> SimpleOrMixedId ':' Ty . Constraints       (rule 152)

	import         reduce using rule 54
	type           reduce using rule 54
	interface      reduce using rule 54
	fun            reduce using rule 54
	imp            reduce using rule 54
	let            reduce using rule 54
	True           reduce using rule 54
	False          reduce using rule 54
	if             reduce using rule 54
	switch         reduce using rule 54
	cond           reduce using rule 54
	precedence     reduce using rule 54
	prim           reduce using rule 54
	protocol       reduce using rule 54
	when           shift, and enter state 214
			(reduce using rule 54)

	infixl         reduce using rule 54
	'%('           reduce using rule 54
	'['            reduce using rule 54
	'{'            reduce using rule 54
	'}'            reduce using rule 54
	'('            reduce using rule 54
	num            reduce using rule 54
	simple_id      reduce using rule 54
	mixed_id       reduce using rule 54
	string         reduce using rule 54
	char           reduce using rule 54
	%eof           reduce using rule 54

	Constraint     goto state 212
	Constraints    goto state 213

State 126

	SimpleOrQualifiedAlphaNumericId -> SimpleOrQualifiedId . '.' simple_id    (rule 220)
	QualifiedId -> SimpleOrQualifiedId . '.' SimpleOrMixedId    (rule 221)

	'.'            shift, and enter state 211


State 127

	SimpleTy -> SimpleOrQualifiedAlphaNumericId . TyArgs    (rule 202)

	import         reduce using rule 198
	type           reduce using rule 198
	interface      reduce using rule 198
	fun            reduce using rule 198
	imp            reduce using rule 198
	let            reduce using rule 198
	True           reduce using rule 198
	False          reduce using rule 198
	if             reduce using rule 198
	switch         reduce using rule 198
	cond           reduce using rule 198
	precedence     reduce using rule 198
	prim           reduce using rule 198
	protocol       reduce using rule 198
	when           reduce using rule 198
	infixl         reduce using rule 198
	'->'           reduce using rule 198
	'%('           reduce using rule 198
	'['            reduce using rule 198
	'{'            reduce using rule 198
	'}'            reduce using rule 198
	'('            reduce using rule 198
	')'            reduce using rule 198
	'<'            shift, and enter state 210
	'>'            reduce using rule 198
	':'            reduce using rule 198
	','            reduce using rule 198
	num            reduce using rule 198
	simple_id      reduce using rule 198
	mixed_id       reduce using rule 198
	string         reduce using rule 198
	char           reduce using rule 198
	%eof           reduce using rule 198

	TyArgs         goto state 209

State 128

	SimpleTy -> struct . '{' TyStructFields '}'         (rule 200)

	'{'            shift, and enter state 208


State 129

	SimpleTy -> primtype . '(' simple_id ')'            (rule 199)

	'('            shift, and enter state 207


State 130

	TyTuple -> '%(' . Ty TyTupleRest ')'                (rule 194)

	struct         shift, and enter state 128
	primtype       shift, and enter state 129
	'%('           shift, and enter state 130
	'('            shift, and enter state 131
	simple_id      shift, and enter state 132
	mixed_id       shift, and enter state 51

	TyTuple        goto state 122
	SimpleTy       goto state 123
	TyArrow        goto state 124
	Ty             goto state 206
	SimpleOrQualifiedIdgoto state 126
	SimpleOrQualifiedAlphaNumericIdgoto state 127
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 131

	SimpleTy -> '(' . Ty ')'                            (rule 204)
	TyArrow -> '(' . '->' Ty ')'                        (rule 207)

	struct         shift, and enter state 128
	primtype       shift, and enter state 129
	'->'           shift, and enter state 205
	'%('           shift, and enter state 130
	'('            shift, and enter state 131
	simple_id      shift, and enter state 132
	mixed_id       shift, and enter state 51

	TyTuple        goto state 122
	SimpleTy       goto state 123
	TyArrow        goto state 124
	Ty             goto state 204
	SimpleOrQualifiedIdgoto state 126
	SimpleOrQualifiedAlphaNumericIdgoto state 127
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 132

	SimpleOrQualifiedAlphaNumericId -> simple_id .      (rule 219)
	SimpleOrMixedId -> simple_id .                      (rule 222)

	import         reduce using rule 219
	type           reduce using rule 219
	interface      reduce using rule 219
	fun            reduce using rule 219
	imp            reduce using rule 219
	let            reduce using rule 219
	True           reduce using rule 219
	False          reduce using rule 219
	if             reduce using rule 219
	switch         reduce using rule 219
	cond           reduce using rule 219
	precedence     reduce using rule 219
	prim           reduce using rule 219
	protocol       reduce using rule 219
	when           reduce using rule 219
	infixl         reduce using rule 219
	'->'           reduce using rule 219
	'%('           reduce using rule 219
	'['            reduce using rule 219
	'{'            reduce using rule 219
	'}'            reduce using rule 219
	'('            reduce using rule 219
	')'            reduce using rule 219
	'<'            reduce using rule 219
	'>'            reduce using rule 219
	'.'            reduce using rule 222
	':'            reduce using rule 219
	','            reduce using rule 219
	num            reduce using rule 219
	simple_id      reduce using rule 219
	mixed_id       reduce using rule 219
	string         reduce using rule 219
	char           reduce using rule 219
	%eof           reduce using rule 219


State 133

	CommaSeparatedIds -> CommaSeparatedIds . ',' SimpleOrMixedId    (rule 91)
	TyAnn -> SimpleOrMixedId '<' CommaSeparatedIds . '>' ':' Ty Constraints    (rule 153)

	'>'            shift, and enter state 203
	','            shift, and enter state 201


State 134

	CommaSeparatedIds -> SimpleOrMixedId .              (rule 90)

	'>'            reduce using rule 90
	','            reduce using rule 90


State 135

	ExpOrAssign -> import SimpleOrQualifiedId '=' . simple_id    (rule 134)

	simple_id      shift, and enter state 202


State 136

	CommaSeparatedIds -> CommaSeparatedIds . ',' SimpleOrMixedId    (rule 91)
	TyParams -> '<' CommaSeparatedIds . '>'             (rule 150)

	'>'            shift, and enter state 200
	','            shift, and enter state 201


State 137

	TypeDec -> type SimpleOrMixedId TyParams . '=' Ty    (rule 175)
	TypeDec -> type SimpleOrMixedId TyParams . '=' AdtAlternatives    (rule 176)

	'='            shift, and enter state 199


State 138

	TypeDecImplicit -> type TyParams AdtAlternatives .    (rule 174)
	AdtAlternatives -> AdtAlternatives . AdtAlternative    (rule 179)

	import         reduce using rule 174
	type           reduce using rule 174
	interface      reduce using rule 174
	imp            reduce using rule 174
	let            reduce using rule 174
	precedence     reduce using rule 174
	protocol       reduce using rule 174
	infixl         reduce using rule 174
	'}'            reduce using rule 174
	'|'            shift, and enter state 141
	simple_id      reduce using rule 174
	mixed_id       reduce using rule 174
	%eof           reduce using rule 174

	AdtAlternative goto state 198

State 139

	AdtAlternatives -> AdtAlternative .                 (rule 178)

	import         reduce using rule 178
	type           reduce using rule 178
	interface      reduce using rule 178
	imp            reduce using rule 178
	let            reduce using rule 178
	precedence     reduce using rule 178
	protocol       reduce using rule 178
	infixl         reduce using rule 178
	'}'            reduce using rule 178
	'|'            reduce using rule 178
	simple_id      reduce using rule 178
	mixed_id       reduce using rule 178
	%eof           reduce using rule 178


State 140

	TypeDecImplicit -> type TyParams Ty .               (rule 173)

	import         reduce using rule 173
	type           reduce using rule 173
	interface      reduce using rule 173
	imp            reduce using rule 173
	let            reduce using rule 173
	precedence     reduce using rule 173
	protocol       reduce using rule 173
	infixl         reduce using rule 173
	'}'            reduce using rule 173
	simple_id      reduce using rule 173
	mixed_id       reduce using rule 173
	%eof           reduce using rule 173


State 141

	AdtAlternative -> '|' . SimpleOrMixedId '(' CommaSeparatedTys ')'    (rule 180)
	AdtAlternative -> '|' . SimpleOrMixedId             (rule 181)

	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51

	SimpleOrMixedIdgoto state 197

State 142

	InterfaceDecExp -> interface SimpleOrMixedId TyParams . '{' OneOrMoreTyAnns '}'    (rule 159)

	'{'            shift, and enter state 196


State 143

	SingleParamFunHeader -> fun '(' PatExp . ')'        (rule 93)
	PatExpList -> PatExp .                              (rule 186)

	')'            shift, and enter state 195
	','            reduce using rule 186


State 144

	MultiParamFunHeader -> fun '(' PatExpList . ',' PatExp ')'    (rule 94)
	PatExpList -> PatExpList . ',' PatExp               (rule 187)

	','            shift, and enter state 194


State 145

	FunHeader -> fun '(' ')' .                          (rule 97)

	'='            reduce using rule 97


State 146

	AtomPatExp -> '(' PatExp . ')'                      (rule 76)

	')'            shift, and enter state 193


State 147

	ZeroOrMorePatExps -> ZeroOrMorePatExps . ',' PatExp    (rule 71)
	ListPatExp -> '[' ZeroOrMorePatExps . ']'           (rule 83)

	']'            shift, and enter state 191
	','            shift, and enter state 192


State 148

	ZeroOrMorePatExps -> PatExp .                       (rule 70)

	']'            reduce using rule 70
	')'            reduce using rule 70
	','            reduce using rule 70


State 149

	TuplePatExp -> '%(' PatExp . TuplePatExpsRest ')'    (rule 67)

	','            shift, and enter state 190

	TuplePatExpsRestgoto state 189

State 150

	AdtPatExp -> SimpleOrQualifiedId '(' . ZeroOrMorePatExps ')'    (rule 68)

	True           shift, and enter state 84
	False          shift, and enter state 85
	'%('           shift, and enter state 86
	'['            shift, and enter state 87
	'('            shift, and enter state 88
	')'            reduce using rule 72
	','            reduce using rule 72
	'_'            shift, and enter state 89
	num            shift, and enter state 90
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 91
	char           shift, and enter state 92

	LiteralPatExp  goto state 75
	TuplePatExp    goto state 76
	AdtPatExp      goto state 77
	ZeroOrMorePatExpsgoto state 188
	AtomPatExp     goto state 78
	ListPatExp     goto state 79
	PatExp         goto state 148
	SimpleOrQualifiedIdgoto state 81
	QualifiedId    goto state 82
	SimpleOrMixedIdgoto state 83

State 151

	ExpOrAssign -> let PatExp '=' . Exp                 (rule 131)

	fun            shift, and enter state 35
	True           shift, and enter state 37
	False          shift, and enter state 38
	if             shift, and enter state 39
	switch         shift, and enter state 40
	cond           shift, and enter state 41
	prim           shift, and enter state 43
	'%('           shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'('            shift, and enter state 48
	num            shift, and enter state 49
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 52
	char           shift, and enter state 53

	Block          goto state 8
	ListExp        goto state 11
	SingleParamFunHeadergoto state 12
	MultiParamFunHeadergoto state 13
	FunHeader      goto state 14
	LiteralExp     goto state 15
	AtomExp        goto state 16
	MemberAccessExpgoto state 17
	AppExp         goto state 18
	ConsExp        goto state 19
	CustomInfixExp goto state 20
	IfElseExp      goto state 21
	Exp            goto state 187
	SimpleOrQualifiedIdgoto state 29
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 152

	ListPatExp -> AtomPatExp '@' . ListPatExp           (rule 82)

	True           shift, and enter state 84
	False          shift, and enter state 85
	'%('           shift, and enter state 86
	'['            shift, and enter state 87
	'('            shift, and enter state 88
	'_'            shift, and enter state 89
	num            shift, and enter state 90
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 91
	char           shift, and enter state 92

	LiteralPatExp  goto state 75
	TuplePatExp    goto state 76
	AdtPatExp      goto state 77
	AtomPatExp     goto state 78
	ListPatExp     goto state 186
	SimpleOrQualifiedIdgoto state 81
	QualifiedId    goto state 82
	SimpleOrMixedIdgoto state 83

State 153

	IfElseExp -> if '(' Exp . ')' Exp Exp               (rule 125)

	')'            shift, and enter state 185


State 154

	Exp -> switch '(' Exp . ')' '{' CaseClauses '}'     (rule 128)

	')'            shift, and enter state 184


State 155

	CondCaseClause -> Exp . '->' Exp                    (rule 165)

	'->'           shift, and enter state 183


State 156

	Exp -> cond '{' CondCaseClauses . '}'               (rule 129)
	CondCaseClauses -> CondCaseClauses . CondCaseClause    (rule 164)

	fun            shift, and enter state 35
	True           shift, and enter state 37
	False          shift, and enter state 38
	if             shift, and enter state 39
	switch         shift, and enter state 40
	cond           shift, and enter state 41
	prim           shift, and enter state 43
	'%('           shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'}'            shift, and enter state 182
	'('            shift, and enter state 48
	'_'            shift, and enter state 158
	num            shift, and enter state 49
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 52
	char           shift, and enter state 53

	Block          goto state 8
	ListExp        goto state 11
	SingleParamFunHeadergoto state 12
	MultiParamFunHeadergoto state 13
	FunHeader      goto state 14
	LiteralExp     goto state 15
	AtomExp        goto state 16
	MemberAccessExpgoto state 17
	AppExp         goto state 18
	ConsExp        goto state 19
	CustomInfixExp goto state 20
	IfElseExp      goto state 21
	Exp            goto state 155
	CondCaseClause goto state 181
	SimpleOrQualifiedIdgoto state 29
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 157

	CondCaseClauses -> CondCaseClause .                 (rule 163)

	fun            reduce using rule 163
	True           reduce using rule 163
	False          reduce using rule 163
	if             reduce using rule 163
	switch         reduce using rule 163
	cond           reduce using rule 163
	prim           reduce using rule 163
	'%('           reduce using rule 163
	'['            reduce using rule 163
	'{'            reduce using rule 163
	'}'            reduce using rule 163
	'('            reduce using rule 163
	'_'            reduce using rule 163
	num            reduce using rule 163
	simple_id      reduce using rule 163
	mixed_id       reduce using rule 163
	string         reduce using rule 163
	char           reduce using rule 163


State 158

	CondCaseClause -> '_' . '->' Exp                    (rule 166)

	'->'           shift, and enter state 180


State 159

	PrecedenceAssign -> precedence SpecialId num .      (rule 146)

	import         reduce using rule 146
	type           reduce using rule 146
	interface      reduce using rule 146
	imp            reduce using rule 146
	let            reduce using rule 146
	precedence     reduce using rule 146
	protocol       reduce using rule 146
	infixl         reduce using rule 146
	'}'            reduce using rule 146
	simple_id      reduce using rule 146
	mixed_id       reduce using rule 146
	%eof           reduce using rule 146


State 160

	AtomExp -> prim '(' simple_id . ')'                 (rule 115)

	')'            shift, and enter state 179


State 161

	TyAnn -> infixl '(' SpecialId . ')' TyParams ':' Ty Constraints    (rule 154)

	')'            shift, and enter state 178


State 162

	TupleRestExps -> TupleRestExps . ',' Exp            (rule 59)
	AtomExp -> '%(' Exp TupleRestExps . ')'             (rule 111)

	')'            shift, and enter state 176
	','            shift, and enter state 177


State 163

	TupleRestExps -> ',' . Exp                          (rule 58)

	fun            shift, and enter state 35
	True           shift, and enter state 37
	False          shift, and enter state 38
	if             shift, and enter state 39
	switch         shift, and enter state 40
	cond           shift, and enter state 41
	prim           shift, and enter state 43
	'%('           shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'('            shift, and enter state 48
	num            shift, and enter state 49
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 52
	char           shift, and enter state 53

	Block          goto state 8
	ListExp        goto state 11
	SingleParamFunHeadergoto state 12
	MultiParamFunHeadergoto state 13
	FunHeader      goto state 14
	LiteralExp     goto state 15
	AtomExp        goto state 16
	MemberAccessExpgoto state 17
	AppExp         goto state 18
	ConsExp        goto state 19
	CustomInfixExp goto state 20
	IfElseExp      goto state 21
	Exp            goto state 175
	SimpleOrQualifiedIdgoto state 29
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 164

	ListExp -> '[' CommaSeparatedExps ']' .             (rule 89)

	import         reduce using rule 89
	type           reduce using rule 89
	interface      reduce using rule 89
	fun            reduce using rule 89
	imp            reduce using rule 89
	let            reduce using rule 89
	True           reduce using rule 89
	False          reduce using rule 89
	if             reduce using rule 89
	switch         reduce using rule 89
	cond           reduce using rule 89
	precedence     reduce using rule 89
	prim           reduce using rule 89
	protocol       reduce using rule 89
	infixl         reduce using rule 89
	'->'           reduce using rule 89
	'%('           reduce using rule 89
	'['            reduce using rule 89
	']'            reduce using rule 89
	'{'            reduce using rule 89
	'}'            reduce using rule 89
	'('            reduce using rule 89
	')'            reduce using rule 89
	'<'            reduce using rule 89
	'>'            reduce using rule 89
	'|'            reduce using rule 89
	';'            reduce using rule 89
	'='            reduce using rule 89
	','            reduce using rule 89
	'_'            reduce using rule 89
	'@'            reduce using rule 89
	'#'            reduce using rule 89
	num            reduce using rule 89
	simple_id      reduce using rule 89
	mixed_id       reduce using rule 89
	special_id     reduce using rule 89
	string         reduce using rule 89
	char           reduce using rule 89
	%eof           reduce using rule 89


State 165

	CommaSeparatedExps -> CommaSeparatedExps ',' . Exp    (rule 87)

	fun            shift, and enter state 35
	True           shift, and enter state 37
	False          shift, and enter state 38
	if             shift, and enter state 39
	switch         shift, and enter state 40
	cond           shift, and enter state 41
	prim           shift, and enter state 43
	'%('           shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'('            shift, and enter state 48
	num            shift, and enter state 49
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 52
	char           shift, and enter state 53

	Block          goto state 8
	ListExp        goto state 11
	SingleParamFunHeadergoto state 12
	MultiParamFunHeadergoto state 13
	FunHeader      goto state 14
	LiteralExp     goto state 15
	AtomExp        goto state 16
	MemberAccessExpgoto state 17
	AppExp         goto state 18
	ConsExp        goto state 19
	CustomInfixExp goto state 20
	IfElseExp      goto state 21
	Exp            goto state 174
	SimpleOrQualifiedIdgoto state 29
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 166

	ExpOrAssigns -> ExpOrAssigns ExpOrAssign .          (rule 137)

	import         reduce using rule 137
	fun            reduce using rule 137
	let            reduce using rule 137
	True           reduce using rule 137
	False          reduce using rule 137
	if             reduce using rule 137
	switch         reduce using rule 137
	cond           reduce using rule 137
	prim           reduce using rule 137
	infixl         reduce using rule 137
	'%('           reduce using rule 137
	'['            reduce using rule 137
	'{'            reduce using rule 137
	'}'            reduce using rule 137
	'('            reduce using rule 137
	num            reduce using rule 137
	simple_id      reduce using rule 137
	mixed_id       reduce using rule 137
	string         reduce using rule 137
	char           reduce using rule 137


State 167

	Block -> '{' ExpOrAssigns '}' .                     (rule 9)

	import         reduce using rule 9
	type           reduce using rule 9
	interface      reduce using rule 9
	fun            reduce using rule 9
	imp            reduce using rule 9
	let            reduce using rule 9
	True           reduce using rule 9
	False          reduce using rule 9
	if             reduce using rule 9
	switch         reduce using rule 9
	cond           reduce using rule 9
	precedence     reduce using rule 9
	prim           reduce using rule 9
	protocol       reduce using rule 9
	infixl         reduce using rule 9
	'->'           reduce using rule 9
	'%('           reduce using rule 9
	'['            reduce using rule 9
	']'            reduce using rule 9
	'{'            reduce using rule 9
	'}'            reduce using rule 9
	'('            reduce using rule 9
	')'            reduce using rule 9
	'<'            reduce using rule 9
	'>'            reduce using rule 9
	'|'            reduce using rule 9
	';'            reduce using rule 9
	'='            reduce using rule 9
	','            reduce using rule 9
	'_'            reduce using rule 9
	'@'            reduce using rule 9
	'#'            reduce using rule 9
	num            reduce using rule 9
	simple_id      reduce using rule 9
	mixed_id       reduce using rule 9
	special_id     reduce using rule 9
	string         reduce using rule 9
	char           reduce using rule 9
	%eof           reduce using rule 9


State 168

	SpecialId -> '=' SpecialId .                        (rule 226)

	fun            reduce using rule 226
	True           reduce using rule 226
	False          reduce using rule 226
	prim           reduce using rule 226
	'%('           reduce using rule 226
	'['            reduce using rule 226
	'('            reduce using rule 226
	')'            reduce using rule 226
	num            reduce using rule 226
	simple_id      reduce using rule 226
	mixed_id       reduce using rule 226
	string         reduce using rule 226
	char           reduce using rule 226


State 169

	SpecialId -> '|' SpecialId .                        (rule 228)

	fun            reduce using rule 228
	True           reduce using rule 228
	False          reduce using rule 228
	prim           reduce using rule 228
	'%('           reduce using rule 228
	'['            reduce using rule 228
	'('            reduce using rule 228
	')'            reduce using rule 228
	num            reduce using rule 228
	simple_id      reduce using rule 228
	mixed_id       reduce using rule 228
	string         reduce using rule 228
	char           reduce using rule 228


State 170

	SpecialId -> '>' SpecialId .                        (rule 232)

	fun            reduce using rule 232
	True           reduce using rule 232
	False          reduce using rule 232
	prim           reduce using rule 232
	'%('           reduce using rule 232
	'['            reduce using rule 232
	'('            reduce using rule 232
	')'            reduce using rule 232
	num            reduce using rule 232
	simple_id      reduce using rule 232
	mixed_id       reduce using rule 232
	string         reduce using rule 232
	char           reduce using rule 232


State 171

	SpecialId -> '<' SpecialId .                        (rule 231)

	fun            reduce using rule 231
	True           reduce using rule 231
	False          reduce using rule 231
	prim           reduce using rule 231
	'%('           reduce using rule 231
	'['            reduce using rule 231
	'('            reduce using rule 231
	')'            reduce using rule 231
	num            reduce using rule 231
	simple_id      reduce using rule 231
	mixed_id       reduce using rule 231
	string         reduce using rule 231
	char           reduce using rule 231


State 172

	AtomExp -> '(' SpecialId ')' .                      (rule 110)

	import         reduce using rule 110
	type           reduce using rule 110
	interface      reduce using rule 110
	fun            reduce using rule 110
	imp            reduce using rule 110
	let            reduce using rule 110
	True           reduce using rule 110
	False          reduce using rule 110
	if             reduce using rule 110
	switch         reduce using rule 110
	cond           reduce using rule 110
	precedence     reduce using rule 110
	prim           reduce using rule 110
	protocol       reduce using rule 110
	infixl         reduce using rule 110
	'->'           reduce using rule 110
	'%('           reduce using rule 110
	'['            reduce using rule 110
	']'            reduce using rule 110
	'{'            reduce using rule 110
	'}'            reduce using rule 110
	'('            reduce using rule 110
	')'            reduce using rule 110
	'<'            reduce using rule 110
	'>'            reduce using rule 110
	'|'            reduce using rule 110
	';'            reduce using rule 110
	'='            reduce using rule 110
	','            reduce using rule 110
	'_'            reduce using rule 110
	'@'            reduce using rule 110
	'#'            reduce using rule 110
	num            reduce using rule 110
	simple_id      reduce using rule 110
	mixed_id       reduce using rule 110
	special_id     reduce using rule 110
	string         reduce using rule 110
	char           reduce using rule 110
	%eof           reduce using rule 110


State 173

	AtomExp -> '(' Exp ')' .                            (rule 108)

	import         reduce using rule 108
	type           reduce using rule 108
	interface      reduce using rule 108
	fun            reduce using rule 108
	imp            reduce using rule 108
	let            reduce using rule 108
	True           reduce using rule 108
	False          reduce using rule 108
	if             reduce using rule 108
	switch         reduce using rule 108
	cond           reduce using rule 108
	precedence     reduce using rule 108
	prim           reduce using rule 108
	protocol       reduce using rule 108
	infixl         reduce using rule 108
	'->'           reduce using rule 108
	'%('           reduce using rule 108
	'['            reduce using rule 108
	']'            reduce using rule 108
	'{'            reduce using rule 108
	'}'            reduce using rule 108
	'('            reduce using rule 108
	')'            reduce using rule 108
	'<'            reduce using rule 108
	'>'            reduce using rule 108
	'|'            reduce using rule 108
	';'            reduce using rule 108
	'='            reduce using rule 108
	','            reduce using rule 108
	'_'            reduce using rule 108
	'@'            reduce using rule 108
	'#'            reduce using rule 108
	num            reduce using rule 108
	simple_id      reduce using rule 108
	mixed_id       reduce using rule 108
	special_id     reduce using rule 108
	string         reduce using rule 108
	char           reduce using rule 108
	%eof           reduce using rule 108


State 174

	CommaSeparatedExps -> CommaSeparatedExps ',' Exp .    (rule 87)

	']'            reduce using rule 87
	','            reduce using rule 87


State 175

	TupleRestExps -> ',' Exp .                          (rule 58)

	')'            reduce using rule 58
	','            reduce using rule 58


State 176

	AtomExp -> '%(' Exp TupleRestExps ')' .             (rule 111)

	import         reduce using rule 111
	type           reduce using rule 111
	interface      reduce using rule 111
	fun            reduce using rule 111
	imp            reduce using rule 111
	let            reduce using rule 111
	True           reduce using rule 111
	False          reduce using rule 111
	if             reduce using rule 111
	switch         reduce using rule 111
	cond           reduce using rule 111
	precedence     reduce using rule 111
	prim           reduce using rule 111
	protocol       reduce using rule 111
	infixl         reduce using rule 111
	'->'           reduce using rule 111
	'%('           reduce using rule 111
	'['            reduce using rule 111
	']'            reduce using rule 111
	'{'            reduce using rule 111
	'}'            reduce using rule 111
	'('            reduce using rule 111
	')'            reduce using rule 111
	'<'            reduce using rule 111
	'>'            reduce using rule 111
	'|'            reduce using rule 111
	';'            reduce using rule 111
	'='            reduce using rule 111
	','            reduce using rule 111
	'_'            reduce using rule 111
	'@'            reduce using rule 111
	'#'            reduce using rule 111
	num            reduce using rule 111
	simple_id      reduce using rule 111
	mixed_id       reduce using rule 111
	special_id     reduce using rule 111
	string         reduce using rule 111
	char           reduce using rule 111
	%eof           reduce using rule 111


State 177

	TupleRestExps -> TupleRestExps ',' . Exp            (rule 59)

	fun            shift, and enter state 35
	True           shift, and enter state 37
	False          shift, and enter state 38
	if             shift, and enter state 39
	switch         shift, and enter state 40
	cond           shift, and enter state 41
	prim           shift, and enter state 43
	'%('           shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'('            shift, and enter state 48
	num            shift, and enter state 49
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 52
	char           shift, and enter state 53

	Block          goto state 8
	ListExp        goto state 11
	SingleParamFunHeadergoto state 12
	MultiParamFunHeadergoto state 13
	FunHeader      goto state 14
	LiteralExp     goto state 15
	AtomExp        goto state 16
	MemberAccessExpgoto state 17
	AppExp         goto state 18
	ConsExp        goto state 19
	CustomInfixExp goto state 20
	IfElseExp      goto state 21
	Exp            goto state 288
	SimpleOrQualifiedIdgoto state 29
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 178

	TyAnn -> infixl '(' SpecialId ')' . TyParams ':' Ty Constraints    (rule 154)

	'<'            shift, and enter state 97
	':'            reduce using rule 151

	TyParams       goto state 287

State 179

	AtomExp -> prim '(' simple_id ')' .                 (rule 115)

	import         reduce using rule 115
	type           reduce using rule 115
	interface      reduce using rule 115
	fun            reduce using rule 115
	imp            reduce using rule 115
	let            reduce using rule 115
	True           reduce using rule 115
	False          reduce using rule 115
	if             reduce using rule 115
	switch         reduce using rule 115
	cond           reduce using rule 115
	precedence     reduce using rule 115
	prim           reduce using rule 115
	protocol       reduce using rule 115
	infixl         reduce using rule 115
	'->'           reduce using rule 115
	'%('           reduce using rule 115
	'['            reduce using rule 115
	']'            reduce using rule 115
	'{'            reduce using rule 115
	'}'            reduce using rule 115
	'('            reduce using rule 115
	')'            reduce using rule 115
	'<'            reduce using rule 115
	'>'            reduce using rule 115
	'|'            reduce using rule 115
	';'            reduce using rule 115
	'='            reduce using rule 115
	','            reduce using rule 115
	'_'            reduce using rule 115
	'@'            reduce using rule 115
	'#'            reduce using rule 115
	num            reduce using rule 115
	simple_id      reduce using rule 115
	mixed_id       reduce using rule 115
	special_id     reduce using rule 115
	string         reduce using rule 115
	char           reduce using rule 115
	%eof           reduce using rule 115


State 180

	CondCaseClause -> '_' '->' . Exp                    (rule 166)

	fun            shift, and enter state 35
	True           shift, and enter state 37
	False          shift, and enter state 38
	if             shift, and enter state 39
	switch         shift, and enter state 40
	cond           shift, and enter state 41
	prim           shift, and enter state 43
	'%('           shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'('            shift, and enter state 48
	num            shift, and enter state 49
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 52
	char           shift, and enter state 53

	Block          goto state 8
	ListExp        goto state 11
	SingleParamFunHeadergoto state 12
	MultiParamFunHeadergoto state 13
	FunHeader      goto state 14
	LiteralExp     goto state 15
	AtomExp        goto state 16
	MemberAccessExpgoto state 17
	AppExp         goto state 18
	ConsExp        goto state 19
	CustomInfixExp goto state 20
	IfElseExp      goto state 21
	Exp            goto state 286
	SimpleOrQualifiedIdgoto state 29
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 181

	CondCaseClauses -> CondCaseClauses CondCaseClause .    (rule 164)

	fun            reduce using rule 164
	True           reduce using rule 164
	False          reduce using rule 164
	if             reduce using rule 164
	switch         reduce using rule 164
	cond           reduce using rule 164
	prim           reduce using rule 164
	'%('           reduce using rule 164
	'['            reduce using rule 164
	'{'            reduce using rule 164
	'}'            reduce using rule 164
	'('            reduce using rule 164
	'_'            reduce using rule 164
	num            reduce using rule 164
	simple_id      reduce using rule 164
	mixed_id       reduce using rule 164
	string         reduce using rule 164
	char           reduce using rule 164


State 182

	Exp -> cond '{' CondCaseClauses '}' .               (rule 129)

	import         reduce using rule 129
	type           reduce using rule 129
	interface      reduce using rule 129
	fun            reduce using rule 129
	imp            reduce using rule 129
	let            reduce using rule 129
	True           reduce using rule 129
	False          reduce using rule 129
	if             reduce using rule 129
	switch         reduce using rule 129
	cond           reduce using rule 129
	precedence     reduce using rule 129
	prim           reduce using rule 129
	protocol       reduce using rule 129
	infixl         reduce using rule 129
	'->'           reduce using rule 129
	'%('           reduce using rule 129
	'['            reduce using rule 129
	']'            reduce using rule 129
	'{'            reduce using rule 129
	'}'            reduce using rule 129
	'('            reduce using rule 129
	')'            reduce using rule 129
	'<'            reduce using rule 129
	'>'            reduce using rule 129
	'|'            reduce using rule 129
	';'            reduce using rule 129
	'='            reduce using rule 129
	','            reduce using rule 129
	'_'            reduce using rule 129
	'@'            reduce using rule 129
	'#'            reduce using rule 129
	num            reduce using rule 129
	simple_id      reduce using rule 129
	mixed_id       reduce using rule 129
	special_id     reduce using rule 129
	string         reduce using rule 129
	char           reduce using rule 129
	%eof           reduce using rule 129


State 183

	CondCaseClause -> Exp '->' . Exp                    (rule 165)

	fun            shift, and enter state 35
	True           shift, and enter state 37
	False          shift, and enter state 38
	if             shift, and enter state 39
	switch         shift, and enter state 40
	cond           shift, and enter state 41
	prim           shift, and enter state 43
	'%('           shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'('            shift, and enter state 48
	num            shift, and enter state 49
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 52
	char           shift, and enter state 53

	Block          goto state 8
	ListExp        goto state 11
	SingleParamFunHeadergoto state 12
	MultiParamFunHeadergoto state 13
	FunHeader      goto state 14
	LiteralExp     goto state 15
	AtomExp        goto state 16
	MemberAccessExpgoto state 17
	AppExp         goto state 18
	ConsExp        goto state 19
	CustomInfixExp goto state 20
	IfElseExp      goto state 21
	Exp            goto state 285
	SimpleOrQualifiedIdgoto state 29
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 184

	Exp -> switch '(' Exp ')' . '{' CaseClauses '}'     (rule 128)

	'{'            shift, and enter state 284


State 185

	IfElseExp -> if '(' Exp ')' . Exp Exp               (rule 125)

	fun            shift, and enter state 35
	True           shift, and enter state 37
	False          shift, and enter state 38
	if             shift, and enter state 39
	switch         shift, and enter state 40
	cond           shift, and enter state 41
	prim           shift, and enter state 43
	'%('           shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'('            shift, and enter state 48
	num            shift, and enter state 49
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 52
	char           shift, and enter state 53

	Block          goto state 8
	ListExp        goto state 11
	SingleParamFunHeadergoto state 12
	MultiParamFunHeadergoto state 13
	FunHeader      goto state 14
	LiteralExp     goto state 15
	AtomExp        goto state 16
	MemberAccessExpgoto state 17
	AppExp         goto state 18
	ConsExp        goto state 19
	CustomInfixExp goto state 20
	IfElseExp      goto state 21
	Exp            goto state 283
	SimpleOrQualifiedIdgoto state 29
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 186

	ListPatExp -> AtomPatExp '@' ListPatExp .           (rule 82)

	'->'           reduce using rule 82
	']'            reduce using rule 82
	')'            reduce using rule 82
	'='            reduce using rule 82
	','            reduce using rule 82


State 187

	ExpOrAssign -> let PatExp '=' Exp .                 (rule 131)

	import         reduce using rule 131
	fun            reduce using rule 131
	let            reduce using rule 131
	True           reduce using rule 131
	False          reduce using rule 131
	if             reduce using rule 131
	switch         reduce using rule 131
	cond           reduce using rule 131
	prim           reduce using rule 131
	infixl         reduce using rule 131
	'%('           reduce using rule 131
	'['            reduce using rule 131
	'{'            reduce using rule 131
	'}'            reduce using rule 131
	'('            reduce using rule 131
	num            reduce using rule 131
	simple_id      reduce using rule 131
	mixed_id       reduce using rule 131
	string         reduce using rule 131
	char           reduce using rule 131
	%eof           reduce using rule 131


State 188

	AdtPatExp -> SimpleOrQualifiedId '(' ZeroOrMorePatExps . ')'    (rule 68)
	ZeroOrMorePatExps -> ZeroOrMorePatExps . ',' PatExp    (rule 71)

	')'            shift, and enter state 282
	','            shift, and enter state 192


State 189

	TuplePatExpsRest -> TuplePatExpsRest . ',' PatExp    (rule 66)
	TuplePatExp -> '%(' PatExp TuplePatExpsRest . ')'    (rule 67)

	')'            shift, and enter state 280
	','            shift, and enter state 281


State 190

	TuplePatExpsRest -> ',' . PatExp                    (rule 65)

	True           shift, and enter state 84
	False          shift, and enter state 85
	'%('           shift, and enter state 86
	'['            shift, and enter state 87
	'('            shift, and enter state 88
	'_'            shift, and enter state 89
	num            shift, and enter state 90
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 91
	char           shift, and enter state 92

	LiteralPatExp  goto state 75
	TuplePatExp    goto state 76
	AdtPatExp      goto state 77
	AtomPatExp     goto state 78
	ListPatExp     goto state 79
	PatExp         goto state 279
	SimpleOrQualifiedIdgoto state 81
	QualifiedId    goto state 82
	SimpleOrMixedIdgoto state 83

State 191

	ListPatExp -> '[' ZeroOrMorePatExps ']' .           (rule 83)

	'->'           reduce using rule 83
	']'            reduce using rule 83
	')'            reduce using rule 83
	'='            reduce using rule 83
	','            reduce using rule 83


State 192

	ZeroOrMorePatExps -> ZeroOrMorePatExps ',' . PatExp    (rule 71)

	True           shift, and enter state 84
	False          shift, and enter state 85
	'%('           shift, and enter state 86
	'['            shift, and enter state 87
	'('            shift, and enter state 88
	'_'            shift, and enter state 89
	num            shift, and enter state 90
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 91
	char           shift, and enter state 92

	LiteralPatExp  goto state 75
	TuplePatExp    goto state 76
	AdtPatExp      goto state 77
	AtomPatExp     goto state 78
	ListPatExp     goto state 79
	PatExp         goto state 278
	SimpleOrQualifiedIdgoto state 81
	QualifiedId    goto state 82
	SimpleOrMixedIdgoto state 83

State 193

	AtomPatExp -> '(' PatExp ')' .                      (rule 76)

	'->'           reduce using rule 76
	']'            reduce using rule 76
	')'            reduce using rule 76
	'='            reduce using rule 76
	','            reduce using rule 76
	'@'            reduce using rule 76


State 194

	MultiParamFunHeader -> fun '(' PatExpList ',' . PatExp ')'    (rule 94)
	PatExpList -> PatExpList ',' . PatExp               (rule 187)

	True           shift, and enter state 84
	False          shift, and enter state 85
	'%('           shift, and enter state 86
	'['            shift, and enter state 87
	'('            shift, and enter state 88
	'_'            shift, and enter state 89
	num            shift, and enter state 90
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 91
	char           shift, and enter state 92

	LiteralPatExp  goto state 75
	TuplePatExp    goto state 76
	AdtPatExp      goto state 77
	AtomPatExp     goto state 78
	ListPatExp     goto state 79
	PatExp         goto state 277
	SimpleOrQualifiedIdgoto state 81
	QualifiedId    goto state 82
	SimpleOrMixedIdgoto state 83

State 195

	SingleParamFunHeader -> fun '(' PatExp ')' .        (rule 93)

	'='            reduce using rule 93


State 196

	InterfaceDecExp -> interface SimpleOrMixedId TyParams '{' . OneOrMoreTyAnns '}'    (rule 159)

	infixl         shift, and enter state 44
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51

	TyAnn          goto state 274
	OneOrMoreTyAnnsgoto state 275
	SimpleOrMixedIdgoto state 276

State 197

	AdtAlternative -> '|' SimpleOrMixedId . '(' CommaSeparatedTys ')'    (rule 180)
	AdtAlternative -> '|' SimpleOrMixedId .             (rule 181)

	import         reduce using rule 181
	type           reduce using rule 181
	interface      reduce using rule 181
	imp            reduce using rule 181
	let            reduce using rule 181
	precedence     reduce using rule 181
	protocol       reduce using rule 181
	infixl         reduce using rule 181
	'}'            reduce using rule 181
	'('            shift, and enter state 273
	'|'            reduce using rule 181
	simple_id      reduce using rule 181
	mixed_id       reduce using rule 181
	%eof           reduce using rule 181


State 198

	AdtAlternatives -> AdtAlternatives AdtAlternative .    (rule 179)

	import         reduce using rule 179
	type           reduce using rule 179
	interface      reduce using rule 179
	imp            reduce using rule 179
	let            reduce using rule 179
	precedence     reduce using rule 179
	protocol       reduce using rule 179
	infixl         reduce using rule 179
	'}'            reduce using rule 179
	'|'            reduce using rule 179
	simple_id      reduce using rule 179
	mixed_id       reduce using rule 179
	%eof           reduce using rule 179


State 199

	TypeDec -> type SimpleOrMixedId TyParams '=' . Ty    (rule 175)
	TypeDec -> type SimpleOrMixedId TyParams '=' . AdtAlternatives    (rule 176)

	struct         shift, and enter state 128
	primtype       shift, and enter state 129
	'%('           shift, and enter state 130
	'('            shift, and enter state 131
	'|'            shift, and enter state 141
	simple_id      shift, and enter state 132
	mixed_id       shift, and enter state 51

	AdtAlternativesgoto state 271
	AdtAlternative goto state 139
	TyTuple        goto state 122
	SimpleTy       goto state 123
	TyArrow        goto state 124
	Ty             goto state 272
	SimpleOrQualifiedIdgoto state 126
	SimpleOrQualifiedAlphaNumericIdgoto state 127
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 200

	TyParams -> '<' CommaSeparatedIds '>' .             (rule 150)

	struct         reduce using rule 150
	primtype       reduce using rule 150
	'%('           reduce using rule 150
	'{'            reduce using rule 150
	'('            reduce using rule 150
	'|'            reduce using rule 150
	'='            reduce using rule 150
	':'            reduce using rule 150
	simple_id      reduce using rule 150
	mixed_id       reduce using rule 150


State 201

	CommaSeparatedIds -> CommaSeparatedIds ',' . SimpleOrMixedId    (rule 91)

	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51

	SimpleOrMixedIdgoto state 270

State 202

	ExpOrAssign -> import SimpleOrQualifiedId '=' simple_id .    (rule 134)

	import         reduce using rule 134
	fun            reduce using rule 134
	let            reduce using rule 134
	True           reduce using rule 134
	False          reduce using rule 134
	if             reduce using rule 134
	switch         reduce using rule 134
	cond           reduce using rule 134
	prim           reduce using rule 134
	infixl         reduce using rule 134
	'%('           reduce using rule 134
	'['            reduce using rule 134
	'{'            reduce using rule 134
	'}'            reduce using rule 134
	'('            reduce using rule 134
	num            reduce using rule 134
	simple_id      reduce using rule 134
	mixed_id       reduce using rule 134
	string         reduce using rule 134
	char           reduce using rule 134
	%eof           reduce using rule 134


State 203

	TyAnn -> SimpleOrMixedId '<' CommaSeparatedIds '>' . ':' Ty Constraints    (rule 153)

	':'            shift, and enter state 269


State 204

	SimpleTy -> '(' Ty . ')'                            (rule 204)

	')'            shift, and enter state 268


State 205

	TyArrow -> '(' '->' . Ty ')'                        (rule 207)

	struct         shift, and enter state 128
	primtype       shift, and enter state 129
	'%('           shift, and enter state 130
	'('            shift, and enter state 131
	simple_id      shift, and enter state 132
	mixed_id       shift, and enter state 51

	TyTuple        goto state 122
	SimpleTy       goto state 123
	TyArrow        goto state 124
	Ty             goto state 267
	SimpleOrQualifiedIdgoto state 126
	SimpleOrQualifiedAlphaNumericIdgoto state 127
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 206

	TyTuple -> '%(' Ty . TyTupleRest ')'                (rule 194)

	','            shift, and enter state 266

	TyTupleRest    goto state 265

State 207

	SimpleTy -> primtype '(' . simple_id ')'            (rule 199)

	simple_id      shift, and enter state 264


State 208

	SimpleTy -> struct '{' . TyStructFields '}'         (rule 200)

	'}'            reduce using rule 212
	simple_id      shift, and enter state 50
			(reduce using rule 212)

	mixed_id       shift, and enter state 51
			(reduce using rule 212)


	TyStructField  goto state 261
	TyStructFields goto state 262
	SimpleOrMixedIdgoto state 263

State 209

	SimpleTy -> SimpleOrQualifiedAlphaNumericId TyArgs .    (rule 202)

	import         reduce using rule 202
	type           reduce using rule 202
	interface      reduce using rule 202
	fun            reduce using rule 202
	imp            reduce using rule 202
	let            reduce using rule 202
	True           reduce using rule 202
	False          reduce using rule 202
	if             reduce using rule 202
	switch         reduce using rule 202
	cond           reduce using rule 202
	precedence     reduce using rule 202
	prim           reduce using rule 202
	protocol       reduce using rule 202
	when           reduce using rule 202
	infixl         reduce using rule 202
	'->'           reduce using rule 202
	'%('           reduce using rule 202
	'['            reduce using rule 202
	'{'            reduce using rule 202
	'}'            reduce using rule 202
	'('            reduce using rule 202
	')'            reduce using rule 202
	'>'            reduce using rule 202
	':'            reduce using rule 202
	','            reduce using rule 202
	num            reduce using rule 202
	simple_id      reduce using rule 202
	mixed_id       reduce using rule 202
	string         reduce using rule 202
	char           reduce using rule 202
	%eof           reduce using rule 202


State 210

	TyArgs -> '<' . CommaSeparatedTys '>'               (rule 197)

	struct         shift, and enter state 128
	primtype       shift, and enter state 129
	'%('           shift, and enter state 130
	'('            shift, and enter state 131
	'>'            reduce using rule 191
	','            reduce using rule 191
	simple_id      shift, and enter state 132
	mixed_id       shift, and enter state 51

	CommaSeparatedTysgoto state 259
	TyTuple        goto state 122
	SimpleTy       goto state 123
	TyArrow        goto state 124
	Ty             goto state 260
	SimpleOrQualifiedIdgoto state 126
	SimpleOrQualifiedAlphaNumericIdgoto state 127
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 211

	SimpleOrQualifiedAlphaNumericId -> SimpleOrQualifiedId '.' . simple_id    (rule 220)
	QualifiedId -> SimpleOrQualifiedId '.' . SimpleOrMixedId    (rule 221)

	simple_id      shift, and enter state 258
	mixed_id       shift, and enter state 51

	SimpleOrMixedIdgoto state 118

State 212

	Constraints -> Constraint .                         (rule 52)

	import         reduce using rule 52
	type           reduce using rule 52
	interface      reduce using rule 52
	fun            reduce using rule 52
	imp            reduce using rule 52
	let            reduce using rule 52
	True           reduce using rule 52
	False          reduce using rule 52
	if             reduce using rule 52
	switch         reduce using rule 52
	cond           reduce using rule 52
	precedence     reduce using rule 52
	prim           reduce using rule 52
	protocol       reduce using rule 52
	when           reduce using rule 52
	infixl         reduce using rule 52
	'%('           reduce using rule 52
	'['            reduce using rule 52
	'{'            reduce using rule 52
	'}'            reduce using rule 52
	'('            reduce using rule 52
	num            reduce using rule 52
	simple_id      reduce using rule 52
	mixed_id       reduce using rule 52
	string         reduce using rule 52
	char           reduce using rule 52
	%eof           reduce using rule 52


State 213

	Constraints -> Constraints . Constraint             (rule 53)
	TyAnn -> SimpleOrMixedId ':' Ty Constraints .       (rule 152)

	import         reduce using rule 152
	type           reduce using rule 152
	interface      reduce using rule 152
	fun            reduce using rule 152
	imp            reduce using rule 152
	let            reduce using rule 152
	True           reduce using rule 152
	False          reduce using rule 152
	if             reduce using rule 152
	switch         reduce using rule 152
	cond           reduce using rule 152
	precedence     reduce using rule 152
	prim           reduce using rule 152
	protocol       reduce using rule 152
	when           shift, and enter state 214
	infixl         reduce using rule 152
	'%('           reduce using rule 152
	'['            reduce using rule 152
	'{'            reduce using rule 152
	'}'            reduce using rule 152
	'('            reduce using rule 152
	num            reduce using rule 152
	simple_id      reduce using rule 152
	mixed_id       reduce using rule 152
	string         reduce using rule 152
	char           reduce using rule 152
	%eof           reduce using rule 152

	Constraint     goto state 257

State 214

	Constraint -> when . SimpleOrMixedId ':' SimpleOrMixedId    (rule 51)

	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51

	SimpleOrMixedIdgoto state 256

State 215

	TyArrow -> SimpleTy '->' . TyArrow                  (rule 206)

	struct         shift, and enter state 128
	primtype       shift, and enter state 129
	'%('           shift, and enter state 130
	'('            shift, and enter state 131
	simple_id      shift, and enter state 132
	mixed_id       shift, and enter state 51

	TyTuple        goto state 122
	SimpleTy       goto state 123
	TyArrow        goto state 255
	SimpleOrQualifiedIdgoto state 126
	SimpleOrQualifiedAlphaNumericIdgoto state 127
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 216

	SimpleTy -> SimpleTy '[' . ']'                      (rule 203)

	']'            shift, and enter state 254


State 217

	StructFieldInitializer -> SimpleOrMixedId '=' . Exp ';'    (rule 213)

	fun            shift, and enter state 35
	True           shift, and enter state 37
	False          shift, and enter state 38
	if             shift, and enter state 39
	switch         shift, and enter state 40
	cond           shift, and enter state 41
	prim           shift, and enter state 43
	'%('           shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'('            shift, and enter state 48
	num            shift, and enter state 49
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 52
	char           shift, and enter state 53

	Block          goto state 8
	ListExp        goto state 11
	SingleParamFunHeadergoto state 12
	MultiParamFunHeadergoto state 13
	FunHeader      goto state 14
	LiteralExp     goto state 15
	AtomExp        goto state 16
	MemberAccessExpgoto state 17
	AppExp         goto state 18
	ConsExp        goto state 19
	CustomInfixExp goto state 20
	IfElseExp      goto state 21
	Exp            goto state 253
	SimpleOrQualifiedIdgoto state 29
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 218

	StructFieldInitializers -> StructFieldInitializers StructFieldInitializer .    (rule 215)

	'}'            reduce using rule 215
	simple_id      reduce using rule 215
	mixed_id       reduce using rule 215


State 219

	AtomExp -> SimpleOrQualifiedId '%{' StructFieldInitializers '}' .    (rule 113)

	import         reduce using rule 113
	type           reduce using rule 113
	interface      reduce using rule 113
	fun            reduce using rule 113
	imp            reduce using rule 113
	let            reduce using rule 113
	True           reduce using rule 113
	False          reduce using rule 113
	if             reduce using rule 113
	switch         reduce using rule 113
	cond           reduce using rule 113
	precedence     reduce using rule 113
	prim           reduce using rule 113
	protocol       reduce using rule 113
	infixl         reduce using rule 113
	'->'           reduce using rule 113
	'%('           reduce using rule 113
	'['            reduce using rule 113
	']'            reduce using rule 113
	'{'            reduce using rule 113
	'}'            reduce using rule 113
	'('            reduce using rule 113
	')'            reduce using rule 113
	'<'            reduce using rule 113
	'>'            reduce using rule 113
	'|'            reduce using rule 113
	';'            reduce using rule 113
	'='            reduce using rule 113
	','            reduce using rule 113
	'_'            reduce using rule 113
	'@'            reduce using rule 113
	'#'            reduce using rule 113
	num            reduce using rule 113
	simple_id      reduce using rule 113
	mixed_id       reduce using rule 113
	special_id     reduce using rule 113
	string         reduce using rule 113
	char           reduce using rule 113
	%eof           reduce using rule 113


State 220

	AppExp -> AppExp '(' ArgExps ')' .                  (rule 119)

	import         reduce using rule 119
	type           reduce using rule 119
	interface      reduce using rule 119
	fun            reduce using rule 119
	imp            reduce using rule 119
	let            reduce using rule 119
	True           reduce using rule 119
	False          reduce using rule 119
	if             reduce using rule 119
	switch         reduce using rule 119
	cond           reduce using rule 119
	precedence     reduce using rule 119
	prim           reduce using rule 119
	protocol       reduce using rule 119
	infixl         reduce using rule 119
	'->'           reduce using rule 119
	'%('           reduce using rule 119
	'['            reduce using rule 119
	']'            reduce using rule 119
	'{'            reduce using rule 119
	'}'            reduce using rule 119
	'('            reduce using rule 119
	')'            reduce using rule 119
	'<'            reduce using rule 119
	'>'            reduce using rule 119
	'|'            reduce using rule 119
	';'            reduce using rule 119
	'='            reduce using rule 119
	','            reduce using rule 119
	'_'            reduce using rule 119
	'@'            reduce using rule 119
	'#'            reduce using rule 119
	num            reduce using rule 119
	simple_id      reduce using rule 119
	mixed_id       reduce using rule 119
	special_id     reduce using rule 119
	string         reduce using rule 119
	char           reduce using rule 119
	%eof           reduce using rule 119


State 221

	ArgExps -> ArgExps ',' . Exp                        (rule 168)

	fun            shift, and enter state 35
	True           shift, and enter state 37
	False          shift, and enter state 38
	if             shift, and enter state 39
	switch         shift, and enter state 40
	cond           shift, and enter state 41
	prim           shift, and enter state 43
	'%('           shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'('            shift, and enter state 48
	num            shift, and enter state 49
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 52
	char           shift, and enter state 53

	Block          goto state 8
	ListExp        goto state 11
	SingleParamFunHeadergoto state 12
	MultiParamFunHeadergoto state 13
	FunHeader      goto state 14
	LiteralExp     goto state 15
	AtomExp        goto state 16
	MemberAccessExpgoto state 17
	AppExp         goto state 18
	ConsExp        goto state 19
	CustomInfixExp goto state 20
	IfElseExp      goto state 21
	Exp            goto state 252
	SimpleOrQualifiedIdgoto state 29
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 222

	ZeroOrMoreModuleLevelExps -> ZeroOrMoreModuleLevelExps . ModuleLevelExp    (rule 17)
	ModuleDec -> module SimpleOrQualifiedId '{' ZeroOrMoreModuleLevelExps . '}'    (rule 50)

	import         shift, and enter state 235
	type           shift, and enter state 33
	interface      shift, and enter state 34
	imp            shift, and enter state 236
	let            shift, and enter state 237
	precedence     shift, and enter state 42
	protocol       shift, and enter state 238
	infixl         shift, and enter state 239
	'}'            shift, and enter state 251
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51

	ModuleLevelExp goto state 250
	ImportExp      goto state 224
	SelectiveImportExpgoto state 225
	ProtoDec       goto state 226
	ProtoImp       goto state 227
	ModuleLevelBindingExpgoto state 228
	PrecedenceAssigngoto state 229
	FunDef         goto state 230
	TyAnn          goto state 231
	InterfaceDecExpgoto state 232
	TypeDecImplicitgoto state 27
	TypeDec        goto state 233
	SimpleOrMixedIdgoto state 234

State 223

	ZeroOrMoreModuleLevelExps -> ModuleLevelExp .       (rule 16)

	import         reduce using rule 16
	type           reduce using rule 16
	interface      reduce using rule 16
	imp            reduce using rule 16
	let            reduce using rule 16
	precedence     reduce using rule 16
	protocol       reduce using rule 16
	infixl         reduce using rule 16
	'}'            reduce using rule 16
	simple_id      reduce using rule 16
	mixed_id       reduce using rule 16


State 224

	SelectiveImportExp -> ImportExp . ImportSubset '{' ImportClauses '}'    (rule 46)
	SelectiveImportExp -> ImportExp . '{' ImportClauses '}'    (rule 47)
	SelectiveImportExp -> ImportExp . ImportSubset      (rule 48)
	SelectiveImportExp -> ImportExp .                   (rule 49)

	import         reduce using rule 49
	type           reduce using rule 49
	interface      reduce using rule 49
	imp            reduce using rule 49
	let            reduce using rule 49
	precedence     reduce using rule 49
	protocol       reduce using rule 49
	infixl         reduce using rule 49
	'{'            shift, and enter state 248
	'}'            reduce using rule 49
	'('            shift, and enter state 249
	simple_id      reduce using rule 49
	mixed_id       reduce using rule 49

	ImportSubset   goto state 247

State 225

	ModuleLevelBindingExp -> SelectiveImportExp .       (rule 142)

	import         reduce using rule 142
	type           reduce using rule 142
	interface      reduce using rule 142
	imp            reduce using rule 142
	let            reduce using rule 142
	precedence     reduce using rule 142
	protocol       reduce using rule 142
	infixl         reduce using rule 142
	'}'            reduce using rule 142
	simple_id      reduce using rule 142
	mixed_id       reduce using rule 142


State 226

	ModuleLevelExp -> ProtoDec .                        (rule 23)

	import         reduce using rule 23
	type           reduce using rule 23
	interface      reduce using rule 23
	imp            reduce using rule 23
	let            reduce using rule 23
	precedence     reduce using rule 23
	protocol       reduce using rule 23
	infixl         reduce using rule 23
	'}'            reduce using rule 23
	simple_id      reduce using rule 23
	mixed_id       reduce using rule 23


State 227

	ModuleLevelExp -> ProtoImp .                        (rule 24)

	import         reduce using rule 24
	type           reduce using rule 24
	interface      reduce using rule 24
	imp            reduce using rule 24
	let            reduce using rule 24
	precedence     reduce using rule 24
	protocol       reduce using rule 24
	infixl         reduce using rule 24
	'}'            reduce using rule 24
	simple_id      reduce using rule 24
	mixed_id       reduce using rule 24


State 228

	ModuleLevelExp -> ModuleLevelBindingExp .           (rule 26)

	import         reduce using rule 26
	type           reduce using rule 26
	interface      reduce using rule 26
	imp            reduce using rule 26
	let            reduce using rule 26
	precedence     reduce using rule 26
	protocol       reduce using rule 26
	infixl         reduce using rule 26
	'}'            reduce using rule 26
	simple_id      reduce using rule 26
	mixed_id       reduce using rule 26


State 229

	ModuleLevelExp -> PrecedenceAssign .                (rule 25)

	import         reduce using rule 25
	type           reduce using rule 25
	interface      reduce using rule 25
	imp            reduce using rule 25
	let            reduce using rule 25
	precedence     reduce using rule 25
	protocol       reduce using rule 25
	infixl         reduce using rule 25
	'}'            reduce using rule 25
	simple_id      reduce using rule 25
	mixed_id       reduce using rule 25


State 230

	ModuleLevelBindingExp -> FunDef .                   (rule 140)

	import         reduce using rule 140
	type           reduce using rule 140
	interface      reduce using rule 140
	imp            reduce using rule 140
	let            reduce using rule 140
	precedence     reduce using rule 140
	protocol       reduce using rule 140
	infixl         reduce using rule 140
	'}'            reduce using rule 140
	simple_id      reduce using rule 140
	mixed_id       reduce using rule 140


State 231

	ModuleLevelBindingExp -> TyAnn .                    (rule 141)

	import         reduce using rule 141
	type           reduce using rule 141
	interface      reduce using rule 141
	imp            reduce using rule 141
	let            reduce using rule 141
	precedence     reduce using rule 141
	protocol       reduce using rule 141
	infixl         reduce using rule 141
	'}'            reduce using rule 141
	simple_id      reduce using rule 141
	mixed_id       reduce using rule 141


State 232

	ModuleLevelExp -> InterfaceDecExp .                 (rule 21)

	import         reduce using rule 21
	type           reduce using rule 21
	interface      reduce using rule 21
	imp            reduce using rule 21
	let            reduce using rule 21
	precedence     reduce using rule 21
	protocol       reduce using rule 21
	infixl         reduce using rule 21
	'}'            reduce using rule 21
	simple_id      reduce using rule 21
	mixed_id       reduce using rule 21


State 233

	ModuleLevelExp -> TypeDec .                         (rule 22)

	import         reduce using rule 22
	type           reduce using rule 22
	interface      reduce using rule 22
	imp            reduce using rule 22
	let            reduce using rule 22
	precedence     reduce using rule 22
	protocol       reduce using rule 22
	infixl         reduce using rule 22
	'}'            reduce using rule 22
	simple_id      reduce using rule 22
	mixed_id       reduce using rule 22


State 234

	FunDef -> SimpleOrMixedId . '(' PatExpList ')' FunBody    (rule 147)
	TyAnn -> SimpleOrMixedId . ':' Ty Constraints       (rule 152)
	TyAnn -> SimpleOrMixedId . '<' CommaSeparatedIds '>' ':' Ty Constraints    (rule 153)

	'('            shift, and enter state 246
	'<'            shift, and enter state 99
	':'            shift, and enter state 100


State 235

	ImportExp -> import . SimpleOrQualifiedId           (rule 32)
	ImportExp -> import . SimpleOrQualifiedId '=' simple_id    (rule 33)

	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51

	SimpleOrQualifiedIdgoto state 245
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 236

	ProtoImp -> imp . SimpleTy ':' SimpleOrMixedId Constraints '{' ZeroOrMoreModuleLevelBindingExps '}'    (rule 57)

	struct         shift, and enter state 128
	primtype       shift, and enter state 129
	'%('           shift, and enter state 130
	'('            shift, and enter state 244
	simple_id      shift, and enter state 132
	mixed_id       shift, and enter state 51

	TyTuple        goto state 122
	SimpleTy       goto state 243
	SimpleOrQualifiedIdgoto state 126
	SimpleOrQualifiedAlphaNumericIdgoto state 127
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 237

	ModuleLevelBindingExp -> let . PatExp '=' LiteralExp    (rule 138)
	ModuleLevelBindingExp -> let . PatExp '=' LiteralListExp    (rule 139)

	True           shift, and enter state 84
	False          shift, and enter state 85
	'%('           shift, and enter state 86
	'['            shift, and enter state 87
	'('            shift, and enter state 88
	'_'            shift, and enter state 89
	num            shift, and enter state 90
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 91
	char           shift, and enter state 92

	LiteralPatExp  goto state 75
	TuplePatExp    goto state 76
	AdtPatExp      goto state 77
	AtomPatExp     goto state 78
	ListPatExp     goto state 79
	PatExp         goto state 242
	SimpleOrQualifiedIdgoto state 81
	QualifiedId    goto state 82
	SimpleOrMixedIdgoto state 83

State 238

	ProtoDec -> protocol . SimpleOrMixedId on SimpleOrMixedId Constraints ProtoDecBody    (rule 56)

	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51

	SimpleOrMixedIdgoto state 241

State 239

	FunDef -> infixl . '(' SpecialId ')' '(' PatExpList ')' FunBody    (rule 148)
	TyAnn -> infixl . '(' SpecialId ')' TyParams ':' Ty Constraints    (rule 154)

	'('            shift, and enter state 240


State 240

	FunDef -> infixl '(' . SpecialId ')' '(' PatExpList ')' FunBody    (rule 148)
	TyAnn -> infixl '(' . SpecialId ')' TyParams ':' Ty Constraints    (rule 154)

	'<'            shift, and enter state 59
	'>'            shift, and enter state 60
	'|'            shift, and enter state 61
	'='            shift, and enter state 62
	special_id     shift, and enter state 63

	SpecialId      goto state 327

State 241

	ProtoDec -> protocol SimpleOrMixedId . on SimpleOrMixedId Constraints ProtoDecBody    (rule 56)

	on             shift, and enter state 326


State 242

	ModuleLevelBindingExp -> let PatExp . '=' LiteralExp    (rule 138)
	ModuleLevelBindingExp -> let PatExp . '=' LiteralListExp    (rule 139)

	'='            shift, and enter state 325


State 243

	ProtoImp -> imp SimpleTy . ':' SimpleOrMixedId Constraints '{' ZeroOrMoreModuleLevelBindingExps '}'    (rule 57)
	SimpleTy -> SimpleTy . '[' ']'                      (rule 203)

	'['            shift, and enter state 216
	':'            shift, and enter state 324


State 244

	SimpleTy -> '(' . Ty ')'                            (rule 204)

	struct         shift, and enter state 128
	primtype       shift, and enter state 129
	'%('           shift, and enter state 130
	'('            shift, and enter state 131
	simple_id      shift, and enter state 132
	mixed_id       shift, and enter state 51

	TyTuple        goto state 122
	SimpleTy       goto state 123
	TyArrow        goto state 124
	Ty             goto state 204
	SimpleOrQualifiedIdgoto state 126
	SimpleOrQualifiedAlphaNumericIdgoto state 127
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 245

	ImportExp -> import SimpleOrQualifiedId .           (rule 32)
	ImportExp -> import SimpleOrQualifiedId . '=' simple_id    (rule 33)
	QualifiedId -> SimpleOrQualifiedId . '.' SimpleOrMixedId    (rule 221)

	import         reduce using rule 32
	type           reduce using rule 32
	interface      reduce using rule 32
	imp            reduce using rule 32
	let            reduce using rule 32
	precedence     reduce using rule 32
	protocol       reduce using rule 32
	infixl         reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	'('            reduce using rule 32
	'.'            shift, and enter state 102
	'='            shift, and enter state 323
	simple_id      reduce using rule 32
	mixed_id       reduce using rule 32


State 246

	FunDef -> SimpleOrMixedId '(' . PatExpList ')' FunBody    (rule 147)

	True           shift, and enter state 84
	False          shift, and enter state 85
	'%('           shift, and enter state 86
	'['            shift, and enter state 87
	'('            shift, and enter state 88
	')'            reduce using rule 188
	','            reduce using rule 188
	'_'            shift, and enter state 89
	num            shift, and enter state 90
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 91
	char           shift, and enter state 92

	LiteralPatExp  goto state 75
	TuplePatExp    goto state 76
	AdtPatExp      goto state 77
	AtomPatExp     goto state 78
	ListPatExp     goto state 79
	PatExp         goto state 321
	PatExpList     goto state 322
	SimpleOrQualifiedIdgoto state 81
	QualifiedId    goto state 82
	SimpleOrMixedIdgoto state 83

State 247

	SelectiveImportExp -> ImportExp ImportSubset . '{' ImportClauses '}'    (rule 46)
	SelectiveImportExp -> ImportExp ImportSubset .      (rule 48)

	import         reduce using rule 48
	type           reduce using rule 48
	interface      reduce using rule 48
	imp            reduce using rule 48
	let            reduce using rule 48
	precedence     reduce using rule 48
	protocol       reduce using rule 48
	infixl         reduce using rule 48
	'{'            shift, and enter state 320
	'}'            reduce using rule 48
	simple_id      reduce using rule 48
	mixed_id       reduce using rule 48


State 248

	SelectiveImportExp -> ImportExp '{' . ImportClauses '}'    (rule 47)

	except         shift, and enter state 318
	renaming       shift, and enter state 319

	ImportExceptClausegoto state 314
	ImportRenamingClausegoto state 315
	ImportClause   goto state 316
	ImportClauses  goto state 317

State 249

	ImportSubset -> '(' . CommaSeparatedSimpleOrMixedIds ')'    (rule 45)

	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51

	CommaSeparatedSimpleOrMixedIdsgoto state 312
	SimpleOrMixedIdgoto state 313

State 250

	ZeroOrMoreModuleLevelExps -> ZeroOrMoreModuleLevelExps ModuleLevelExp .    (rule 17)

	import         reduce using rule 17
	type           reduce using rule 17
	interface      reduce using rule 17
	imp            reduce using rule 17
	let            reduce using rule 17
	precedence     reduce using rule 17
	protocol       reduce using rule 17
	infixl         reduce using rule 17
	'}'            reduce using rule 17
	simple_id      reduce using rule 17
	mixed_id       reduce using rule 17


State 251

	ModuleDec -> module SimpleOrQualifiedId '{' ZeroOrMoreModuleLevelExps '}' .    (rule 50)

	module         reduce using rule 50
	%eof           reduce using rule 50


State 252

	ArgExps -> ArgExps ',' Exp .                        (rule 168)

	')'            reduce using rule 168
	','            reduce using rule 168


State 253

	StructFieldInitializer -> SimpleOrMixedId '=' Exp . ';'    (rule 213)

	';'            shift, and enter state 311


State 254

	SimpleTy -> SimpleTy '[' ']' .                      (rule 203)

	import         reduce using rule 203
	type           reduce using rule 203
	interface      reduce using rule 203
	fun            reduce using rule 203
	imp            reduce using rule 203
	let            reduce using rule 203
	True           reduce using rule 203
	False          reduce using rule 203
	if             reduce using rule 203
	switch         reduce using rule 203
	cond           reduce using rule 203
	precedence     reduce using rule 203
	prim           reduce using rule 203
	protocol       reduce using rule 203
	when           reduce using rule 203
	infixl         reduce using rule 203
	'->'           reduce using rule 203
	'%('           reduce using rule 203
	'['            reduce using rule 203
	'{'            reduce using rule 203
	'}'            reduce using rule 203
	'('            reduce using rule 203
	')'            reduce using rule 203
	'>'            reduce using rule 203
	':'            reduce using rule 203
	','            reduce using rule 203
	num            reduce using rule 203
	simple_id      reduce using rule 203
	mixed_id       reduce using rule 203
	string         reduce using rule 203
	char           reduce using rule 203
	%eof           reduce using rule 203


State 255

	TyArrow -> SimpleTy '->' TyArrow .                  (rule 206)

	import         reduce using rule 206
	type           reduce using rule 206
	interface      reduce using rule 206
	fun            reduce using rule 206
	imp            reduce using rule 206
	let            reduce using rule 206
	True           reduce using rule 206
	False          reduce using rule 206
	if             reduce using rule 206
	switch         reduce using rule 206
	cond           reduce using rule 206
	precedence     reduce using rule 206
	prim           reduce using rule 206
	protocol       reduce using rule 206
	when           reduce using rule 206
	infixl         reduce using rule 206
	'%('           reduce using rule 206
	'['            reduce using rule 206
	'{'            reduce using rule 206
	'}'            reduce using rule 206
	'('            reduce using rule 206
	')'            reduce using rule 206
	'>'            reduce using rule 206
	','            reduce using rule 206
	num            reduce using rule 206
	simple_id      reduce using rule 206
	mixed_id       reduce using rule 206
	string         reduce using rule 206
	char           reduce using rule 206
	%eof           reduce using rule 206


State 256

	Constraint -> when SimpleOrMixedId . ':' SimpleOrMixedId    (rule 51)

	':'            shift, and enter state 310


State 257

	Constraints -> Constraints Constraint .             (rule 53)

	import         reduce using rule 53
	type           reduce using rule 53
	interface      reduce using rule 53
	fun            reduce using rule 53
	imp            reduce using rule 53
	let            reduce using rule 53
	True           reduce using rule 53
	False          reduce using rule 53
	if             reduce using rule 53
	switch         reduce using rule 53
	cond           reduce using rule 53
	precedence     reduce using rule 53
	prim           reduce using rule 53
	protocol       reduce using rule 53
	when           reduce using rule 53
	infixl         reduce using rule 53
	'%('           reduce using rule 53
	'['            reduce using rule 53
	'{'            reduce using rule 53
	'}'            reduce using rule 53
	'('            reduce using rule 53
	num            reduce using rule 53
	simple_id      reduce using rule 53
	mixed_id       reduce using rule 53
	string         reduce using rule 53
	char           reduce using rule 53
	%eof           reduce using rule 53


State 258

	SimpleOrQualifiedAlphaNumericId -> SimpleOrQualifiedId '.' simple_id .    (rule 220)
	SimpleOrMixedId -> simple_id .                      (rule 222)

	import         reduce using rule 220
	type           reduce using rule 220
	interface      reduce using rule 220
	fun            reduce using rule 220
	imp            reduce using rule 220
	let            reduce using rule 220
	True           reduce using rule 220
	False          reduce using rule 220
	if             reduce using rule 220
	switch         reduce using rule 220
	cond           reduce using rule 220
	precedence     reduce using rule 220
	prim           reduce using rule 220
	protocol       reduce using rule 220
	when           reduce using rule 220
	infixl         reduce using rule 220
	'->'           reduce using rule 220
	'%('           reduce using rule 220
	'['            reduce using rule 220
	'{'            reduce using rule 220
	'}'            reduce using rule 220
	'('            reduce using rule 220
	')'            reduce using rule 220
	'<'            reduce using rule 220
	'>'            reduce using rule 220
	'.'            reduce using rule 222
	':'            reduce using rule 220
	','            reduce using rule 220
	num            reduce using rule 220
	simple_id      reduce using rule 220
	mixed_id       reduce using rule 220
	string         reduce using rule 220
	char           reduce using rule 220
	%eof           reduce using rule 220


State 259

	CommaSeparatedTys -> CommaSeparatedTys . ',' Ty     (rule 190)
	TyArgs -> '<' CommaSeparatedTys . '>'               (rule 197)

	'>'            shift, and enter state 308
	','            shift, and enter state 309


State 260

	CommaSeparatedTys -> Ty .                           (rule 189)

	')'            reduce using rule 189
	'>'            reduce using rule 189
	','            reduce using rule 189


State 261

	TyStructFields -> TyStructField .                   (rule 210)

	'}'            reduce using rule 210
	simple_id      reduce using rule 210
	mixed_id       reduce using rule 210


State 262

	SimpleTy -> struct '{' TyStructFields . '}'         (rule 200)
	TyStructFields -> TyStructFields . TyStructField    (rule 211)

	'}'            shift, and enter state 307
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51

	TyStructField  goto state 306
	SimpleOrMixedIdgoto state 263

State 263

	TyStructField -> SimpleOrMixedId . ':' Ty           (rule 209)

	':'            shift, and enter state 305


State 264

	SimpleTy -> primtype '(' simple_id . ')'            (rule 199)

	')'            shift, and enter state 304


State 265

	TyTupleRest -> TyTupleRest . ',' Ty                 (rule 193)
	TyTuple -> '%(' Ty TyTupleRest . ')'                (rule 194)

	')'            shift, and enter state 302
	','            shift, and enter state 303


State 266

	TyTupleRest -> ',' . Ty                             (rule 192)

	struct         shift, and enter state 128
	primtype       shift, and enter state 129
	'%('           shift, and enter state 130
	'('            shift, and enter state 131
	simple_id      shift, and enter state 132
	mixed_id       shift, and enter state 51

	TyTuple        goto state 122
	SimpleTy       goto state 123
	TyArrow        goto state 124
	Ty             goto state 301
	SimpleOrQualifiedIdgoto state 126
	SimpleOrQualifiedAlphaNumericIdgoto state 127
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 267

	TyArrow -> '(' '->' Ty . ')'                        (rule 207)

	')'            shift, and enter state 300


State 268

	SimpleTy -> '(' Ty ')' .                            (rule 204)

	import         reduce using rule 204
	type           reduce using rule 204
	interface      reduce using rule 204
	fun            reduce using rule 204
	imp            reduce using rule 204
	let            reduce using rule 204
	True           reduce using rule 204
	False          reduce using rule 204
	if             reduce using rule 204
	switch         reduce using rule 204
	cond           reduce using rule 204
	precedence     reduce using rule 204
	prim           reduce using rule 204
	protocol       reduce using rule 204
	when           reduce using rule 204
	infixl         reduce using rule 204
	'->'           reduce using rule 204
	'%('           reduce using rule 204
	'['            reduce using rule 204
	'{'            reduce using rule 204
	'}'            reduce using rule 204
	'('            reduce using rule 204
	')'            reduce using rule 204
	'>'            reduce using rule 204
	':'            reduce using rule 204
	','            reduce using rule 204
	num            reduce using rule 204
	simple_id      reduce using rule 204
	mixed_id       reduce using rule 204
	string         reduce using rule 204
	char           reduce using rule 204
	%eof           reduce using rule 204


State 269

	TyAnn -> SimpleOrMixedId '<' CommaSeparatedIds '>' ':' . Ty Constraints    (rule 153)

	struct         shift, and enter state 128
	primtype       shift, and enter state 129
	'%('           shift, and enter state 130
	'('            shift, and enter state 131
	simple_id      shift, and enter state 132
	mixed_id       shift, and enter state 51

	TyTuple        goto state 122
	SimpleTy       goto state 123
	TyArrow        goto state 124
	Ty             goto state 299
	SimpleOrQualifiedIdgoto state 126
	SimpleOrQualifiedAlphaNumericIdgoto state 127
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 270

	CommaSeparatedIds -> CommaSeparatedIds ',' SimpleOrMixedId .    (rule 91)

	'>'            reduce using rule 91
	','            reduce using rule 91


State 271

	TypeDec -> type SimpleOrMixedId TyParams '=' AdtAlternatives .    (rule 176)
	AdtAlternatives -> AdtAlternatives . AdtAlternative    (rule 179)

	import         reduce using rule 176
	type           reduce using rule 176
	interface      reduce using rule 176
	imp            reduce using rule 176
	let            reduce using rule 176
	precedence     reduce using rule 176
	protocol       reduce using rule 176
	infixl         reduce using rule 176
	'}'            reduce using rule 176
	'|'            shift, and enter state 141
	simple_id      reduce using rule 176
	mixed_id       reduce using rule 176
	%eof           reduce using rule 176

	AdtAlternative goto state 198

State 272

	TypeDec -> type SimpleOrMixedId TyParams '=' Ty .    (rule 175)

	import         reduce using rule 175
	type           reduce using rule 175
	interface      reduce using rule 175
	imp            reduce using rule 175
	let            reduce using rule 175
	precedence     reduce using rule 175
	protocol       reduce using rule 175
	infixl         reduce using rule 175
	'}'            reduce using rule 175
	simple_id      reduce using rule 175
	mixed_id       reduce using rule 175
	%eof           reduce using rule 175


State 273

	AdtAlternative -> '|' SimpleOrMixedId '(' . CommaSeparatedTys ')'    (rule 180)

	struct         shift, and enter state 128
	primtype       shift, and enter state 129
	'%('           shift, and enter state 130
	'('            shift, and enter state 131
	')'            reduce using rule 191
	','            reduce using rule 191
	simple_id      shift, and enter state 132
	mixed_id       shift, and enter state 51

	CommaSeparatedTysgoto state 298
	TyTuple        goto state 122
	SimpleTy       goto state 123
	TyArrow        goto state 124
	Ty             goto state 260
	SimpleOrQualifiedIdgoto state 126
	SimpleOrQualifiedAlphaNumericIdgoto state 127
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 274

	OneOrMoreTyAnns -> TyAnn .                          (rule 155)

	infixl         reduce using rule 155
	'}'            reduce using rule 155
	simple_id      reduce using rule 155
	mixed_id       reduce using rule 155


State 275

	OneOrMoreTyAnns -> OneOrMoreTyAnns . TyAnn          (rule 156)
	InterfaceDecExp -> interface SimpleOrMixedId TyParams '{' OneOrMoreTyAnns . '}'    (rule 159)

	infixl         shift, and enter state 44
	'}'            shift, and enter state 297
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51

	TyAnn          goto state 296
	SimpleOrMixedIdgoto state 276

State 276

	TyAnn -> SimpleOrMixedId . ':' Ty Constraints       (rule 152)
	TyAnn -> SimpleOrMixedId . '<' CommaSeparatedIds '>' ':' Ty Constraints    (rule 153)

	'<'            shift, and enter state 99
	':'            shift, and enter state 100


State 277

	MultiParamFunHeader -> fun '(' PatExpList ',' PatExp . ')'    (rule 94)
	PatExpList -> PatExpList ',' PatExp .               (rule 187)

	')'            shift, and enter state 295
	','            reduce using rule 187


State 278

	ZeroOrMorePatExps -> ZeroOrMorePatExps ',' PatExp .    (rule 71)

	']'            reduce using rule 71
	')'            reduce using rule 71
	','            reduce using rule 71


State 279

	TuplePatExpsRest -> ',' PatExp .                    (rule 65)

	')'            reduce using rule 65
	','            reduce using rule 65


State 280

	TuplePatExp -> '%(' PatExp TuplePatExpsRest ')' .    (rule 67)

	'->'           reduce using rule 67
	']'            reduce using rule 67
	')'            reduce using rule 67
	'='            reduce using rule 67
	','            reduce using rule 67
	'@'            reduce using rule 67


State 281

	TuplePatExpsRest -> TuplePatExpsRest ',' . PatExp    (rule 66)

	True           shift, and enter state 84
	False          shift, and enter state 85
	'%('           shift, and enter state 86
	'['            shift, and enter state 87
	'('            shift, and enter state 88
	'_'            shift, and enter state 89
	num            shift, and enter state 90
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 91
	char           shift, and enter state 92

	LiteralPatExp  goto state 75
	TuplePatExp    goto state 76
	AdtPatExp      goto state 77
	AtomPatExp     goto state 78
	ListPatExp     goto state 79
	PatExp         goto state 294
	SimpleOrQualifiedIdgoto state 81
	QualifiedId    goto state 82
	SimpleOrMixedIdgoto state 83

State 282

	AdtPatExp -> SimpleOrQualifiedId '(' ZeroOrMorePatExps ')' .    (rule 68)

	'->'           reduce using rule 68
	']'            reduce using rule 68
	')'            reduce using rule 68
	'='            reduce using rule 68
	','            reduce using rule 68
	'@'            reduce using rule 68


State 283

	IfElseExp -> if '(' Exp ')' Exp . Exp               (rule 125)

	fun            shift, and enter state 35
	True           shift, and enter state 37
	False          shift, and enter state 38
	if             shift, and enter state 39
	switch         shift, and enter state 40
	cond           shift, and enter state 41
	prim           shift, and enter state 43
	'%('           shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'('            shift, and enter state 48
	num            shift, and enter state 49
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 52
	char           shift, and enter state 53

	Block          goto state 8
	ListExp        goto state 11
	SingleParamFunHeadergoto state 12
	MultiParamFunHeadergoto state 13
	FunHeader      goto state 14
	LiteralExp     goto state 15
	AtomExp        goto state 16
	MemberAccessExpgoto state 17
	AppExp         goto state 18
	ConsExp        goto state 19
	CustomInfixExp goto state 20
	IfElseExp      goto state 21
	Exp            goto state 293
	SimpleOrQualifiedIdgoto state 29
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 284

	Exp -> switch '(' Exp ')' '{' . CaseClauses '}'     (rule 128)

	True           shift, and enter state 84
	False          shift, and enter state 85
	'%('           shift, and enter state 86
	'['            shift, and enter state 87
	'('            shift, and enter state 88
	'_'            shift, and enter state 89
	num            shift, and enter state 90
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 91
	char           shift, and enter state 92

	LiteralPatExp  goto state 75
	TuplePatExp    goto state 76
	AdtPatExp      goto state 77
	AtomPatExp     goto state 78
	ListPatExp     goto state 79
	PatExp         goto state 290
	CaseClauses    goto state 291
	CaseClause     goto state 292
	SimpleOrQualifiedIdgoto state 81
	QualifiedId    goto state 82
	SimpleOrMixedIdgoto state 83

State 285

	CondCaseClause -> Exp '->' Exp .                    (rule 165)

	fun            reduce using rule 165
	True           reduce using rule 165
	False          reduce using rule 165
	if             reduce using rule 165
	switch         reduce using rule 165
	cond           reduce using rule 165
	prim           reduce using rule 165
	'%('           reduce using rule 165
	'['            reduce using rule 165
	'{'            reduce using rule 165
	'}'            reduce using rule 165
	'('            reduce using rule 165
	'_'            reduce using rule 165
	num            reduce using rule 165
	simple_id      reduce using rule 165
	mixed_id       reduce using rule 165
	string         reduce using rule 165
	char           reduce using rule 165


State 286

	CondCaseClause -> '_' '->' Exp .                    (rule 166)

	fun            reduce using rule 166
	True           reduce using rule 166
	False          reduce using rule 166
	if             reduce using rule 166
	switch         reduce using rule 166
	cond           reduce using rule 166
	prim           reduce using rule 166
	'%('           reduce using rule 166
	'['            reduce using rule 166
	'{'            reduce using rule 166
	'}'            reduce using rule 166
	'('            reduce using rule 166
	'_'            reduce using rule 166
	num            reduce using rule 166
	simple_id      reduce using rule 166
	mixed_id       reduce using rule 166
	string         reduce using rule 166
	char           reduce using rule 166


State 287

	TyAnn -> infixl '(' SpecialId ')' TyParams . ':' Ty Constraints    (rule 154)

	':'            shift, and enter state 289


State 288

	TupleRestExps -> TupleRestExps ',' Exp .            (rule 59)

	')'            reduce using rule 59
	','            reduce using rule 59


State 289

	TyAnn -> infixl '(' SpecialId ')' TyParams ':' . Ty Constraints    (rule 154)

	struct         shift, and enter state 128
	primtype       shift, and enter state 129
	'%('           shift, and enter state 130
	'('            shift, and enter state 131
	simple_id      shift, and enter state 132
	mixed_id       shift, and enter state 51

	TyTuple        goto state 122
	SimpleTy       goto state 123
	TyArrow        goto state 124
	Ty             goto state 354
	SimpleOrQualifiedIdgoto state 126
	SimpleOrQualifiedAlphaNumericIdgoto state 127
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 290

	CaseClause -> PatExp . '->' Exp                     (rule 162)

	'->'           shift, and enter state 353


State 291

	Exp -> switch '(' Exp ')' '{' CaseClauses . '}'     (rule 128)
	CaseClauses -> CaseClauses . CaseClause             (rule 161)

	True           shift, and enter state 84
	False          shift, and enter state 85
	'%('           shift, and enter state 86
	'['            shift, and enter state 87
	'}'            shift, and enter state 352
	'('            shift, and enter state 88
	'_'            shift, and enter state 89
	num            shift, and enter state 90
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 91
	char           shift, and enter state 92

	LiteralPatExp  goto state 75
	TuplePatExp    goto state 76
	AdtPatExp      goto state 77
	AtomPatExp     goto state 78
	ListPatExp     goto state 79
	PatExp         goto state 290
	CaseClause     goto state 351
	SimpleOrQualifiedIdgoto state 81
	QualifiedId    goto state 82
	SimpleOrMixedIdgoto state 83

State 292

	CaseClauses -> CaseClause .                         (rule 160)

	True           reduce using rule 160
	False          reduce using rule 160
	'%('           reduce using rule 160
	'['            reduce using rule 160
	'}'            reduce using rule 160
	'('            reduce using rule 160
	'_'            reduce using rule 160
	num            reduce using rule 160
	simple_id      reduce using rule 160
	mixed_id       reduce using rule 160
	string         reduce using rule 160
	char           reduce using rule 160


State 293

	IfElseExp -> if '(' Exp ')' Exp Exp .               (rule 125)

	import         reduce using rule 125
	type           reduce using rule 125
	interface      reduce using rule 125
	fun            reduce using rule 125
	imp            reduce using rule 125
	let            reduce using rule 125
	True           reduce using rule 125
	False          reduce using rule 125
	if             reduce using rule 125
	switch         reduce using rule 125
	cond           reduce using rule 125
	precedence     reduce using rule 125
	prim           reduce using rule 125
	protocol       reduce using rule 125
	infixl         reduce using rule 125
	'->'           reduce using rule 125
	'%('           reduce using rule 125
	'['            reduce using rule 125
	']'            reduce using rule 125
	'{'            reduce using rule 125
	'}'            reduce using rule 125
	'('            reduce using rule 125
	')'            reduce using rule 125
	'<'            reduce using rule 125
	'>'            reduce using rule 125
	'|'            reduce using rule 125
	';'            reduce using rule 125
	'='            reduce using rule 125
	','            reduce using rule 125
	'_'            reduce using rule 125
	'@'            reduce using rule 125
	'#'            reduce using rule 125
	num            reduce using rule 125
	simple_id      reduce using rule 125
	mixed_id       reduce using rule 125
	special_id     reduce using rule 125
	string         reduce using rule 125
	char           reduce using rule 125
	%eof           reduce using rule 125


State 294

	TuplePatExpsRest -> TuplePatExpsRest ',' PatExp .    (rule 66)

	')'            reduce using rule 66
	','            reduce using rule 66


State 295

	MultiParamFunHeader -> fun '(' PatExpList ',' PatExp ')' .    (rule 94)

	'='            reduce using rule 94


State 296

	OneOrMoreTyAnns -> OneOrMoreTyAnns TyAnn .          (rule 156)

	infixl         reduce using rule 156
	'}'            reduce using rule 156
	simple_id      reduce using rule 156
	mixed_id       reduce using rule 156


State 297

	InterfaceDecExp -> interface SimpleOrMixedId TyParams '{' OneOrMoreTyAnns '}' .    (rule 159)

	import         reduce using rule 159
	type           reduce using rule 159
	interface      reduce using rule 159
	imp            reduce using rule 159
	let            reduce using rule 159
	precedence     reduce using rule 159
	protocol       reduce using rule 159
	infixl         reduce using rule 159
	'}'            reduce using rule 159
	simple_id      reduce using rule 159
	mixed_id       reduce using rule 159
	%eof           reduce using rule 159


State 298

	AdtAlternative -> '|' SimpleOrMixedId '(' CommaSeparatedTys . ')'    (rule 180)
	CommaSeparatedTys -> CommaSeparatedTys . ',' Ty     (rule 190)

	')'            shift, and enter state 350
	','            shift, and enter state 309


State 299

	TyAnn -> SimpleOrMixedId '<' CommaSeparatedIds '>' ':' Ty . Constraints    (rule 153)

	import         reduce using rule 54
	type           reduce using rule 54
	interface      reduce using rule 54
	fun            reduce using rule 54
	imp            reduce using rule 54
	let            reduce using rule 54
	True           reduce using rule 54
	False          reduce using rule 54
	if             reduce using rule 54
	switch         reduce using rule 54
	cond           reduce using rule 54
	precedence     reduce using rule 54
	prim           reduce using rule 54
	protocol       reduce using rule 54
	when           shift, and enter state 214
			(reduce using rule 54)

	infixl         reduce using rule 54
	'%('           reduce using rule 54
	'['            reduce using rule 54
	'{'            reduce using rule 54
	'}'            reduce using rule 54
	'('            reduce using rule 54
	num            reduce using rule 54
	simple_id      reduce using rule 54
	mixed_id       reduce using rule 54
	string         reduce using rule 54
	char           reduce using rule 54
	%eof           reduce using rule 54

	Constraint     goto state 212
	Constraints    goto state 349

State 300

	TyArrow -> '(' '->' Ty ')' .                        (rule 207)

	import         reduce using rule 207
	type           reduce using rule 207
	interface      reduce using rule 207
	fun            reduce using rule 207
	imp            reduce using rule 207
	let            reduce using rule 207
	True           reduce using rule 207
	False          reduce using rule 207
	if             reduce using rule 207
	switch         reduce using rule 207
	cond           reduce using rule 207
	precedence     reduce using rule 207
	prim           reduce using rule 207
	protocol       reduce using rule 207
	when           reduce using rule 207
	infixl         reduce using rule 207
	'%('           reduce using rule 207
	'['            reduce using rule 207
	'{'            reduce using rule 207
	'}'            reduce using rule 207
	'('            reduce using rule 207
	')'            reduce using rule 207
	'>'            reduce using rule 207
	','            reduce using rule 207
	num            reduce using rule 207
	simple_id      reduce using rule 207
	mixed_id       reduce using rule 207
	string         reduce using rule 207
	char           reduce using rule 207
	%eof           reduce using rule 207


State 301

	TyTupleRest -> ',' Ty .                             (rule 192)

	')'            reduce using rule 192
	','            reduce using rule 192


State 302

	TyTuple -> '%(' Ty TyTupleRest ')' .                (rule 194)

	import         reduce using rule 194
	type           reduce using rule 194
	interface      reduce using rule 194
	fun            reduce using rule 194
	imp            reduce using rule 194
	let            reduce using rule 194
	True           reduce using rule 194
	False          reduce using rule 194
	if             reduce using rule 194
	switch         reduce using rule 194
	cond           reduce using rule 194
	precedence     reduce using rule 194
	prim           reduce using rule 194
	protocol       reduce using rule 194
	when           reduce using rule 194
	infixl         reduce using rule 194
	'->'           reduce using rule 194
	'%('           reduce using rule 194
	'['            reduce using rule 194
	'{'            reduce using rule 194
	'}'            reduce using rule 194
	'('            reduce using rule 194
	')'            reduce using rule 194
	'>'            reduce using rule 194
	':'            reduce using rule 194
	','            reduce using rule 194
	num            reduce using rule 194
	simple_id      reduce using rule 194
	mixed_id       reduce using rule 194
	string         reduce using rule 194
	char           reduce using rule 194
	%eof           reduce using rule 194


State 303

	TyTupleRest -> TyTupleRest ',' . Ty                 (rule 193)

	struct         shift, and enter state 128
	primtype       shift, and enter state 129
	'%('           shift, and enter state 130
	'('            shift, and enter state 131
	simple_id      shift, and enter state 132
	mixed_id       shift, and enter state 51

	TyTuple        goto state 122
	SimpleTy       goto state 123
	TyArrow        goto state 124
	Ty             goto state 348
	SimpleOrQualifiedIdgoto state 126
	SimpleOrQualifiedAlphaNumericIdgoto state 127
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 304

	SimpleTy -> primtype '(' simple_id ')' .            (rule 199)

	import         reduce using rule 199
	type           reduce using rule 199
	interface      reduce using rule 199
	fun            reduce using rule 199
	imp            reduce using rule 199
	let            reduce using rule 199
	True           reduce using rule 199
	False          reduce using rule 199
	if             reduce using rule 199
	switch         reduce using rule 199
	cond           reduce using rule 199
	precedence     reduce using rule 199
	prim           reduce using rule 199
	protocol       reduce using rule 199
	when           reduce using rule 199
	infixl         reduce using rule 199
	'->'           reduce using rule 199
	'%('           reduce using rule 199
	'['            reduce using rule 199
	'{'            reduce using rule 199
	'}'            reduce using rule 199
	'('            reduce using rule 199
	')'            reduce using rule 199
	'>'            reduce using rule 199
	':'            reduce using rule 199
	','            reduce using rule 199
	num            reduce using rule 199
	simple_id      reduce using rule 199
	mixed_id       reduce using rule 199
	string         reduce using rule 199
	char           reduce using rule 199
	%eof           reduce using rule 199


State 305

	TyStructField -> SimpleOrMixedId ':' . Ty           (rule 209)

	struct         shift, and enter state 128
	primtype       shift, and enter state 129
	'%('           shift, and enter state 130
	'('            shift, and enter state 131
	simple_id      shift, and enter state 132
	mixed_id       shift, and enter state 51

	TyTuple        goto state 122
	SimpleTy       goto state 123
	TyArrow        goto state 124
	Ty             goto state 347
	SimpleOrQualifiedIdgoto state 126
	SimpleOrQualifiedAlphaNumericIdgoto state 127
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 306

	TyStructFields -> TyStructFields TyStructField .    (rule 211)

	'}'            reduce using rule 211
	simple_id      reduce using rule 211
	mixed_id       reduce using rule 211


State 307

	SimpleTy -> struct '{' TyStructFields '}' .         (rule 200)

	import         reduce using rule 200
	type           reduce using rule 200
	interface      reduce using rule 200
	fun            reduce using rule 200
	imp            reduce using rule 200
	let            reduce using rule 200
	True           reduce using rule 200
	False          reduce using rule 200
	if             reduce using rule 200
	switch         reduce using rule 200
	cond           reduce using rule 200
	precedence     reduce using rule 200
	prim           reduce using rule 200
	protocol       reduce using rule 200
	when           reduce using rule 200
	infixl         reduce using rule 200
	'->'           reduce using rule 200
	'%('           reduce using rule 200
	'['            reduce using rule 200
	'{'            reduce using rule 200
	'}'            reduce using rule 200
	'('            reduce using rule 200
	')'            reduce using rule 200
	'>'            reduce using rule 200
	':'            reduce using rule 200
	','            reduce using rule 200
	num            reduce using rule 200
	simple_id      reduce using rule 200
	mixed_id       reduce using rule 200
	string         reduce using rule 200
	char           reduce using rule 200
	%eof           reduce using rule 200


State 308

	TyArgs -> '<' CommaSeparatedTys '>' .               (rule 197)

	import         reduce using rule 197
	type           reduce using rule 197
	interface      reduce using rule 197
	fun            reduce using rule 197
	imp            reduce using rule 197
	let            reduce using rule 197
	True           reduce using rule 197
	False          reduce using rule 197
	if             reduce using rule 197
	switch         reduce using rule 197
	cond           reduce using rule 197
	precedence     reduce using rule 197
	prim           reduce using rule 197
	protocol       reduce using rule 197
	when           reduce using rule 197
	infixl         reduce using rule 197
	'->'           reduce using rule 197
	'%('           reduce using rule 197
	'['            reduce using rule 197
	'{'            reduce using rule 197
	'}'            reduce using rule 197
	'('            reduce using rule 197
	')'            reduce using rule 197
	'>'            reduce using rule 197
	':'            reduce using rule 197
	','            reduce using rule 197
	num            reduce using rule 197
	simple_id      reduce using rule 197
	mixed_id       reduce using rule 197
	string         reduce using rule 197
	char           reduce using rule 197
	%eof           reduce using rule 197


State 309

	CommaSeparatedTys -> CommaSeparatedTys ',' . Ty     (rule 190)

	struct         shift, and enter state 128
	primtype       shift, and enter state 129
	'%('           shift, and enter state 130
	'('            shift, and enter state 131
	simple_id      shift, and enter state 132
	mixed_id       shift, and enter state 51

	TyTuple        goto state 122
	SimpleTy       goto state 123
	TyArrow        goto state 124
	Ty             goto state 346
	SimpleOrQualifiedIdgoto state 126
	SimpleOrQualifiedAlphaNumericIdgoto state 127
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 310

	Constraint -> when SimpleOrMixedId ':' . SimpleOrMixedId    (rule 51)

	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51

	SimpleOrMixedIdgoto state 345

State 311

	StructFieldInitializer -> SimpleOrMixedId '=' Exp ';' .    (rule 213)

	'}'            reduce using rule 213
	simple_id      reduce using rule 213
	mixed_id       reduce using rule 213


State 312

	CommaSeparatedSimpleOrMixedIds -> CommaSeparatedSimpleOrMixedIds . ',' SimpleOrMixedId    (rule 35)
	ImportSubset -> '(' CommaSeparatedSimpleOrMixedIds . ')'    (rule 45)

	')'            shift, and enter state 343
	','            shift, and enter state 344


State 313

	CommaSeparatedSimpleOrMixedIds -> SimpleOrMixedId .    (rule 34)

	')'            reduce using rule 34
	','            reduce using rule 34


State 314

	ImportClause -> ImportExceptClause .                (rule 41)

	except         reduce using rule 41
	renaming       reduce using rule 41
	'}'            reduce using rule 41


State 315

	ImportClause -> ImportRenamingClause .              (rule 42)

	except         reduce using rule 42
	renaming       reduce using rule 42
	'}'            reduce using rule 42


State 316

	ImportClauses -> ImportClause .                     (rule 43)

	except         reduce using rule 43
	renaming       reduce using rule 43
	'}'            reduce using rule 43


State 317

	ImportClauses -> ImportClauses . ImportClause       (rule 44)
	SelectiveImportExp -> ImportExp '{' ImportClauses . '}'    (rule 47)

	except         shift, and enter state 318
	renaming       shift, and enter state 319
	'}'            shift, and enter state 342

	ImportExceptClausegoto state 314
	ImportRenamingClausegoto state 315
	ImportClause   goto state 341

State 318

	ImportExceptClause -> except . '(' CommaSeparatedSimpleOrMixedIds ')'    (rule 36)

	'('            shift, and enter state 340


State 319

	ImportRenamingClause -> renaming . '(' CommaSeparatedRenamings ')'    (rule 40)

	'('            shift, and enter state 339


State 320

	SelectiveImportExp -> ImportExp ImportSubset '{' . ImportClauses '}'    (rule 46)

	except         shift, and enter state 318
	renaming       shift, and enter state 319

	ImportExceptClausegoto state 314
	ImportRenamingClausegoto state 315
	ImportClause   goto state 316
	ImportClauses  goto state 338

State 321

	PatExpList -> PatExp .                              (rule 186)

	')'            reduce using rule 186
	','            reduce using rule 186


State 322

	FunDef -> SimpleOrMixedId '(' PatExpList . ')' FunBody    (rule 147)
	PatExpList -> PatExpList . ',' PatExp               (rule 187)

	')'            shift, and enter state 336
	','            shift, and enter state 337


State 323

	ImportExp -> import SimpleOrQualifiedId '=' . simple_id    (rule 33)

	simple_id      shift, and enter state 335


State 324

	ProtoImp -> imp SimpleTy ':' . SimpleOrMixedId Constraints '{' ZeroOrMoreModuleLevelBindingExps '}'    (rule 57)

	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51

	SimpleOrMixedIdgoto state 334

State 325

	ModuleLevelBindingExp -> let PatExp '=' . LiteralExp    (rule 138)
	ModuleLevelBindingExp -> let PatExp '=' . LiteralListExp    (rule 139)

	True           shift, and enter state 37
	False          shift, and enter state 38
	'['            shift, and enter state 333
	num            shift, and enter state 49
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 52
	char           shift, and enter state 53

	LiteralListExp goto state 330
	LiteralExp     goto state 331
	SimpleOrQualifiedIdgoto state 332
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 326

	ProtoDec -> protocol SimpleOrMixedId on . SimpleOrMixedId Constraints ProtoDecBody    (rule 56)

	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51

	SimpleOrMixedIdgoto state 329

State 327

	FunDef -> infixl '(' SpecialId . ')' '(' PatExpList ')' FunBody    (rule 148)
	TyAnn -> infixl '(' SpecialId . ')' TyParams ':' Ty Constraints    (rule 154)

	')'            shift, and enter state 328


State 328

	FunDef -> infixl '(' SpecialId ')' . '(' PatExpList ')' FunBody    (rule 148)
	TyAnn -> infixl '(' SpecialId ')' . TyParams ':' Ty Constraints    (rule 154)

	'('            shift, and enter state 369
	'<'            shift, and enter state 97
	':'            reduce using rule 151

	TyParams       goto state 287

State 329

	ProtoDec -> protocol SimpleOrMixedId on SimpleOrMixedId . Constraints ProtoDecBody    (rule 56)

	when           shift, and enter state 214
			(reduce using rule 54)

	'{'            reduce using rule 54

	Constraint     goto state 212
	Constraints    goto state 368

State 330

	ModuleLevelBindingExp -> let PatExp '=' LiteralListExp .    (rule 139)

	import         reduce using rule 139
	type           reduce using rule 139
	interface      reduce using rule 139
	imp            reduce using rule 139
	let            reduce using rule 139
	precedence     reduce using rule 139
	protocol       reduce using rule 139
	infixl         reduce using rule 139
	'}'            reduce using rule 139
	simple_id      reduce using rule 139
	mixed_id       reduce using rule 139


State 331

	ModuleLevelBindingExp -> let PatExp '=' LiteralExp .    (rule 138)

	import         reduce using rule 138
	type           reduce using rule 138
	interface      reduce using rule 138
	imp            reduce using rule 138
	let            reduce using rule 138
	precedence     reduce using rule 138
	protocol       reduce using rule 138
	infixl         reduce using rule 138
	'}'            reduce using rule 138
	simple_id      reduce using rule 138
	mixed_id       reduce using rule 138


State 332

	LiteralExp -> SimpleOrQualifiedId .                 (rule 107)
	QualifiedId -> SimpleOrQualifiedId . '.' SimpleOrMixedId    (rule 221)

	import         reduce using rule 107
	type           reduce using rule 107
	interface      reduce using rule 107
	imp            reduce using rule 107
	let            reduce using rule 107
	precedence     reduce using rule 107
	protocol       reduce using rule 107
	infixl         reduce using rule 107
	']'            reduce using rule 107
	'}'            reduce using rule 107
	'.'            shift, and enter state 102
	','            reduce using rule 107
	simple_id      reduce using rule 107
	mixed_id       reduce using rule 107


State 333

	LiteralListExp -> '[' . CommaSeparatedLiteralExps ']'    (rule 101)

	True           shift, and enter state 37
	False          shift, and enter state 38
	']'            reduce using rule 100
	','            reduce using rule 100
	num            shift, and enter state 49
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 52
	char           shift, and enter state 53

	CommaSeparatedLiteralExpsgoto state 366
	LiteralExp     goto state 367
	SimpleOrQualifiedIdgoto state 332
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 334

	ProtoImp -> imp SimpleTy ':' SimpleOrMixedId . Constraints '{' ZeroOrMoreModuleLevelBindingExps '}'    (rule 57)

	when           shift, and enter state 214
			(reduce using rule 54)

	'{'            reduce using rule 54

	Constraint     goto state 212
	Constraints    goto state 365

State 335

	ImportExp -> import SimpleOrQualifiedId '=' simple_id .    (rule 33)

	import         reduce using rule 33
	type           reduce using rule 33
	interface      reduce using rule 33
	imp            reduce using rule 33
	let            reduce using rule 33
	precedence     reduce using rule 33
	protocol       reduce using rule 33
	infixl         reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	'('            reduce using rule 33
	simple_id      reduce using rule 33
	mixed_id       reduce using rule 33


State 336

	FunDef -> SimpleOrMixedId '(' PatExpList ')' . FunBody    (rule 147)

	'='            shift, and enter state 108

	FunBody        goto state 364

State 337

	PatExpList -> PatExpList ',' . PatExp               (rule 187)

	True           shift, and enter state 84
	False          shift, and enter state 85
	'%('           shift, and enter state 86
	'['            shift, and enter state 87
	'('            shift, and enter state 88
	'_'            shift, and enter state 89
	num            shift, and enter state 90
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 91
	char           shift, and enter state 92

	LiteralPatExp  goto state 75
	TuplePatExp    goto state 76
	AdtPatExp      goto state 77
	AtomPatExp     goto state 78
	ListPatExp     goto state 79
	PatExp         goto state 363
	SimpleOrQualifiedIdgoto state 81
	QualifiedId    goto state 82
	SimpleOrMixedIdgoto state 83

State 338

	ImportClauses -> ImportClauses . ImportClause       (rule 44)
	SelectiveImportExp -> ImportExp ImportSubset '{' ImportClauses . '}'    (rule 46)

	except         shift, and enter state 318
	renaming       shift, and enter state 319
	'}'            shift, and enter state 362

	ImportExceptClausegoto state 314
	ImportRenamingClausegoto state 315
	ImportClause   goto state 341

State 339

	ImportRenamingClause -> renaming '(' . CommaSeparatedRenamings ')'    (rule 40)

	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51

	Renaming       goto state 359
	CommaSeparatedRenamingsgoto state 360
	SimpleOrMixedIdgoto state 361

State 340

	ImportExceptClause -> except '(' . CommaSeparatedSimpleOrMixedIds ')'    (rule 36)

	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51

	CommaSeparatedSimpleOrMixedIdsgoto state 358
	SimpleOrMixedIdgoto state 313

State 341

	ImportClauses -> ImportClauses ImportClause .       (rule 44)

	except         reduce using rule 44
	renaming       reduce using rule 44
	'}'            reduce using rule 44


State 342

	SelectiveImportExp -> ImportExp '{' ImportClauses '}' .    (rule 47)

	import         reduce using rule 47
	type           reduce using rule 47
	interface      reduce using rule 47
	imp            reduce using rule 47
	let            reduce using rule 47
	precedence     reduce using rule 47
	protocol       reduce using rule 47
	infixl         reduce using rule 47
	'}'            reduce using rule 47
	simple_id      reduce using rule 47
	mixed_id       reduce using rule 47


State 343

	ImportSubset -> '(' CommaSeparatedSimpleOrMixedIds ')' .    (rule 45)

	import         reduce using rule 45
	type           reduce using rule 45
	interface      reduce using rule 45
	imp            reduce using rule 45
	let            reduce using rule 45
	precedence     reduce using rule 45
	protocol       reduce using rule 45
	infixl         reduce using rule 45
	'{'            reduce using rule 45
	'}'            reduce using rule 45
	simple_id      reduce using rule 45
	mixed_id       reduce using rule 45


State 344

	CommaSeparatedSimpleOrMixedIds -> CommaSeparatedSimpleOrMixedIds ',' . SimpleOrMixedId    (rule 35)

	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51

	SimpleOrMixedIdgoto state 357

State 345

	Constraint -> when SimpleOrMixedId ':' SimpleOrMixedId .    (rule 51)

	import         reduce using rule 51
	type           reduce using rule 51
	interface      reduce using rule 51
	fun            reduce using rule 51
	imp            reduce using rule 51
	let            reduce using rule 51
	True           reduce using rule 51
	False          reduce using rule 51
	if             reduce using rule 51
	switch         reduce using rule 51
	cond           reduce using rule 51
	precedence     reduce using rule 51
	prim           reduce using rule 51
	protocol       reduce using rule 51
	when           reduce using rule 51
	infixl         reduce using rule 51
	'%('           reduce using rule 51
	'['            reduce using rule 51
	'{'            reduce using rule 51
	'}'            reduce using rule 51
	'('            reduce using rule 51
	num            reduce using rule 51
	simple_id      reduce using rule 51
	mixed_id       reduce using rule 51
	string         reduce using rule 51
	char           reduce using rule 51
	%eof           reduce using rule 51


State 346

	CommaSeparatedTys -> CommaSeparatedTys ',' Ty .     (rule 190)

	')'            reduce using rule 190
	'>'            reduce using rule 190
	','            reduce using rule 190


State 347

	TyStructField -> SimpleOrMixedId ':' Ty .           (rule 209)

	'}'            reduce using rule 209
	simple_id      reduce using rule 209
	mixed_id       reduce using rule 209


State 348

	TyTupleRest -> TyTupleRest ',' Ty .                 (rule 193)

	')'            reduce using rule 193
	','            reduce using rule 193


State 349

	Constraints -> Constraints . Constraint             (rule 53)
	TyAnn -> SimpleOrMixedId '<' CommaSeparatedIds '>' ':' Ty Constraints .    (rule 153)

	import         reduce using rule 153
	type           reduce using rule 153
	interface      reduce using rule 153
	fun            reduce using rule 153
	imp            reduce using rule 153
	let            reduce using rule 153
	True           reduce using rule 153
	False          reduce using rule 153
	if             reduce using rule 153
	switch         reduce using rule 153
	cond           reduce using rule 153
	precedence     reduce using rule 153
	prim           reduce using rule 153
	protocol       reduce using rule 153
	when           shift, and enter state 214
	infixl         reduce using rule 153
	'%('           reduce using rule 153
	'['            reduce using rule 153
	'{'            reduce using rule 153
	'}'            reduce using rule 153
	'('            reduce using rule 153
	num            reduce using rule 153
	simple_id      reduce using rule 153
	mixed_id       reduce using rule 153
	string         reduce using rule 153
	char           reduce using rule 153
	%eof           reduce using rule 153

	Constraint     goto state 257

State 350

	AdtAlternative -> '|' SimpleOrMixedId '(' CommaSeparatedTys ')' .    (rule 180)

	import         reduce using rule 180
	type           reduce using rule 180
	interface      reduce using rule 180
	imp            reduce using rule 180
	let            reduce using rule 180
	precedence     reduce using rule 180
	protocol       reduce using rule 180
	infixl         reduce using rule 180
	'}'            reduce using rule 180
	'|'            reduce using rule 180
	simple_id      reduce using rule 180
	mixed_id       reduce using rule 180
	%eof           reduce using rule 180


State 351

	CaseClauses -> CaseClauses CaseClause .             (rule 161)

	True           reduce using rule 161
	False          reduce using rule 161
	'%('           reduce using rule 161
	'['            reduce using rule 161
	'}'            reduce using rule 161
	'('            reduce using rule 161
	'_'            reduce using rule 161
	num            reduce using rule 161
	simple_id      reduce using rule 161
	mixed_id       reduce using rule 161
	string         reduce using rule 161
	char           reduce using rule 161


State 352

	Exp -> switch '(' Exp ')' '{' CaseClauses '}' .     (rule 128)

	import         reduce using rule 128
	type           reduce using rule 128
	interface      reduce using rule 128
	fun            reduce using rule 128
	imp            reduce using rule 128
	let            reduce using rule 128
	True           reduce using rule 128
	False          reduce using rule 128
	if             reduce using rule 128
	switch         reduce using rule 128
	cond           reduce using rule 128
	precedence     reduce using rule 128
	prim           reduce using rule 128
	protocol       reduce using rule 128
	infixl         reduce using rule 128
	'->'           reduce using rule 128
	'%('           reduce using rule 128
	'['            reduce using rule 128
	']'            reduce using rule 128
	'{'            reduce using rule 128
	'}'            reduce using rule 128
	'('            reduce using rule 128
	')'            reduce using rule 128
	'<'            reduce using rule 128
	'>'            reduce using rule 128
	'|'            reduce using rule 128
	';'            reduce using rule 128
	'='            reduce using rule 128
	','            reduce using rule 128
	'_'            reduce using rule 128
	'@'            reduce using rule 128
	'#'            reduce using rule 128
	num            reduce using rule 128
	simple_id      reduce using rule 128
	mixed_id       reduce using rule 128
	special_id     reduce using rule 128
	string         reduce using rule 128
	char           reduce using rule 128
	%eof           reduce using rule 128


State 353

	CaseClause -> PatExp '->' . Exp                     (rule 162)

	fun            shift, and enter state 35
	True           shift, and enter state 37
	False          shift, and enter state 38
	if             shift, and enter state 39
	switch         shift, and enter state 40
	cond           shift, and enter state 41
	prim           shift, and enter state 43
	'%('           shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'('            shift, and enter state 48
	num            shift, and enter state 49
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 52
	char           shift, and enter state 53

	Block          goto state 8
	ListExp        goto state 11
	SingleParamFunHeadergoto state 12
	MultiParamFunHeadergoto state 13
	FunHeader      goto state 14
	LiteralExp     goto state 15
	AtomExp        goto state 16
	MemberAccessExpgoto state 17
	AppExp         goto state 18
	ConsExp        goto state 19
	CustomInfixExp goto state 20
	IfElseExp      goto state 21
	Exp            goto state 356
	SimpleOrQualifiedIdgoto state 29
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 354

	TyAnn -> infixl '(' SpecialId ')' TyParams ':' Ty . Constraints    (rule 154)

	import         reduce using rule 54
	type           reduce using rule 54
	interface      reduce using rule 54
	fun            reduce using rule 54
	imp            reduce using rule 54
	let            reduce using rule 54
	True           reduce using rule 54
	False          reduce using rule 54
	if             reduce using rule 54
	switch         reduce using rule 54
	cond           reduce using rule 54
	precedence     reduce using rule 54
	prim           reduce using rule 54
	protocol       reduce using rule 54
	when           shift, and enter state 214
			(reduce using rule 54)

	infixl         reduce using rule 54
	'%('           reduce using rule 54
	'['            reduce using rule 54
	'{'            reduce using rule 54
	'}'            reduce using rule 54
	'('            reduce using rule 54
	num            reduce using rule 54
	simple_id      reduce using rule 54
	mixed_id       reduce using rule 54
	string         reduce using rule 54
	char           reduce using rule 54
	%eof           reduce using rule 54

	Constraint     goto state 212
	Constraints    goto state 355

State 355

	Constraints -> Constraints . Constraint             (rule 53)
	TyAnn -> infixl '(' SpecialId ')' TyParams ':' Ty Constraints .    (rule 154)

	import         reduce using rule 154
	type           reduce using rule 154
	interface      reduce using rule 154
	fun            reduce using rule 154
	imp            reduce using rule 154
	let            reduce using rule 154
	True           reduce using rule 154
	False          reduce using rule 154
	if             reduce using rule 154
	switch         reduce using rule 154
	cond           reduce using rule 154
	precedence     reduce using rule 154
	prim           reduce using rule 154
	protocol       reduce using rule 154
	when           shift, and enter state 214
	infixl         reduce using rule 154
	'%('           reduce using rule 154
	'['            reduce using rule 154
	'{'            reduce using rule 154
	'}'            reduce using rule 154
	'('            reduce using rule 154
	num            reduce using rule 154
	simple_id      reduce using rule 154
	mixed_id       reduce using rule 154
	string         reduce using rule 154
	char           reduce using rule 154
	%eof           reduce using rule 154

	Constraint     goto state 257

State 356

	CaseClause -> PatExp '->' Exp .                     (rule 162)

	True           reduce using rule 162
	False          reduce using rule 162
	'%('           reduce using rule 162
	'['            reduce using rule 162
	'}'            reduce using rule 162
	'('            reduce using rule 162
	'_'            reduce using rule 162
	num            reduce using rule 162
	simple_id      reduce using rule 162
	mixed_id       reduce using rule 162
	string         reduce using rule 162
	char           reduce using rule 162


State 357

	CommaSeparatedSimpleOrMixedIds -> CommaSeparatedSimpleOrMixedIds ',' SimpleOrMixedId .    (rule 35)

	')'            reduce using rule 35
	','            reduce using rule 35


State 358

	CommaSeparatedSimpleOrMixedIds -> CommaSeparatedSimpleOrMixedIds . ',' SimpleOrMixedId    (rule 35)
	ImportExceptClause -> except '(' CommaSeparatedSimpleOrMixedIds . ')'    (rule 36)

	')'            shift, and enter state 379
	','            shift, and enter state 344


State 359

	CommaSeparatedRenamings -> Renaming .               (rule 38)

	')'            reduce using rule 38
	','            reduce using rule 38


State 360

	CommaSeparatedRenamings -> CommaSeparatedRenamings . ',' Renaming    (rule 39)
	ImportRenamingClause -> renaming '(' CommaSeparatedRenamings . ')'    (rule 40)

	')'            shift, and enter state 377
	','            shift, and enter state 378


State 361

	Renaming -> SimpleOrMixedId . '->' SimpleOrMixedId    (rule 37)

	'->'           shift, and enter state 376


State 362

	SelectiveImportExp -> ImportExp ImportSubset '{' ImportClauses '}' .    (rule 46)

	import         reduce using rule 46
	type           reduce using rule 46
	interface      reduce using rule 46
	imp            reduce using rule 46
	let            reduce using rule 46
	precedence     reduce using rule 46
	protocol       reduce using rule 46
	infixl         reduce using rule 46
	'}'            reduce using rule 46
	simple_id      reduce using rule 46
	mixed_id       reduce using rule 46


State 363

	PatExpList -> PatExpList ',' PatExp .               (rule 187)

	')'            reduce using rule 187
	','            reduce using rule 187


State 364

	FunDef -> SimpleOrMixedId '(' PatExpList ')' FunBody .    (rule 147)

	import         reduce using rule 147
	type           reduce using rule 147
	interface      reduce using rule 147
	imp            reduce using rule 147
	let            reduce using rule 147
	precedence     reduce using rule 147
	protocol       reduce using rule 147
	infixl         reduce using rule 147
	'}'            reduce using rule 147
	simple_id      reduce using rule 147
	mixed_id       reduce using rule 147


State 365

	Constraints -> Constraints . Constraint             (rule 53)
	ProtoImp -> imp SimpleTy ':' SimpleOrMixedId Constraints . '{' ZeroOrMoreModuleLevelBindingExps '}'    (rule 57)

	when           shift, and enter state 214
	'{'            shift, and enter state 375

	Constraint     goto state 257

State 366

	CommaSeparatedLiteralExps -> CommaSeparatedLiteralExps . ',' LiteralExp    (rule 99)
	LiteralListExp -> '[' CommaSeparatedLiteralExps . ']'    (rule 101)

	']'            shift, and enter state 373
	','            shift, and enter state 374


State 367

	CommaSeparatedLiteralExps -> LiteralExp .           (rule 98)

	']'            reduce using rule 98
	','            reduce using rule 98


State 368

	Constraints -> Constraints . Constraint             (rule 53)
	ProtoDec -> protocol SimpleOrMixedId on SimpleOrMixedId Constraints . ProtoDecBody    (rule 56)

	when           shift, and enter state 214
	'{'            shift, and enter state 372

	Constraint     goto state 257
	ProtoDecBody   goto state 371

State 369

	FunDef -> infixl '(' SpecialId ')' '(' . PatExpList ')' FunBody    (rule 148)

	True           shift, and enter state 84
	False          shift, and enter state 85
	'%('           shift, and enter state 86
	'['            shift, and enter state 87
	'('            shift, and enter state 88
	')'            reduce using rule 188
	','            reduce using rule 188
	'_'            shift, and enter state 89
	num            shift, and enter state 90
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 91
	char           shift, and enter state 92

	LiteralPatExp  goto state 75
	TuplePatExp    goto state 76
	AdtPatExp      goto state 77
	AtomPatExp     goto state 78
	ListPatExp     goto state 79
	PatExp         goto state 321
	PatExpList     goto state 370
	SimpleOrQualifiedIdgoto state 81
	QualifiedId    goto state 82
	SimpleOrMixedIdgoto state 83

State 370

	FunDef -> infixl '(' SpecialId ')' '(' PatExpList . ')' FunBody    (rule 148)
	PatExpList -> PatExpList . ',' PatExp               (rule 187)

	')'            shift, and enter state 387
	','            shift, and enter state 337


State 371

	ProtoDec -> protocol SimpleOrMixedId on SimpleOrMixedId Constraints ProtoDecBody .    (rule 56)

	import         reduce using rule 56
	type           reduce using rule 56
	interface      reduce using rule 56
	imp            reduce using rule 56
	let            reduce using rule 56
	precedence     reduce using rule 56
	protocol       reduce using rule 56
	infixl         reduce using rule 56
	'}'            reduce using rule 56
	simple_id      reduce using rule 56
	mixed_id       reduce using rule 56


State 372

	ProtoDecBody -> '{' . ZeroOrMoreTyAnns '}'          (rule 55)

	infixl         shift, and enter state 44
	'}'            reduce using rule 158
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51

	TyAnn          goto state 274
	OneOrMoreTyAnnsgoto state 385
	ZeroOrMoreTyAnnsgoto state 386
	SimpleOrMixedIdgoto state 276

State 373

	LiteralListExp -> '[' CommaSeparatedLiteralExps ']' .    (rule 101)

	import         reduce using rule 101
	type           reduce using rule 101
	interface      reduce using rule 101
	imp            reduce using rule 101
	let            reduce using rule 101
	precedence     reduce using rule 101
	protocol       reduce using rule 101
	infixl         reduce using rule 101
	'}'            reduce using rule 101
	simple_id      reduce using rule 101
	mixed_id       reduce using rule 101


State 374

	CommaSeparatedLiteralExps -> CommaSeparatedLiteralExps ',' . LiteralExp    (rule 99)

	True           shift, and enter state 37
	False          shift, and enter state 38
	num            shift, and enter state 49
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51
	string         shift, and enter state 52
	char           shift, and enter state 53

	LiteralExp     goto state 384
	SimpleOrQualifiedIdgoto state 332
	QualifiedId    goto state 30
	SimpleOrMixedIdgoto state 56

State 375

	ProtoImp -> imp SimpleTy ':' SimpleOrMixedId Constraints '{' . ZeroOrMoreModuleLevelBindingExps '}'    (rule 57)

	import         shift, and enter state 235
			(reduce using rule 145)

	let            shift, and enter state 237
			(reduce using rule 145)

	infixl         shift, and enter state 239
			(reduce using rule 145)

	'}'            reduce using rule 145
	simple_id      shift, and enter state 50
			(reduce using rule 145)

	mixed_id       shift, and enter state 51
			(reduce using rule 145)


	ImportExp      goto state 224
	SelectiveImportExpgoto state 225
	ModuleLevelBindingExpgoto state 382
	ZeroOrMoreModuleLevelBindingExpsgoto state 383
	FunDef         goto state 230
	TyAnn          goto state 231
	SimpleOrMixedIdgoto state 234

State 376

	Renaming -> SimpleOrMixedId '->' . SimpleOrMixedId    (rule 37)

	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51

	SimpleOrMixedIdgoto state 381

State 377

	ImportRenamingClause -> renaming '(' CommaSeparatedRenamings ')' .    (rule 40)

	except         reduce using rule 40
	renaming       reduce using rule 40
	'}'            reduce using rule 40


State 378

	CommaSeparatedRenamings -> CommaSeparatedRenamings ',' . Renaming    (rule 39)

	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51

	Renaming       goto state 380
	SimpleOrMixedIdgoto state 361

State 379

	ImportExceptClause -> except '(' CommaSeparatedSimpleOrMixedIds ')' .    (rule 36)

	except         reduce using rule 36
	renaming       reduce using rule 36
	'}'            reduce using rule 36


State 380

	CommaSeparatedRenamings -> CommaSeparatedRenamings ',' Renaming .    (rule 39)

	')'            reduce using rule 39
	','            reduce using rule 39


State 381

	Renaming -> SimpleOrMixedId '->' SimpleOrMixedId .    (rule 37)

	')'            reduce using rule 37
	','            reduce using rule 37


State 382

	ZeroOrMoreModuleLevelBindingExps -> ModuleLevelBindingExp .    (rule 143)

	import         reduce using rule 143
	let            reduce using rule 143
	infixl         reduce using rule 143
	'}'            reduce using rule 143
	simple_id      reduce using rule 143
	mixed_id       reduce using rule 143


State 383

	ProtoImp -> imp SimpleTy ':' SimpleOrMixedId Constraints '{' ZeroOrMoreModuleLevelBindingExps . '}'    (rule 57)
	ZeroOrMoreModuleLevelBindingExps -> ZeroOrMoreModuleLevelBindingExps . ModuleLevelBindingExp    (rule 144)

	import         shift, and enter state 235
	let            shift, and enter state 237
	infixl         shift, and enter state 239
	'}'            shift, and enter state 391
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51

	ImportExp      goto state 224
	SelectiveImportExpgoto state 225
	ModuleLevelBindingExpgoto state 390
	FunDef         goto state 230
	TyAnn          goto state 231
	SimpleOrMixedIdgoto state 234

State 384

	CommaSeparatedLiteralExps -> CommaSeparatedLiteralExps ',' LiteralExp .    (rule 99)

	']'            reduce using rule 99
	','            reduce using rule 99


State 385

	OneOrMoreTyAnns -> OneOrMoreTyAnns . TyAnn          (rule 156)
	ZeroOrMoreTyAnns -> OneOrMoreTyAnns .               (rule 157)

	infixl         shift, and enter state 44
	'}'            reduce using rule 157
	simple_id      shift, and enter state 50
	mixed_id       shift, and enter state 51

	TyAnn          goto state 296
	SimpleOrMixedIdgoto state 276

State 386

	ProtoDecBody -> '{' ZeroOrMoreTyAnns . '}'          (rule 55)

	'}'            shift, and enter state 389


State 387

	FunDef -> infixl '(' SpecialId ')' '(' PatExpList ')' . FunBody    (rule 148)

	'='            shift, and enter state 108

	FunBody        goto state 388

State 388

	FunDef -> infixl '(' SpecialId ')' '(' PatExpList ')' FunBody .    (rule 148)

	import         reduce using rule 148
	type           reduce using rule 148
	interface      reduce using rule 148
	imp            reduce using rule 148
	let            reduce using rule 148
	precedence     reduce using rule 148
	protocol       reduce using rule 148
	infixl         reduce using rule 148
	'}'            reduce using rule 148
	simple_id      reduce using rule 148
	mixed_id       reduce using rule 148


State 389

	ProtoDecBody -> '{' ZeroOrMoreTyAnns '}' .          (rule 55)

	import         reduce using rule 55
	type           reduce using rule 55
	interface      reduce using rule 55
	imp            reduce using rule 55
	let            reduce using rule 55
	precedence     reduce using rule 55
	protocol       reduce using rule 55
	infixl         reduce using rule 55
	'}'            reduce using rule 55
	simple_id      reduce using rule 55
	mixed_id       reduce using rule 55


State 390

	ZeroOrMoreModuleLevelBindingExps -> ZeroOrMoreModuleLevelBindingExps ModuleLevelBindingExp .    (rule 144)

	import         reduce using rule 144
	let            reduce using rule 144
	infixl         reduce using rule 144
	'}'            reduce using rule 144
	simple_id      reduce using rule 144
	mixed_id       reduce using rule 144


State 391

	ProtoImp -> imp SimpleTy ':' SimpleOrMixedId Constraints '{' ZeroOrMoreModuleLevelBindingExps '}' .    (rule 57)

	import         reduce using rule 57
	type           reduce using rule 57
	interface      reduce using rule 57
	imp            reduce using rule 57
	let            reduce using rule 57
	precedence     reduce using rule 57
	protocol       reduce using rule 57
	infixl         reduce using rule 57
	'}'            reduce using rule 57
	simple_id      reduce using rule 57
	mixed_id       reduce using rule 57


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 236
Number of terminals: 54
Number of non-terminals: 99
Number of states: 392
